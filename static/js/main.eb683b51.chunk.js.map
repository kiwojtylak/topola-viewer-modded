{"version":3,"sources":["util/error.ts","util/gedcom_util.ts","util/date_util.ts","datasource/data_source.ts","util/age_util.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/top_bar.tsx","menu/url_menu.tsx","config.tsx","chart.tsx","app.tsx","index.tsx","datasource/load_data.ts"],"names":["TopolaError","code","message","args","Error","pointerToId","pointer","substring","length","idToIndiMap","data","map","Map","indis","forEach","indi","set","id","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","compareDates","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","has","title","startsWith","filterImage","convertGedcom","parseGedcom","json","gedcomEntriesToJson","chartData","getSoftware","sour","name","getName","person","names","filter","subEntry","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","DATE_QUALIFIERS","formatDate","date","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","dateElement","join","lowerCaseQualifier","formatMessage","defaultMessage","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","areDateRangesOverlapped","range1","range2","isValidDateOrRange","isDateRangeClosed","range","Date","DataSourceEnum","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","e","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","size","closeIcon","Icon","color","open","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","line","index","properties","target","eventSources","sources","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","event","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","render","Tab","Pane","notes","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","type","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","eventNotes","toEvent","family","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","events","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","getMultilineDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","resolve","reject","PARENT_READY","window","parent","postMessage","READY","GEDCOM","loadGedcom","Promise","addEventListener","onMessage","getI18nMessage","error","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","initMultiLingualLunrWithoutTrimmer","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","languages","pipelineFunctions","searchPipelineFunctions","language","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","apply","searchPipeline","query","split","s","slice","getNameLine","trim","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","generation","noResultsMessage","placeholder","selectFirstResult","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","gedcomFile","file","loadFile","URL","createObjectURL","imageFileNames","keys","hash","md5","state","htmlFor","accept","multiple","onChange","ScreenSize","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","values","link","href","Actions","Button","secondary","primary","TopBar","chartMenus","screenSize","showingChart","LARGE","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","onCenterView","SMALL","Divider","fileMenus","standalone","greaterThanOrEqual","inverted","at","icon","ChartColors","Ids","Sex","DEFAULT_CONFIG","COLOR_BY_GENERATION","SHOW","sex","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","v","k","ID_ARG","HIDE","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","onload","inlineImage","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","getElementsByTagName","all","loadImage","drawImageOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","startIndi","selection","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","hideIds","hideSex","AppState","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getArguments","getParamFromSearch","view","chartTypes","embedded","sourceSpec","GEDCOM_URL","handleCors","UPLOADED","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","de","messages_de","fr","messages_fr","it","messages_it","es","messages_es","pl","messages_pl","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","toggleDetails","shouldHideIds","shouldHideSex","hideId","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","embeddedDataSource","isNewData","newSourceSpec","newSelection","spec","loadData","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","c","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","remove","exact","path","prepareData","cacheId","serializedData","JSON","stringify","sessionStorage","setItem","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","cachedData","getItem","parse","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText"],"mappings":"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","file":"static/js/main.eb683b51.chunk.js","sourcesContent":["/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n    constructor(\n        public readonly code: string,\n        message: string,\n        public readonly args: { [key: string]: string } = {},\n    ) {\n        super(message);\n    }\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n    gedcomEntriesToJson,\n    JsonFam,\n    JsonGedcomData,\n    JsonImage,\n    JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n    /** The HEAD entry. */\n    head: GedcomEntry;\n    /** INDI entries mapped by id. */\n    indis: { [key: string]: GedcomEntry };\n    /** FAM entries mapped by id. */\n    fams: { [key: string]: GedcomEntry };\n    /** Other entries mapped by id, e.g. NOTE, SOUR. */\n    other: { [key: string]: GedcomEntry };\n}\n\nexport interface TopolaData {\n    chartData: JsonGedcomData;\n    gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n    return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n    const map = new Map<string, JsonIndi>();\n    data.indis.forEach((indi) => {\n        map.set(indi.id, indi);\n    });\n    return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n    const map = new Map<string, JsonFam>();\n    data.fams.forEach((fam) => {\n        map.set(fam.id, fam);\n    });\n    return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n    const head = entries.find((entry) => entry.tag === 'HEAD')!;\n    const indis: { [key: string]: GedcomEntry } = {};\n    const fams: { [key: string]: GedcomEntry } = {};\n    const other: { [key: string]: GedcomEntry } = {};\n    entries.forEach((entry) => {\n        if (entry.tag === 'INDI') {\n            indis[pointerToId(entry.pointer)] = entry;\n        } else if (entry.tag === 'FAM') {\n            fams[pointerToId(entry.pointer)] = entry;\n        } else if (entry.pointer) {\n            other[pointerToId(entry.pointer)] = entry;\n        }\n    });\n    return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n\n/** Birthdate comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n    const indiMap = idToIndiMap(gedcom);\n\n    return (indiId1: string, indiId2: string) => {\n        const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n        const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n        return (\n            compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n            strcmp(indiId1, indiId2)\n        );\n    };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n    const famMap = idToFamMap(gedcom);\n\n    return (famId1: string, famId2: string) => {\n        const fam1: JsonFam | undefined = famMap.get(famId1);\n        const fam2: JsonFam | undefined = famMap.get(famId2);\n        return (\n            compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n            strcmp(famId1, famId2)\n        );\n    };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n    fam: JsonFam,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!fam.children) {\n        return fam;\n    }\n    const newChildren = fam.children.sort(comparator);\n    return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = birthDatesComparator(gedcom);\n    const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n    return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n    indi: JsonIndi,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!indi.fams) {\n        return indi;\n    }\n    const newFams = indi.fams.sort(comparator);\n    return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = marriageDatesComparator(gedcom);\n    const newIndis = gedcom.indis.map((indi) =>\n        sortIndiSpouses(indi, comparator),\n    );\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    getterFunction: (gedcom: GedcomData) => { [key: string]: GedcomEntry },\n) {\n    if (entry.data) {\n        const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n        if (dereferenced) {\n            return dereferenced;\n        }\n    }\n    return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n    const result = [entry.data];\n    entry.tree.forEach((subentry) => {\n        if (subentry.tag === 'CONC' && subentry.data) {\n            const last = result.length - 1;\n            result[last] += subentry.data;\n        } else if (subentry.tag === 'CONT' && subentry.data) {\n            result.push(subentry.data);\n        }\n    });\n    return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n    return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n    const lowerName = fileName.toLowerCase();\n    return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n    if (!indi.images || indi.images.length === 0) {\n        return indi;\n    }\n    const newImages: JsonImage[] = [];\n    indi.images.forEach((image) => {\n        const filePath = image.url.replaceAll('\\\\', '/');\n        const fileName = filePath.match(/[^/]*$/)![0];\n        // If the image file has been loaded into memory, use it.\n        if (images.has(filePath)) {\n            newImages.push({url: images.get(filePath)!, title: image.title});\n        } else if (images.has(fileName)) {\n            newImages.push({url: images.get(fileName)!, title: image.title});\n        } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n            newImages.push(image);\n        }\n    });\n    return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n    gedcom: JsonGedcomData,\n    images: Map<string, string>,\n): JsonGedcomData {\n    const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n    gedcom: string,\n    images: Map<string, string>,\n): TopolaData {\n    const entries = parseGedcom(gedcom);\n    const json = gedcomEntriesToJson(entries);\n    if (\n        !json ||\n        !json.indis ||\n        !json.indis.length ||\n        !json.fams ||\n        !json.fams.length\n    ) {\n        throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n    }\n\n    return {\n        chartData: filterImages(normalizeGedcom(json), images),\n        gedcom: prepareGedcom(entries),\n    };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n    const sour =\n        head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n    const name =\n        sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n    return (name && name.data) || null;\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n    const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n    const notMarriedName = names.find(\n        (subEntry) =>\n            subEntry.tree.filter(\n                (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n            ).length === 0,\n    );\n    const name = notMarriedName || names[0];\n    return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n    const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n\n    const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\n        ?.data;\n\n    return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(objectEntry: GedcomEntry): GedcomEntry | undefined {\n    return objectEntry.tree.find(\n        (entry) =>\n            entry.tag === 'FILE' &&\n            entry.data.startsWith('http') &&\n            isImageFile(entry.data),\n    );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n    ['abt', 'about'],\n    ['cal', 'calculated'],\n    ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n    const hasDay = date.day !== undefined;\n    const hasMonth = date.month !== undefined;\n    const hasYear = date.year !== undefined;\n    if (!hasDay && !hasMonth && !hasYear) {\n        return date.text || '';\n    }\n    const dateObject = toDateObject(date);\n    const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n    const formatOptions: Intl.DateTimeFormatOptions = {\n        day: hasDay ? 'numeric' : undefined,\n        month: hasMonth ? 'long' : undefined,\n        year: hasYear ? 'numeric' : undefined,\n    };\n    const translatedDate = new Intl.DateTimeFormat(\n        intl.locale,\n        formatOptions,\n    ).format(dateObject);\n\n    return [translatedQualifier, translatedDate]\n        .filter((dateElement) => dateElement)\n        .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to;\n    const translatedFromDate = fromDate && formatDate(fromDate, intl);\n    const translatedToDate = toDate && formatDate(toDate, intl);\n    if (translatedFromDate && translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.between',\n                defaultMessage: 'between {from} and {to}',\n            },\n            {from: translatedFromDate, to: translatedToDate},\n        );\n    }\n    if (translatedFromDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.after',\n                defaultMessage: 'after {from}',\n            },\n            {from: translatedFromDate},\n        );\n    }\n    if (translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.before',\n                defaultMessage: 'before {to}',\n            },\n            {to: translatedToDate},\n        );\n    }\n    return '';\n}\n\nexport function formatDateQualifier(\n    qualifier: string | undefined,\n    intl: IntlShape,\n): string {\n    const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n    return (\n        (lowerCaseQualifier &&\n            intl.formatMessage({\n                id: `date.${lowerCaseQualifier}`,\n                defaultMessage:\n                    DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n            })) ||\n        ''\n    );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n    intl: IntlShape,\n): string {\n    if (!dateOrRange) {\n        return '';\n    }\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, intl);\n    }\n    if (dateOrRange.dateRange) {\n        return formatDateRage(dateOrRange.dateRange, intl);\n    }\n    return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n    return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n    date1: TopolaDate | undefined,\n    date2: TopolaDate | undefined,\n): number {\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n        return 0;\n    }\n    if (date1.year !== date2.year) {\n        return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n        return 0;\n    }\n    if (date1.month !== date2.month) {\n        return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n        return date1.month - date2.month;\n    }\n    return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n    firstDateOrRange: DateOrRange | undefined,\n    secondDateOrRange: DateOrRange | undefined,\n): number {\n    const date1 =\n        firstDateOrRange &&\n        (firstDateOrRange.date ||\n            (firstDateOrRange.dateRange &&\n                (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n    const date2 =\n        secondDateOrRange &&\n        (secondDateOrRange.date ||\n            (secondDateOrRange.dateRange &&\n                (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n    return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n    range1: DateRange,\n    range2: DateRange,\n): boolean {\n    return (\n        compareTopolaDates(range1.from, range2.to) <= 0 &&\n        compareTopolaDates(range1.to, range2.from) >= 0\n    );\n}\n\nexport function isValidDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n): boolean {\n    // invalid when range is closed and start is before end\n    if (isDateRangeClosed(dateOrRange?.dateRange)) {\n        return (\n            compareTopolaDates(\n                dateOrRange?.dateRange?.from,\n                dateOrRange?.dateRange?.to,\n            ) <= 0\n        );\n    }\n    //valid when there is exact date or date range has start or end defined\n    return !!(\n        dateOrRange?.date ||\n        dateOrRange?.dateRange?.from ||\n        dateOrRange?.dateRange?.to\n    );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n    return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n    return new Date(\n        date.year !== undefined ? date.year! : 0,\n        date.month !== undefined ? date.month! - 1 : 0,\n        date.day !== undefined ? date.day! : 1,\n    );\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n    UPLOADED,\n    GEDCOM_URL,\n    EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n    spec: SourceSpecT;\n    selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n    /**\n     * Returns true if the application is now loading a completely new data set\n     * and the existing one should be wiped.\n     */\n    isNewData(\n        newSource: SourceSelection<SourceSpecT>,\n        oldSource: SourceSelection<SourceSpecT>,\n        data?: TopolaData,\n    ): boolean;\n\n    /** Loads data from the data source. */\n    loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import {Date as TopolaDate} from 'topola/dist/data';\nimport {IntlShape} from 'react-intl';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n    areDateRangesOverlapped,\n    compareDates,\n    formatDateQualifier,\n    isDateRangeClosed,\n    isValidDateOrRange,\n    toDateObject,\n} from './date_util';\n\nfunction formatExactAge(\n    birthDate: TopolaDate,\n    deathDate: TopolaDate,\n    intl: IntlShape,\n): string {\n    const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n    const qualifier = birthDate.qualifier || deathDate.qualifier;\n    const translatedQualifier =\n        qualifier && formatDateQualifier(qualifier, intl) + ' ';\n\n    return intl.formatMessage(\n        {\n            id: 'age.exact',\n            defaultMessage:\n                '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\n        },\n        {age: ageInYears, qualifier: translatedQualifier},\n    );\n}\n\nfunction formatAgeMoreThan(\n    birthDate: TopolaDate,\n    deathDate: TopolaDate,\n    intl: IntlShape,\n): string {\n    const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n    return intl.formatMessage(\n        {\n            id: 'age.more',\n            defaultMessage:\n                'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\n        },\n        {age: ageInYears},\n    );\n}\n\nfunction formatAgeLessThan(\n    birthDate: TopolaDate,\n    deathDate: TopolaDate,\n    intl: IntlShape,\n): string {\n    const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n    return intl.formatMessage(\n        {\n            id: 'age.less',\n            defaultMessage:\n                'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\n        },\n        {age: ageInYears},\n    );\n}\n\nfunction formatAgeBetween(\n    birthDateFrom: TopolaDate,\n    birthDateTo: TopolaDate,\n    deathDateFrom: TopolaDate,\n    deathDateTo: TopolaDate,\n    intl: IntlShape,\n): string {\n    const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\n    const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\n    return intl.formatMessage(\n        {\n            id: 'age.between',\n            defaultMessage:\n                'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\n        },\n        {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\n    );\n}\n\nfunction canCalculateAge(\n    birthDate: DateOrRange | undefined,\n    deathDate: DateOrRange | undefined,\n): boolean {\n    if (birthDate && deathDate) {\n        // cannot calculate if there is no valid birth or death date\n        if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\n            return false;\n        }\n        //cannot calculate if death date is before birth date\n        if (compareDates(birthDate, deathDate) > 0) {\n            return false;\n        }\n        // cannot calculate if closed date range for birth or death are overlapping\n        if (\n            birthDate.dateRange &&\n            deathDate.dateRange &&\n            isDateRangeClosed(birthDate?.dateRange) &&\n            isDateRangeClosed(deathDate?.dateRange)\n        ) {\n            return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction calcDateDifferenceInYears(\n    firstDate: TopolaDate,\n    secondDate: TopolaDate,\n): number {\n    const firstDateObject = toDateObject(firstDate);\n    const secondDateObject = toDateObject(secondDate);\n\n    const startYear = firstDateObject.getUTCFullYear();\n\n    let yearDiff = secondDateObject.getUTCFullYear() - startYear;\n    let monthDiff =\n        secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\n    if (monthDiff < 0) {\n        yearDiff--;\n        monthDiff += 12;\n    }\n    const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\n    if (dayDiff < 0) {\n        if (monthDiff <= 0) {\n            yearDiff--;\n        }\n    }\n    return Math.abs(yearDiff);\n}\n\nexport function calcAge(\n    birthGedcomDate: string | undefined,\n    deathGedcomDate: string | undefined,\n    intl: IntlShape,\n): string | undefined {\n    if (birthGedcomDate && deathGedcomDate) {\n        const birthDateOrRange = getDate(birthGedcomDate);\n        const deathDateOrRange = getDate(deathGedcomDate);\n        if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\n            if (birthDateOrRange?.date) {\n                if (deathDateOrRange?.date) {\n                    return formatExactAge(\n                        birthDateOrRange.date,\n                        deathDateOrRange.date,\n                        intl,\n                    );\n                }\n                if (\n                    deathDateOrRange?.dateRange?.from &&\n                    deathDateOrRange.dateRange?.to\n                ) {\n                    return formatAgeBetween(\n                        birthDateOrRange.date,\n                        birthDateOrRange.date,\n                        deathDateOrRange?.dateRange?.from,\n                        deathDateOrRange?.dateRange?.to,\n                        intl,\n                    );\n                }\n                if (deathDateOrRange?.dateRange?.from) {\n                    return formatAgeMoreThan(\n                        birthDateOrRange.date,\n                        deathDateOrRange.dateRange?.from,\n                        intl,\n                    );\n                }\n                if (deathDateOrRange?.dateRange?.to) {\n                    return formatAgeLessThan(\n                        birthDateOrRange.date,\n                        deathDateOrRange.dateRange?.to,\n                        intl,\n                    );\n                }\n            }\n            if (\n                birthDateOrRange?.dateRange?.from &&\n                birthDateOrRange?.dateRange?.to\n            ) {\n                if (deathDateOrRange?.date) {\n                    return formatAgeBetween(\n                        birthDateOrRange?.dateRange?.from,\n                        birthDateOrRange?.dateRange?.to,\n                        deathDateOrRange?.date,\n                        deathDateOrRange?.date,\n                        intl,\n                    );\n                }\n                if (\n                    deathDateOrRange?.dateRange?.from &&\n                    deathDateOrRange.dateRange?.to\n                ) {\n                    return formatAgeBetween(\n                        birthDateOrRange?.dateRange?.from,\n                        birthDateOrRange?.dateRange?.to,\n                        deathDateOrRange?.dateRange?.from,\n                        deathDateOrRange?.dateRange?.to,\n                        intl,\n                    );\n                }\n                if (deathDateOrRange?.dateRange?.from) {\n                    return formatAgeMoreThan(\n                        birthDateOrRange.dateRange?.to,\n                        deathDateOrRange.dateRange?.from,\n                        intl,\n                    );\n                }\n                if (deathDateOrRange?.dateRange?.to) {\n                    return formatAgeLessThan(\n                        birthDateOrRange.dateRange?.from,\n                        deathDateOrRange.dateRange?.to,\n                        intl,\n                    );\n                }\n            }\n            if (birthDateOrRange?.dateRange?.from) {\n                if (deathDateOrRange?.date) {\n                    return formatAgeLessThan(\n                        birthDateOrRange.dateRange?.from,\n                        deathDateOrRange.date,\n                        intl,\n                    );\n                }\n                if (deathDateOrRange?.dateRange?.to) {\n                    return formatAgeLessThan(\n                        birthDateOrRange.dateRange?.from,\n                        deathDateOrRange.dateRange?.to,\n                        intl,\n                    );\n                }\n            }\n            if (birthDateOrRange?.dateRange?.to) {\n                if (deathDateOrRange?.date) {\n                    return formatAgeMoreThan(\n                        birthDateOrRange?.dateRange?.to,\n                        deathDateOrRange.date,\n                        intl,\n                    );\n                }\n                if (deathDateOrRange?.dateRange?.from) {\n                    return formatAgeMoreThan(\n                        birthDateOrRange?.dateRange?.to,\n                        deathDateOrRange.dateRange?.from,\n                        intl,\n                    );\n                }\n            }\n        }\n    }\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n    ['ADOP', 'Adoption'],\n    ['BAPM', 'Baptism'],\n    ['BIRT', 'Birth'],\n    ['BURI', 'Burial'],\n    ['CENS', 'Census'],\n    ['CHR', 'Christening'],\n    ['CREM', 'Cremation'],\n    ['DEAT', 'Death'],\n    ['EDUC', 'Education'],\n    ['EMAIL', 'E-mail'],\n    ['EMIG', 'Emigration'],\n    ['EVEN', 'Event'],\n    ['FACT', 'Fact'],\n    ['IMMI', 'Immigration'],\n    ['MARR', 'Marriage'],\n    ['MARS', 'Marriage settlement'],\n    ['ETHN', 'Ethnic'],\n    ['TRIB', 'Clan'],\n    ['LANG', 'Language'],\n    ['DIV', 'Divorce'],\n    ['MILT', 'Military services'],\n    ['NATU', 'Naturalization'],\n    ['OCCU', 'Occupation'],\n    ['TITL', 'Title'],\n    ['WWW', 'WWW'],\n    ['birth', 'Birth name'],\n    ['married', 'Married name'],\n    ['maiden', 'Maiden name'],\n    ['immigrant', 'Immigrant name'],\n    ['aka', 'Also known as'],\n]);\n\ninterface Props {\n    tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n    const normalizedTag = props.tag.replace(/_/g, '');\n    return (\n        <FormattedMessage\n            id={`gedcom.${normalizedTag}`}\n            defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n        />\n    );\n}\n","import {\n    Container,\n    Icon,\n    Image,\n    Label,\n    Message,\n    Modal,\n    Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n    const [imageOpen, setImageOpen] = useState(false);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageFailed, setImageFailed] = useState(false);\n    const [imageSrc, setImageSrc] = useState('');\n\n    if (imageLoaded && imageSrc !== props.url) {\n        setImageLoaded(false);\n    }\n    return (\n        <>\n            <Image\n                className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n                onClick={() => setImageOpen(true)}\n                onLoad={() => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(false);\n                }}\n                onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(true);\n                    e.currentTarget.alt = '';\n                }}\n                src={props.url}\n                alt={props.title || props.filename}\n                centered={true}\n            />\n            <Placeholder\n                className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\n            >\n                <Placeholder.Image square/>\n            </Placeholder>\n            {imageFailed && (\n                <Container fluid textAlign=\"center\">\n                    <Message negative compact>\n                        <Message.Header>\n                            <FormattedMessage\n                                id=\"error.failed_to_load_image\"\n                                defaultMessage={'Failed to load image file'}\n                            />\n                        </Message.Header>\n                    </Message>\n                </Container>\n            )}\n            <Modal\n                basic\n                size=\"large\"\n                closeIcon={<Icon name=\"close\" color=\"red\"/>}\n                open={imageOpen}\n                onClose={() => setImageOpen(false)}\n                onOpen={() => setImageOpen(true)}\n                centered={false}\n            >\n                <Modal.Header>{props.title}</Modal.Header>\n                <Modal.Content image>\n                    <Image\n                        className=\"modal-image\"\n                        src={props.url}\n                        alt={props.title || props.filename}\n                        label={<Label attached=\"bottom\" content={props.filename}/>}\n                        wrapped\n                    />\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n    lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n    return (\n        <>\n            {props.lines.map((line, index) => (\n                <div key={index}>\n                    <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n                    <br/>\n                </div>\n            ))}\n        </>\n    );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {\n    Icon,\n    Item,\n    List,\n    Menu,\n    MenuItemProps,\n    Popup,\n    Tab,\n} from 'semantic-ui-react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport * as React from 'react';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from 'topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport interface Source {\n    title?: string;\n    author?: string;\n    page?: string;\n    date?: DateOrRange;\n    publicationInfo?: string;\n}\n\ninterface Props {\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n    return (\n        !!images &&\n        images.map((image, index) => (\n            <List key={index}>\n                <List.Item>\n                    <WrappedImage\n                        url={image.url}\n                        filename={image.filename}\n                        title={image.title}\n                    />\n                </List.Item>\n            </List>\n        ))\n    );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n    return (\n        !!notes?.length &&\n        notes.map((note, index) => (\n            <div key={index}>\n                <MultilineText\n                    lines={note.map((line, index) => (\n                        <i key={index}>{line}</i>\n                    ))}\n                />\n            </div>\n        ))\n    );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n    return (\n        !!sources?.length && (\n            <List>\n                {sources.map((source, index) => (\n                    <List.Item key={index}>\n                        <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\"/>\n                        <List.Content>\n                            <List.Header>\n                                <Linkify properties={{target: '_blank'}}>\n                                    {[source.author, source.title, source.publicationInfo]\n                                        .filter((sourceElement) => sourceElement)\n                                        .join(', ')}\n                                </Linkify>\n                            </List.Header>\n                            <List.Description>\n                                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                                {source.date\n                                    ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                                    : null}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n                ))}\n            </List>\n        )\n    );\n}\n\nexport function EventExtras(props: Props) {\n    const intl = useIntl();\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [indi, setIndi] = useState('');\n\n    if (!indi || indi !== props.indi) {\n        setActiveIndex(-1);\n        setIndi(props.indi);\n    }\n\n    function handleTabOnClick(\n        event: React.MouseEvent<HTMLAnchorElement>,\n        menuItemProps: MenuItemProps,\n    ) {\n        menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n            ? setActiveIndex(menuItemProps.index)\n            : setActiveIndex(-1);\n    }\n\n    const imageTab = props.images?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"camera\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n    };\n\n    const noteTab = props.notes?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"sticky note outline\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n    };\n\n    const sourceTab = props.sources?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"quote right\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n    };\n\n    const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n        tab ? [tab] : [],\n    );\n\n    if (panes.length) {\n        return (\n            <Item.Description>\n                <Tab\n                    className=\"event-extras\"\n                    activeIndex={activeIndex}\n                    renderActiveOnly={true}\n                    menu={{\n                        tabular: true,\n                        attached: true,\n                        compact: true,\n                        borderless: true,\n                    }}\n                    panes={panes}\n                />\n            </Item.Description>\n        );\n    }\n    return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {calcAge} from '../util/age_util';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getImageFileEntry,\n    getFileName,\n    getName,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {pointerToId} from '../util/gedcom_util';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\n\nfunction PersonLink(props: { person: GedcomEntry }) {\n    const location = useLocation();\n    const name = getName(props.person);\n    const search = queryString.parse(location.search);\n    search['indi'] = pointerToId(props.person.pointer);\n    return (\n        <Item.Meta>\n            <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n                {name ? (name) : (<FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>)}\n            </Link>\n        </Item.Meta>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n    entries: GedcomEntry[];\n}\n\ninterface EventData {\n    type: string;\n    date?: DateOrRange;\n    age?: string;\n    personLink?: GedcomEntry;\n    place?: string[];\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nconst EVENT_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'FAMS',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'MARS', 'DIV'];\n\nfunction EventHeader(props: { event: EventData }) {\n    const intl = useIntl();\n    return (\n        <div className=\"event-header\">\n            <Header as=\"span\" size=\"small\">\n                <TranslatedTag tag={props.event.type}/>\n            </Header>\n            {props.event.date ? (\n                <Header as=\"span\" textAlign=\"right\" sub>\n                    {formatDateOrRange(props.event.date, intl)}\n                </Header>\n            ) : null}\n        </div>\n    );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n    const spouseReference = familyEntry.tree\n        .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n        .find((familySubEntry) => !familySubEntry.data.includes(indi));\n    if (!spouseReference) {\n        return undefined;\n    }\n    return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction getAge(\n    eventEntry: GedcomEntry,\n    indi: string,\n    gedcom: GedcomData,\n    intl: IntlShape,\n): string | undefined {\n    if (eventEntry.tag !== 'DEAT') {\n        return undefined;\n    }\n    const deathDate = resolveDate(eventEntry);\n    const birthDate = gedcom.indis[indi].tree\n        .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\n        .map((birthEvent) => resolveDate(birthEvent))\n        .find((topolaDate) => topolaDate);\n    if (!birthDate || !deathDate) {\n        return undefined;\n    }\n    return calcAge(birthDate?.data, deathDate?.data, intl);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n    const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n    return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n    return entry.tree\n        .filter((subEntry) => 'OBJE' === subEntry.tag)\n        .map((objectEntry) =>\n            dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n        )\n        .map((objectEntry) => getImageFileEntry(objectEntry))\n        .flatMap((imageFileEntry) =>\n            imageFileEntry\n                ? [\n                    {\n                        url: imageFileEntry?.data || '',\n                        filename: getFileName(imageFileEntry) || '',\n                    },\n                ]\n                : [],\n        );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n    return entry.tree\n        .filter((subEntry) => 'SOUR' === subEntry.tag)\n        .map((sourceEntryReference) => {\n            const sourceEntry = dereference(\n                sourceEntryReference,\n                gedcom,\n                (gedcom) => gedcom.other,\n            );\n            const title = sourceEntry.tree.find(\n                (subEntry) => 'TITL' === subEntry.tag,\n            );\n            const abbr = sourceEntry.tree.find(\n                (subEntry) => 'ABBR' === subEntry.tag,\n            );\n            const author = sourceEntry.tree.find(\n                (subEntry) => 'AUTH' === subEntry.tag,\n            );\n            const publicationInfo = sourceEntry.tree.find(\n                (subEntry) => 'PUBL' === subEntry.tag,\n            );\n            const page = sourceEntryReference.tree.find(\n                (subEntry) => 'PAGE' === subEntry.tag,\n            );\n            const sourceData = sourceEntryReference.tree.find(\n                (subEntry) => 'DATA' === subEntry.tag,\n            );\n            const date = sourceData ? resolveDate(sourceData) : undefined;\n            return {\n                title: title?.data || abbr?.data,\n                author: author?.data,\n                page: page?.data,\n                date: date ? getDate(date.data) : undefined,\n                publicationInfo: publicationInfo?.data,\n            };\n        });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n    return entry.tree\n        .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n        .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n        .map((note) => getData(note));\n}\n\nfunction toEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n    intl: IntlShape,\n): EventData[] {\n    if (entry.tag === 'FAMS') {\n        return toFamilyEvents(entry, gedcom, indi);\n    }\n    return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n    intl: IntlShape,\n): EventData[] {\n    const date = resolveDate(entry) || null;\n    return [\n        {\n            date: date ? getDate(date.data) : undefined,\n            type: entry.tag,\n            age: getAge(entry, indi, gedcom, intl),\n            place: eventPlace(entry),\n            images: eventImages(entry, gedcom),\n            notes: eventNotes(entry, gedcom),\n            sources: eventSources(entry, gedcom),\n            indi: indi,\n        },\n    ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n    return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n    return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n        family.tree.filter((entry) => entry.tag === tag),\n    ).map((familyMarriageEvent) => {\n        const date = resolveDate(familyMarriageEvent) || null;\n        return {\n            date: date ? getDate(date.data) : undefined,\n            type: familyMarriageEvent.tag,\n            personLink: getSpouse(indi, family, gedcom),\n            place: eventPlace(familyMarriageEvent),\n            images: eventImages(familyMarriageEvent, gedcom),\n            notes: eventNotes(familyMarriageEvent, gedcom),\n            sources: eventSources(familyMarriageEvent, gedcom),\n            indi: indi,\n        };\n    });\n}\n\nfunction Event(props: { event: EventData }) {\n    return (\n        <Item>\n            <Item.Content>\n                <EventHeader event={props.event}/>\n                {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\n                {!!props.event.personLink && (<PersonLink person={props.event.personLink}/>)}\n                {!!props.event.place && (<Item.Description>{props.event.place}</Item.Description>)}\n                <EventExtras\n                    images={props.event.images}\n                    notes={props.event.notes}\n                    sources={props.event.sources}\n                    indi={props.event.indi}\n                />\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport function Events(props: Props) {\n    const intl = useIntl();\n    const events = flatMap(EVENT_TAGS, (tag) =>\n        props.entries\n            .filter((entry) => entry.tag === tag)\n            .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n            .flatMap((events) => events)\n            .sort((event1, event2) => compareDates(event1.date, event2.date)),\n    );\n    if (events.length) {\n        return (\n            <>\n                {events.map((event, index) => (\n                    <Event event={event} key={index}/>\n                ))}\n            </>\n        );\n    }\n    return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n    'NAME',\n    'SEX',\n    'FAMC',\n    'FAMS',\n    'NOTE',\n    'SOUR',\n    'LANG'\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n    const lines = [];\n    if (entry.data) {\n        lines.push(...getData(entry));\n    }\n    entry.tree\n        .filter((subentry) => subentry.tag === 'NOTE')\n        .forEach((note) =>\n            getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n        );\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <>\n            <Header sub>\n                <TranslatedTag tag={entry.tag}/>\n            </Header>\n            <span>\n                <MultilineText lines={lines}/>\n            </span>\n        </>\n    );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n    const imageFileEntry = getImageFileEntry(objectEntry);\n    return imageFileEntry ? (\n        <div className=\"person-image\">\n            <WrappedImage\n                url={imageFileEntry.data}\n                filename={getFileName(imageFileEntry) || ''}\n            />\n        </div>\n    ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n    return (\n        <MultilineText\n            lines={getData(entry).map((line, index) => (\n                <i key={index}>{line}</i>\n            ))}\n        />\n    );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n    const fullName = entry.data.replaceAll('/', '');\n    const nameType = entry.tree.find(\n        (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n    )?.data;\n    return (\n        <>\n            <Header as=\"span\" size=\"large\">\n                {fullName ? (\n                    fullName\n                ) : (\n                    <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>\n                )}\n            </Header>\n            {fullName && nameType && (\n                <Item.Meta>\n                    <TranslatedTag tag={nameType}/>\n                </Item.Meta>\n            )}\n        </>\n    );\n}\n\nfunction getDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n    return flatMap(tags, (tag) =>\n        entries\n            .filter((entry) => entry.tag === tag)\n            .map((entry) => detailsFunction(entry)),\n    )\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n    return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n    return entries\n        .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n        .filter(hasData)\n        .map((entry) => dataDetails(entry))\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\nfunction getMultilineDetails(entries: GedcomEntry[], tags: string[]) {\n    return (\n        <Item key=\"languages\">\n            <Item.Content>\n                <Header sub>\n                    <FormattedMessage id=\"gedcom.languages\" defaultMessage=\"Languages\"/>\n                </Header>\n                <span>\n                    <MultilineText\n                        lines={\n                            entries\n                                .filter((entry) => tags.includes(entry.tag))\n                                .filter(hasData)\n                                .map((element) => element.data)\n                        }\n                    />\n                </span>\n            </Item.Content>\n        </Item>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n}\n\nexport function Details(props: Props) {\n    const entries = props.gedcom.indis[props.indi].tree;\n    const entriesWithData = entries\n        .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n        .filter(hasData);\n\n    return (\n        <div className=\"details\">\n            <Item.Group divided>\n                {getDetails(entries, ['NAME'], nameDetails)}\n                {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n                <Events gedcom={props.gedcom} entries={entries} indi={props.indi}/>\n                {getOtherDetails(entriesWithData)}\n                {getMultilineDetails(entriesWithData, ['LANG'])}\n                {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n            </Item.Group>\n        </div>\n    );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n    GEDCOM = 'gedcom',\n    READY = 'ready',\n    PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n    message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n    message: EmbeddedMessageType.GEDCOM;\n    gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n    source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<EmbeddedSourceSpec>,\n        oldSource: SourceSelection<EmbeddedSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        // Never reload data.\n        return false;\n    }\n\n    private async onMessage(\n        message: EmbeddedMessage,\n        resolve: (value: TopolaData) => void,\n        reject: (reason: any) => void,\n    ) {\n        if (message.message === EmbeddedMessageType.PARENT_READY) {\n            // Parent didn't receive the first 'ready' message, so we need to send it again.\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n        } else if (message.message === EmbeddedMessageType.GEDCOM) {\n            const gedcom = (message as GedcomMessage).gedcom;\n            if (!gedcom) {\n                return;\n            }\n            try {\n                const data = await loadGedcom('', gedcom);\n                resolve(data);\n            } catch (error) {\n                reject(error);\n            }\n        }\n    }\n\n    async loadData(source: SourceSelection<EmbeddedSourceSpec>): Promise<TopolaData> {\n        // Notify the parent window that we are ready.\n        return new Promise<TopolaData>((resolve, reject) => {\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n            window.addEventListener('message', (data) =>\n                this.onMessage(data.data, resolve, reject),\n            );\n        });\n    }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n    if (!(error instanceof TopolaError)) {\n        return error.message;\n    }\n    return intl.formatMessage(\n        {\n            id: `error.${error.code}`,\n            defaultMessage: error.message,\n        },\n        error.args,\n    );\n}\n","import {\n    Menu,\n    Dropdown,\n    MenuItemProps,\n    DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n    Menu,\n    Dropdown,\n}\n\ninterface Props {\n    menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n    const newProps = {...props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <Menu.Item {...newProps}>{props.children}</Menu.Item>\n            ) : (\n                <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n            )}\n        </>\n    );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n    breakpoints: {\n        small: 320,\n        large: 768,\n    },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n    id: string;\n    indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n    search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n    return input\n        .toLocaleLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n    if (a.score !== b.score) {\n        return b.score - a.score;\n    }\n    return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n    indi: JsonIndi,\n    indiMap: Map<String, JsonIndi>,\n    famMap: Map<string, JsonFam>,\n): string {\n    return (indi.fams || [])\n        .map((famId) => famMap.get(famId))\n        .map((fam) => fam && fam.husb)\n        .map((husbId) => husbId && indiMap.get(husbId))\n        .map((husband) => husband && husband.lastName)\n        .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n    private index: lunr.Index | undefined;\n    private indiMap: Map<string, JsonIndi>;\n    private famMap: Map<string, JsonFam>;\n\n    constructor(data: JsonGedcomData) {\n        this.indiMap = idToIndiMap(data);\n        this.famMap = idToFamMap(data);\n    }\n\n    initialize() {\n        const self = this;\n        this.index = lunr(function () {\n            //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n            self.initMultiLingualLunrWithoutTrimmer(this, [\n                'de',\n                'en',\n                'fr',\n                'it',\n                'ru',\n            ]);\n            this.ref('id');\n            this.field('id');\n            this.field('name', {boost: 10});\n            this.field('normalizedName', {boost: 8});\n            this.field('spouseLastName', {boost: 2});\n            this.field('normalizedSpouseLastName', {boost: 2});\n\n            self.indiMap.forEach((indi) => {\n                const name = [indi.firstName, indi.lastName].join(' ');\n                const spouseLastName = getHusbandLastName(\n                    indi,\n                    self.indiMap,\n                    self.famMap,\n                );\n                this.add({\n                    id: indi.id,\n                    name,\n                    normalizedName: normalize(name),\n                    spouseLastName,\n                    normalizedSpouseLastName: normalize(spouseLastName),\n                });\n            });\n        });\n    }\n\n    private initMultiLingualLunrWithoutTrimmer(\n        lunrInstance: any,\n        languages: string[],\n    ): void {\n        let wordCharacters = '';\n        const pipelineFunctions: PipelineFunction[] = [];\n        const searchPipelineFunctions: PipelineFunction[] = [];\n        languages.forEach((language) => {\n            if (language === 'en') {\n                wordCharacters += '\\\\w';\n                pipelineFunctions.unshift(lunr.stopWordFilter);\n                pipelineFunctions.push(lunr.stemmer);\n                searchPipelineFunctions.push(lunr.stemmer);\n            } else {\n                wordCharacters += lunr[language].wordCharacters;\n                if (lunr[language].stopWordFilter) {\n                    pipelineFunctions.unshift(lunr[language].stopWordFilter);\n                }\n                if (lunr[language].stemmer) {\n                    pipelineFunctions.push(lunr[language].stemmer);\n                    searchPipelineFunctions.push(lunr[language].stemmer);\n                }\n            }\n        });\n        lunrInstance.pipeline.reset();\n        lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n        if (lunrInstance.searchPipeline) {\n            lunrInstance.searchPipeline.reset();\n            lunrInstance.searchPipeline.add.apply(\n                lunrInstance.searchPipeline,\n                searchPipelineFunctions,\n            );\n        }\n    }\n\n    public search(input: string): SearchResult[] {\n        const query = input\n            .split(' ')\n            .filter((s) => !!s)\n            .map((s) => `${s} ${s}*`)\n            .join(' ');\n        const results = this.index!.search(query);\n        return results\n            .sort(compare)\n            .slice(0, MAX_RESULTS)\n            .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n    }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n    const index = new LunrSearchIndex(data);\n    index.initialize();\n    return index;\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n    const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n    if (result.id.length > 8) {\n        return name;\n    }\n    return (\n        <>\n            {name} <i>({result.id})</i>\n        </>\n    );\n}\n\ninterface Props {\n    /** Data used for the search index. */\n    data: JsonGedcomData;\n    onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n    const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n    const [searchString, setSearchString] = useState('');\n    const searchIndex = useRef<SearchIndex>();\n    const intl = useIntl();\n\n    function getDescriptionLine(indi: JsonIndi) {\n        const birthDate = formatDateOrRange(indi.birth, intl);\n        const deathDate = formatDateOrRange(indi.death, intl);\n        if (!deathDate) {\n            return birthDate;\n        }\n        return `${birthDate} – ${deathDate}`;\n    }\n\n    /** Produces an object that is displayed in the Semantic UI Search results. */\n    function displaySearchResult(result: SearchResult): SearchResultProps {\n        return {\n            id: result.id,\n            key: result.id,\n            title: getNameLine(result),\n            description: getDescriptionLine(result.indi),\n        } as SearchResultProps;\n    }\n\n    /** On search input change. */\n    function handleSearch(input: string | undefined) {\n        if (!input) {\n            return;\n        }\n        const results = searchIndex\n            .current!.search(input)\n            .map((result) => displaySearchResult(result));\n        setSearchResults(results);\n    }\n\n    const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n    /** On search result selected. */\n    function handleResultSelect(id: string) {\n        // analyticsEvent('search_result_selected');\n        props.onSelection({id, generation: 0});\n        setSearchString('');\n    }\n\n    /** On search string changed. */\n    function onChange(value: string) {\n        debouncedHandleSearch.current(value);\n        setSearchString(value);\n    }\n\n    // Initialize the search index.\n    useEffect(() => {\n        searchIndex.current = buildSearchIndex(props.data);\n    }, [props.data]);\n\n    return (\n        <Search\n            onSearchChange={(_, data) => onChange(data.value!)}\n            onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n            results={searchResults}\n            noResultsMessage={intl.formatMessage({\n                id: 'menu.search.no_results',\n                defaultMessage: 'No results found',\n            })}\n            placeholder={intl.formatMessage({\n                id: 'menu.search.placeholder',\n                defaultMessage: 'Search for people',\n            })}\n            selectFirstResult={true}\n            value={searchString}\n            id=\"search\"\n        />\n    );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n    const lower = fileName.toLowerCase();\n    return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        const filesArray = Array.from(files);\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n        const gedcomFile =\n            filesArray.length === 1\n                ? filesArray[0]\n                : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n                filesArray[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Convert uploaded images to object URLs.\n        filesArray\n            .filter((file) => file.name !== gedcomFile.name && isImageFileName(file.name))\n            .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images},\n        });\n    }\n\n    const content = (\n        <>\n            <Icon name=\"folder open\"/>\n            <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\"/>\n        </>\n    );\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <label htmlFor=\"fileInput\">\n                    <Menu.Item as=\"a\">{content}</Menu.Item>\n                </label>\n            ) : (\n                <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                    {content}\n                </Dropdown.Item>\n            )}\n            <input\n                className=\"hidden\"\n                type=\"file\"\n                accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n                id=\"fileInput\"\n                multiple\n                onChange={handleUpload}\n            />\n        </>\n    );\n}\n","import {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n    onCenterView: () => void;\n}\n\ninterface Props {\n    /** True if the application is currently showing a chart. */\n    showingChart: boolean;\n    /** Data used for the search index. */\n    data?: JsonGedcomData;\n    standalone: boolean;\n    eventHandlers: EventHandlers;\n}\n\nexport function TopBar(props: Props) {\n    useHistory();\n    useLocation();\n    function chartMenus(screenSize: ScreenSize) {\n        if (!props.showingChart) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\"/>\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\"/>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                            <Icon name=\"eye\" />\n                            <FormattedMessage id=\"menu.view\" defaultMessage=\"Center view\" />\n                        </Menu.Item>\n\n                        <Menu.Menu position=\"right\">\n                            <SearchBar\n                                data={props.data!}\n                                onSelection={props.eventHandlers.onSelection}\n                                {...props}\n                            />\n                        </Menu.Menu>\n                    </>\n                );\n\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                            <Icon name=\"download\"/>\n                            <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                            <Icon name=\"download\"/>\n                            <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                            <Icon name=\"download\"/>\n                            <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                        </Dropdown.Item>\n                        <Dropdown.Divider/>\n                    </>\n                );\n        }\n    }\n\n    function fileMenus(screenSize: ScreenSize) {\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                // Show dropdown if chart is shown, otherwise show individual menu items.\n                return props.showingChart ? (\n                    <>\n                        <UploadMenu menuType={MenuType.Menu} {...props} />\n                        {/*<UrlMenu menuType={MenuType.Menu} {...props} />*/}\n                    </>\n                ) : (\n                    <Dropdown\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\"\n                    >\n                        <Dropdown.Menu>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        {/*<UrlMenu menuType={MenuType.Dropdown} {...props} />*/}\n                        <Dropdown.Divider/>\n                    </>\n                );\n        }\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {fileMenus(ScreenSize.SMALL)}\n                        {chartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {fileMenus(ScreenSize.LARGE)}\n                {chartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu\n                as={Media}\n                greaterThanOrEqual=\"large\"\n                attached=\"top\"\n                inverted\n                color=\"blue\"\n                size=\"large\"\n            >\n                {desktopMenus()}\n            </Menu>\n            <Menu\n                as={Media}\n                at=\"small\"\n                attached=\"top\"\n                inverted\n                color=\"blue\"\n                size=\"large\"\n            >\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [url, setUrl] = useState('');\n    const inputRef = useRef<Input>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (dialogOpen) {\n            setUrl('');\n            inputRef.current!.focus();\n        }\n    }, [dialogOpen]);\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    function handleLoad() {\n        setDialogOpen(false);\n        if (url) {\n            // analyticsEvent('url_selected');\n            history.push({\n                pathname: '/view',\n                search: queryString.stringify({url}),\n            });\n        }\n    }\n\n    function loadFromUrlModal() {\n        return (\n            <Modal\n                open={dialogOpen}\n                onClose={() => setDialogOpen(false)}\n                centered={false}\n            >\n                <Header>\n                    <Icon name=\"cloud download\"/>\n                    <FormattedMessage\n                        id=\"load_from_url.title\"\n                        defaultMessage=\"Load from URL\"\n                    />\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={handleLoad}>\n                        <Input\n                            placeholder=\"https://\"\n                            fluid\n                            value={url}\n                            onChange={(_, data) => setUrl(data.value)}\n                            ref={inputRef}\n                        />\n                        <p>\n                            <FormattedMessage\n                                id=\"load_from_url.comment\"\n                                defaultMessage={\n                                    'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                                }\n                                values={{\n                                    link: (\n                                        <a href=\"https://topolaproxy.bieda.it/\">\n                                            topolaproxy.bieda.it (cors-anywhere proxy)\n                                        </a>\n                                    ),\n                                }}\n                            />\n                        </p>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage\n                            id=\"load_from_url.cancel\"\n                            defaultMessage=\"Cancel\"\n                        />\n                    </Button>\n                    <Button primary onClick={handleLoad}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"cloud download\"/>\n                <FormattedMessage\n                    id=\"menu.load_from_url\"\n                    defaultMessage=\"Load from URL\"\n                />\n            </MenuItem>\n            {loadFromUrlModal()}\n        </>\n    );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n    NO_COLOR,\n    COLOR_BY_SEX,\n    COLOR_BY_GENERATION,\n}\n\nexport enum Ids {\n    HIDE,\n    SHOW,\n}\n\nexport enum Sex {\n    HIDE,\n    SHOW,\n}\n\nexport interface Config {\n    color: ChartColors;\n    id: Ids;\n    sex: Sex;\n}\n\nexport const DEFAULT_CONFIG: Config = {\n    color: ChartColors.COLOR_BY_GENERATION,\n    id: Ids.SHOW,\n    sex: Sex.SHOW,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n    ['n', ChartColors.NO_COLOR],\n    ['g', ChartColors.COLOR_BY_GENERATION],\n    ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, Ids>([\n    ['h', Ids.HIDE],\n    ['s', Ids.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<Ids, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, Sex>([\n    ['h', Sex.HIDE],\n    ['s', Sex.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<Sex, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n    const getParam = (name: string) => {\n        const value = args[name];\n        return typeof value === 'string' ? value : undefined;\n    };\n\n    return {\n        color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n        id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n        sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n    };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n    return {\n        c: COLOR_ARG_INVERSE.get(config.color),\n        i: ID_ARG_INVERSE.get(config.id),\n        s: SEX_ARG_INVERSE.get(config.sex),\n    };\n}\n\nexport function ConfigPanel(props: {\n    config: Config;\n    onChange: (config: Config) => void;\n}) {\n    return (\n        <Form className=\"details\">\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Header sub>\n                            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\"/>\n                        </Header>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"none\"\n                                checked={props.config.color === ChartColors.NO_COLOR}\n                                onClick={() =>\n                                    props.onChange({...props.config, color: ChartColors.NO_COLOR})\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"generation\"\n                                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                                onClick={() =>\n                                    props.onChange({...props.config, color: ChartColors.COLOR_BY_GENERATION})\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by sex\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"gender\"\n                                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                                onClick={() =>\n                                    props.onChange({...props.config, color: ChartColors.COLOR_BY_SEX})\n                                }\n                            />\n                        </Form.Field>\n                    </Item.Content>\n                </Item>\n                <Item>\n                    <Item.Content>\n                        <Header sub>\n                            <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\"/>\n                        </Header>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.ids.HIDE\" defaultMessage=\"hide\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"hide\"\n                                checked={props.config.id === Ids.HIDE}\n                                onClick={() =>\n                                    props.onChange({...props.config, id: Ids.HIDE})\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.ids.SHOW\" defaultMessage=\"show\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"show\"\n                                checked={props.config.id === Ids.SHOW}\n                                onClick={() =>\n                                    props.onChange({...props.config, id: Ids.SHOW})\n                                }\n                            />\n                        </Form.Field>\n                    </Item.Content>\n                </Item>\n                <Item>\n                    <Item.Content>\n                        <Header sub>\n                            <FormattedMessage id=\"config.sex\" defaultMessage=\"Sex\"/>\n                        </Header>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.sex.HIDE\" defaultMessage=\"hide\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"hide\"\n                                checked={props.config.sex === Sex.HIDE}\n                                onClick={() =>\n                                    props.onChange({...props.config, sex: Sex.HIDE})\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.sex.SHOW\" defaultMessage=\"show\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"show\"\n                                checked={props.config.sex === Sex.SHOW}\n                                onClick={() =>\n                                    props.onChange({...props.config, sex: Sex.SHOW})\n                                }\n                            />\n                        </Form.Field>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n        </Form>\n    );\n}\n","import {ChartColors, Ids, Sex} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n    D3ZoomEvent,\n    zoom,\n    ZoomBehavior,\n    ZoomedElementBaseType,\n    zoomTransform,\n} from 'd3-zoom';\nimport {\n    JsonGedcomData,\n    ChartHandle,\n    IndiInfo,\n    createChart,\n    DetailedRenderer,\n    HourglassChart,\n    RelativesChart,\n    FancyChart,\n    CircleRenderer,\n    ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n    size: [number, number],\n    event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n    const parent = select('#svgContainer').node() as Element;\n    const scale = event.transform.k;\n    const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    select('#chartSvg')\n        .attr('width', size[0] * scale)\n        .attr('height', size[1] * scale)\n        .attr('transform', `translate(${offsetX}, ${offsetY})`);\n    select('#chart').attr('transform', `scale(${scale})`);\n    parent.scrollLeft = -event.transform.x;\n    parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n    const parent = select('#svgContainer').node() as Element;\n    const x = parent.scrollLeft + parent.clientWidth / 2;\n    const y = parent.scrollTop + parent.clientHeight / 2;\n    const scale = zoomTransform(parent).k;\n    select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise<string>((resolve, reject) => {\n        reader.onload = (e) => resolve((e.target as FileReader).result as string);\n    });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n    const href = image.href.baseVal;\n    if (!href) {\n        return;\n    }\n    try {\n        const response = await fetch(href);\n        const blob = await response.blob();\n        const dataUrl = await loadAsDataUrl(blob);\n        image.href.baseVal = dataUrl;\n    } catch (e) {\n        console.warn('Failed to load image:', e);\n    }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n    const images = Array.from(svg.getElementsByTagName('image'));\n    await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        image.addEventListener('load', () => resolve(image));\n    });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n    const canvas = document.createElement('canvas');\n    // Scale image for better quality.\n    canvas.width = image.width * 2;\n    canvas.height = image.height * 2;\n    const ctx = canvas.getContext('2d')!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob) {\n                resolve(blob);\n            } else {\n                reject();\n            }\n        }, type);\n    });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    const parent = select('#svgContainer').node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n    svg.setAttribute(\n        'height',\n        String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n    return svg;\n}\n\nasync function getSvgContentsWithInlinedImages() {\n    const svg = getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n}\n\nexport async function downloadSvg() {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'genealogy.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n    const canvas = await drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'genealogy.png');\n}\n\nexport async function downloadPdf() {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import('jspdf');\n    const canvas = await drawOnCanvas();\n    const doc = new jspdf({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: 'pt',\n        format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('genealogy.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n    Hourglass,\n    Relatives,\n    Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n    [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n    [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n    [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n    switch (chartType) {\n        case ChartType.Hourglass:\n            return HourglassChart;\n        case ChartType.Relatives:\n            return RelativesChart;\n        case ChartType.Fancy:\n            return FancyChart;\n        default:\n            // Fall back to hourglass chart.\n            return HourglassChart;\n    }\n}\n\nfunction getRendererType(chartType: ChartType) {\n    switch (chartType) {\n        case ChartType.Fancy:\n            return CircleRenderer;\n        default:\n            // Use DetailedRenderer by default.\n            return DetailedRenderer;\n    }\n}\n\nexport interface ChartProps {\n    data: JsonGedcomData;\n    selection: IndiInfo;\n    chartType: ChartType;\n    onSelection: (indiInfo: IndiInfo) => void;\n    freezeAnimation?: boolean;\n    colors?: ChartColors;\n    hideIds?: Ids;\n    hideSex?: Sex;\n}\n\nclass ChartWrapper {\n    private chart?: ChartHandle;\n    /** Animation is in progress. */\n    private animating = false;\n    /** Rendering is required after the current animation finishes. */\n    private rerenderRequired = false;\n    /** The d3 zoom behavior object. */\n    private zoomBehavior?: ZoomBehavior<Element, any>;\n    /** Props that will be used for re-rendering. */\n    private rerenderProps?: ChartProps;\n    private rerenderResetPosition?: boolean;\n\n    zoom(factor: number) {\n        const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n        this.zoomBehavior!.scaleBy(parent, factor);\n    }\n\n    /**\n     * Renders the chart or performs a transition animation to a new state.\n     * If indiInfo is not given, it means that it is the initial render and no\n     * animation is performed.\n     */\n    renderChart(\n        props: ChartProps,\n        intl: IntlShape,\n        args: { initialRender: boolean; resetPosition: boolean } = {\n            initialRender: false,\n            resetPosition: false,\n        },\n    ) {\n        // Wait for animation to finish if animation is in progress.\n        if (!args.initialRender && this.animating) {\n            this.rerenderRequired = true;\n            this.rerenderProps = props;\n            this.rerenderResetPosition = args.resetPosition;\n            return;\n        }\n\n        // Freeze changing selection after initial rendering.\n        if (!args.initialRender && props.freezeAnimation) {\n            return;\n        }\n\n        if (args.initialRender) {\n            (select('#chart').node() as HTMLElement).innerHTML = '';\n            this.chart = createChart({\n                json: props.data,\n                chartType: getChartType(props.chartType),\n                renderer: getRendererType(props.chartType),\n                svgSelector: '#chart',\n                indiCallback: (info) => props.onSelection(info),\n                colors: chartColors.get(props.colors!),\n                animate: true,\n                updateSvgSize: false,\n                locale: intl.locale,\n            });\n        } else {\n            this.chart!.setData(props.data);\n        }\n\n        const chartInfo = this.chart!.render({\n            startIndi: props.selection.id,\n            baseGeneration: props.selection.generation,\n        });\n        const svg = select('#chartSvg');\n        const parent = select('#svgContainer').node() as Element;\n        const scale = zoomTransform(parent).k;\n        const zoomOutFactor = min([\n            1,\n            scale,\n            parent.clientWidth / chartInfo.size[0],\n            parent.clientHeight / chartInfo.size[1],\n        ])!;\n        const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n        this.zoomBehavior = zoom()\n            .scaleExtent(extent)\n            .translateExtent([[0, 0], chartInfo.size])\n            .on('zoom', (event) => zoomed(chartInfo.size, event));\n        select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n        const scrollTopTween = (scrollTop: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollTop, scrollTop);\n                return (t: number) => {\n                    parent.scrollTop = i(t);\n                };\n            };\n        };\n        const scrollLeftTween = (scrollLeft: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n                return (t: number) => {\n                    parent.scrollLeft = i(t);\n                };\n            };\n        };\n\n        const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n        const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n        const offsetX = max([\n            0,\n            (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n        ]);\n        const offsetY = max([\n            0,\n            (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n        ]);\n        const svgTransition = svg.transition().delay(200).duration(500);\n        const transition = args.initialRender ? svg : svgTransition;\n        transition\n            .attr('transform', `translate(${offsetX}, ${offsetY})`)\n            .attr('width', chartInfo.size[0] * scale)\n            .attr('height', chartInfo.size[1] * scale);\n        if (args.resetPosition) {\n            if (args.initialRender) {\n                parent.scrollLeft = -dx;\n                parent.scrollTop = -dy;\n            } else {\n                svgTransition\n                    .tween('scrollLeft', scrollLeftTween(-dx))\n                    .tween('scrollTop', scrollTopTween(-dy));\n            }\n        }\n\n        // After the animation is finished, rerender the chart if required.\n        this.animating = true;\n        chartInfo.animationPromise.then(() => {\n            this.animating = false;\n            if (this.rerenderRequired) {\n                this.rerenderRequired = false;\n                // Use `this.rerenderProps` instead of the props in scope because\n                // the props may have been updated in the meantime.\n                this.renderChart(this.rerenderProps!, intl, {\n                    initialRender: false,\n                    resetPosition: !!this.rerenderResetPosition,\n                });\n            }\n        });\n    }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n    const chartWrapper = useRef(new ChartWrapper());\n    const prevProps = usePrevious(props);\n    const intl = useIntl();\n\n    useEffect(() => {\n        if (prevProps) {\n            const initialRender =\n                props.chartType !== prevProps?.chartType ||\n                props.colors !== prevProps?.colors ||\n                props.hideIds !== prevProps?.hideIds ||\n                props.hideSex !== prevProps?.hideSex;\n            const resetPosition =\n                props.chartType !== prevProps?.chartType ||\n                props.data !== prevProps.data ||\n                props.selection !== prevProps.selection;\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender,\n                resetPosition,\n            });\n        } else {\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender: true,\n                resetPosition: true,\n            });\n        }\n    });\n\n    return (\n        <div id=\"svgContainer\">\n            <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n                <button className=\"zoom-in\" onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}>+</button>\n                <button className=\"zoom-out\" onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}>−</button>\n            </Media>\n            <svg id=\"chartSvg\">\n                <g id=\"chart\"/>\n            </svg>\n        </div>\n    );\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {idToIndiMap} from './util/gedcom_util';\nimport {\n    Chart,\n    ChartType,\n    downloadPdf,\n    downloadPng,\n    downloadSvg,\n} from './chart';\nimport {\n    argsToConfig,\n    Config,\n    ConfigPanel,\n    configToArgs,\n    DEFAULT_CONFIG,\n    Ids,\n    Sex,\n} from './config';\nimport {\n    getSelection,\n    UploadSourceSpec,\n    UrlSourceSpec,\n    GedcomUrlDataSource,\n    UploadedDataSource,\n} from './datasource/load_data';\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE,\n}\n\ntype DataSourceSpec =\n    | UrlSourceSpec\n    | UploadSourceSpec\n    | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n\n    const view = getParam('view');\n    const chartTypes = new Map<string | undefined, ChartType>([\n        ['relatives', ChartType.Relatives],\n        ['fancy', ChartType.Fancy],\n    ]);\n\n    const hash = getParam('file');\n    const url = getParam('url');\n    const embedded = getParam('embedded') === 'true'; // False by default.\n    let sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            handleCors: getParam('handleCors') !== 'false', // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined;\n\n    return {\n        sourceSpec,\n        selection,\n        // Hourglass is the default view.\n        chartType: chartTypes.get(view) || ChartType.Relatives,\n        showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n        standalone: getParam('standalone') !== 'false' && !embedded && !staticUrl,\n        freezeAnimation: getParam('freeze') === 'true', // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (\n            !selection ||\n            selection.id !== newSelection.id ||\n            selection!.generation !== newSelection.generation\n        ) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined) {\n        if (data === undefined) {\n            return;\n        }\n        let shouldHideIds = config.id === Ids.HIDE;\n        let shouldHideSex = config.sex === Sex.HIDE;\n        let indiMap = idToIndiMap(data.chartData);\n        indiMap.forEach((indi) => {\n            indi.hideId = shouldHideIds;\n            indi.hideSex = shouldHideSex;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data.\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n        }\n    }\n\n    useEffect(() => {\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add('bgLogo');\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove('bgLogo');\n        }\n\n        (async () => {\n            if (location.pathname !== '/view') {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n\n            if (\n                state === AppState.INITIAL || isNewData(args.sourceSpec, args.selection)\n            ) {\n                // Set loading state.\n                setState(AppState.LOADING);\n                // Set state from URL parameters.\n                setSourceSpec(args.sourceSpec);\n                setSelection(args.selection);\n                setStandalone(args.standalone);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    // Set state with data.\n                    setData(data);\n                    toggleDetails(args.config, data);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE\n            ) {\n                // Update selection if it has changed in the URL.\n                setChartType(args.chartType);\n                setState(AppState.SHOWING_CHART);\n                updateDisplay(args.selection!);\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart. Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        // analyticsEvent('download_pdf');\n        try {\n            await downloadPdf();\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_pdf',\n                    defaultMessage:\n                        'Failed to generate PDF file.' +\n                        ' Please try with a smaller diagram or download an SVG file.',\n                }),\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        // analyticsEvent('download_png');\n        try {\n            await downloadPng();\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_png',\n                    defaultMessage:'Failed to generate PNG file. Please try with a smaller diagram or download an SVG file.'\n                }),\n            );\n        }\n    }\n\n    function onDownloadSvg() {\n        downloadSvg();\n    }\n\n    function onCenterView() {\n        const startIndi: IndiInfo = {\n            id: data?.chartData?.indis?.[0]?.id || 'I0',\n            generation: 0,\n        };\n        onSelection(startIndi)\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({\n                            id: 'tab.info',\n                            defaultMessage: 'Info',\n                        }),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: 'tab.settings',\n                            defaultMessage: 'Settings',\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        showingChart={\n                            history.location.pathname === '/view' &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                            onCenterView,\n                        }}\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/view'}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_es from './translations/es.json';\nimport messages_pl from './translations/pl.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n    de: messages_de,\n    fr: messages_fr,\n    it: messages_it,\n    es: messages_es,\n    pl: messages_pl\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n    ReactDOM.render(\n        <p>Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.</p>,\n        document.querySelector('#root'),\n    );\n} else {\n    ReactDOM.render(\n        <IntlProvider locale={language} messages={messages[language]}>\n            <MediaContextProvider>\n                <style>{mediaStyles}</style>\n                <Router>\n                    <Route component={App}/>\n                </Router>\n            </MediaContextProvider>\n        </IntlProvider>,\n        document.querySelector('#root'),\n    );\n}\n","import {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n    data: JsonGedcomData,\n    selection?: IndiInfo,\n): IndiInfo {\n    // If ID is not given or it doesn't exist in the data, use the first ID in\n    // the data.\n    const id =\n        selection && data.indis.some((i) => i.id === selection.id)\n            ? selection.id\n            : data.indis[0].id;\n    return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n    gedcom: string,\n    cacheId: string,\n    images?: Map<string, string>,\n): TopolaData {\n    const data = convertGedcom(gedcom, images || new Map());\n    const serializedData = JSON.stringify(data);\n    try {\n        sessionStorage.setItem(cacheId, serializedData);\n    } catch (e) {\n        console.warn('Failed to store data in session storage: ' + e);\n    }\n    return data;\n}\n\nasync function loadGedzip(\n    blob: Blob,\n): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n    const entries = zip.getEntries();\n\n    let gedcom = undefined;\n    const images = new Map<string, string>();\n    for (const entry of entries) {\n        if (entry.entryName.endsWith('.ged')) {\n            if (gedcom) {\n                console.warn('Multiple GEDCOM files found in zip archive.');\n            } else {\n                gedcom = entry.getData().toString();\n            }\n        } else {\n            // Save image for later.\n            images.set(\n                entry.entryName,\n                URL.createObjectURL(new Blob([entry.getData()])),\n            );\n        }\n    }\n    if (!gedcom) {\n        throw new Error('GEDCOM file not found in zip archive.');\n    }\n    return {gedcom, images};\n}\n\nexport async function loadFile(\n    blob: Blob,\n): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const fileHeader = await blob.slice(0, 2).text();\n    if (fileHeader === 'PK') {\n        return loadGedzip(blob);\n    }\n    return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n    url: string,\n    handleCors: boolean,\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(url);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n\n    const driveUrlMatch1 = url.match(\n        /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n    );\n    if (driveUrlMatch1) {\n        url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n    }\n    const driveUrlMatch2 = url.match(\n        /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n    );\n    if (driveUrlMatch2) {\n        url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n    }\n\n    const urlToFetch = handleCors ? 'https://topolaproxy.bieda.it/' + url : url;\n\n    const response = await window.fetch(urlToFetch);\n    if (response.status !== 200) {\n        throw new Error(response.statusText);\n    }\n\n    const {gedcom, images} = await loadFile(await response.blob());\n    return prepareData(gedcom, url, images);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n    hash: string,\n    gedcom?: string,\n    images?: Map<string, string>,\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n    if (!gedcom) {\n        throw new TopolaError(\n            'ERROR_LOADING_UPLOADED_FILE',\n            'Error loading data. Please upload your file again.',\n        );\n    }\n    return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n    source: DataSourceEnum.UPLOADED;\n    gedcom?: string;\n    /** Hash of the GEDCOM contents. */\n    hash: string;\n    images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n    // isNewData(args: Arguments, state: State): boolean {\n    isNewData(\n        newSource: SourceSelection<UploadSourceSpec>,\n        oldSource: SourceSelection<UploadSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.hash !== oldSource.spec.hash;\n    }\n\n    async loadData(\n        source: SourceSelection<UploadSourceSpec>,\n    ): Promise<TopolaData> {\n        try {\n            const data = await loadGedcom(\n                source.spec.hash,\n                source.spec.gedcom,\n                source.spec.images,\n            );\n            const software = getSoftware(data.gedcom.head);\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\nexport interface UrlSourceSpec {\n    source: DataSourceEnum.GEDCOM_URL;\n    /** URL of the data that is loaded or is being loaded. */\n    url: string;\n    handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<UrlSourceSpec>,\n        oldSource: SourceSelection<UrlSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.url !== oldSource.spec.url;\n    }\n\n    async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadFromUrl(source.spec.url, source.spec.handleCors);\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n"],"sourceRoot":""}