{"version":3,"sources":["util/error.ts","lib/topola/dist/chart-util.js","lib/topola/dist/ancestor-chart.js","lib/topola/dist/id-generator.js","lib/topola/dist/descendant-chart.js","util/gedcom_util.ts","lib/topola/dist/composite-renderer.js","lib/topola/dist/data.js","lib/topola/dist/date-format.js","lib/topola/dist/index.js","lib/topola/dist/api.js","lib/topola/dist/detailed-renderer.js","lib/topola/dist/gedcom.js","lib/topola/dist/hourglass-chart.js","lib/topola/dist/relatives-chart.js","lib/topola/dist/simple-api.js","datasource/data_source.ts","util/analytics.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/convert_tables.tsx","languages/validate_csv.ts","languages/individual.ts","languages/family.ts","languages/convert_csv.ts","menu/convert_menu.tsx","menu/search_index.ts","menu/top_bar.tsx","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","config.tsx","chart.tsx","languages/languages-loader.ts","app.tsx","index.tsx","util/date_util.ts","datasource/load_data.ts"],"names":["TopolaError","code","message","args","Error","Object","defineProperty","exports","value","ChartUtil","getChartInfoWithoutMargin","getChartInfo","linkId","V_SPACING","H_SPACING","d3_selection_1","require","d3_flextree_1","d3_array_1","HIDE_TIME_MS","MOVE_TIME_MS","node","parent","id","_a","data","generation","child","additionalMarriage","nodes","x0","min","d","x","width","y0","y","height","size","max","origin","options","this","prototype","linkHorizontal","s","sAnchor","renderer","getFamilyAnchor","dAnchor","spouseParentNodeId","getSpouseAnchor","getIndiAnchor","sx","sy","_b","dx","dy","midX","linkVertical","midY","linkAdditionalMarriage","nodeIndex","children","findIndex","n","siblingNode","updateSvgDimensions","chartInfo","group","select","svgSelector","animate","transition","delay","duration","attr","layOutChart","root","layoutOptions","_this","svg","empty","append","text","getCss","each","depth","flipVertically","baseGeneration","updateNodes","descendants","vSizePerDepth","Map","maxVSize","horizontal","get","set","vSize","vSpacing","undefined","hSpacing","flextree","nodeSize","maxChildSize_1","maxChildSize","spacing","treemap","forEach","renderChart","getSvgForRendering","nodeAnimation","renderNodes","linkAnimation","renderLinks","Promise","all","resolve","boundNodes","selectAll","nodeEnter","enter","transitionsPending","exit","transitionDone","merge","style","on","render","remove","link","links","filter","boundLinks","path","insert","__assign","assign","t","i","arguments","length","p","hasOwnProperty","call","apply","AncestorChart","getAncestorsTree","chart_util_1","d3_hierarchy_1","id_generator_1","ancestorChartOptions","startIndiFamilies","startIndi","getIndi","getFamiliesAsSpouse","startFam","getFam","getMother","swapStartSpouses","ancestorsRoot","createHierarchy","pop","util","famc","parents","stack","idGenerator","IdGenerator","getFamilyAsChild","getId","push","parentId","family","indi","indiParentNodeId","entry","fam","getFather","father","mother","spouse","stratify","animationPromise","info","ids","has","num","DescendantChart","layOutDescendants","DUMMY_ROOT_NODE_ID","removeDummyNode","allNodes","slice","descendantsRoot","getNodes","famIds","map","famId","indiId","getSpouse","getFamNode","dummyNode_1","_loop_1","this_1","getChildren","childId","childNodes","pointerToId","pointer","substring","idToIndiMap","indis","idToFamMap","fams","prepareGedcom","entries","head","find","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","compareDates","birth","birthDatesComparator","newFams","newChildren","sort","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","title","startsWith","filterImage","convertGedcom","allLanguages","parseGedcom","json","gedcomEntriesToJson","chartData","getName","person","names","subEntry","name","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","jsonToGedcom","gedcomData","processNode","level","line","values","record","trim","getFamPositionHorizontal","getFamPositionVertical","CompositeRenderer","getPreferredFamSize","setPreferredIndiSize","getPreferredIndiSize","indiVSizePerDepth","maxIndiVSize","getIndiVSize","getFamVSize","getVSize","hSize","indiHSize","getHSize","x_1","famYOffset","famXOffset","indiWidth","spouseWidth","familyWidth","indiHeight","spouseHeight","familyHeight","JsonDataProvider","JsonIndiDetails","isEgo","getFirstName","firstName","getLastName","lastName","toUpperCase","getBirthDate","getMaidenName","maidenName","getNumberOfChildren","numberOfChildren","getNumberOfMarriages","numberOfMarriages","getBirthPlace","place","getDeathDate","death","getDeathPlace","isConfirmedDeath","confirmed","getSex","sex","getLanguages","languages","getLanguagesLabel","abbreviations","lang","abbreviation","join","getEthnicity","ethnicity","getTribe","tribe","getImageUrl","getImages","getNotes","notes","getEvents","events","showLanguages","hideLanguages","showEthnicity","hideEthnicity","showId","hideId","showSex","hideSex","JsonFamDetails","husb","wife","getMarriageDate","getMarriagePlace","formatDateOrRange","formatDate","MONTHS_EN","QUALIFIERS_I18N","shortMonthCache","getShortMonth","month","locale","Intl","DateTimeFormat","cacheKey","format","Date","getQualifier","qualifier","language","split","languageMap","formatDateOnly","day","year","date","dateOrRange","dateRange","from","to","__createBinding","create","o","m","k","k2","enumerable","__exportStar","ChartColors","__extends","extendStatics","setPrototypeOf","__proto__","Array","TypeError","String","__","constructor","DetailedRenderer","getLength","_1","date_format_1","composite_renderer_1","DETAILS_HEIGHT","textLengthCache","textClass","g","getComputedTextLength","SEX_SYMBOLS","_super","getColoringClass","colors","NO_COLOR","COLOR_BY_GENERATION","COLOR_BY_SEX","COLOR_BY_ETHNICITY","COLOR_BY_NR_LANGUAGES","COLOR_BY_LANGUAGE","getIndiDetails","detailsList","birthDate","birthPlace","deathDate","deathPlace","symbol","listIndex","details","ethnicityHeight","languagesHeight","idAndSexHeight","maxDetailsWidth","detail","getFamDetails","marriageDate","marriagePlace","update","indiUpdate","hiddenRelatives","xOffset","yOffset","indiEnter","renderIndi","familyEnter","familyUpdate","getFamTransform","renderFamily","xhr","XMLHttpRequest","open","send","status","responseText","statusText","error","console","selection","getSexClass","ethnicityCss","getEthnicityClass","buildEthnicityMap","egoEthnicity","classNum","keys","e","log","getLanguagesClass","selectedLanguageId","Math","resetCss","clear","indiHrefFunc","indiCallback","event","background","selectedLanguage","getClipId","getDetailsWidth","languages_height_start","ethnicity_height_start","maxDetails","v","details_height_start","_loop_2","lineGroup","sexSymbol","border","famHrefFunc","famCallback","gedcomToJson","getDate","parse_gedcom_1","findTag","findTags","extractName","arr","MONTHS","parseDate","parts","lastPart","fullText","firstPart","Number","gedcomDate","date_1","createNotes","notesTag","reduce","concat","createEvent","typeTag","dateTag","placeTag","type","createFam","husbTag","wifeTag","objects","ego","nameTags","isMaiden","nameTag","main","maiden","nchiTag","nmrTag","sexTag","gedcomLanguages","l","includes","ethnicityTag","tribeTag","famcTag","objeTags","realObjeTag","file","createIndi","gedcomContents","parse","HourglassChart","ancestor_chart_1","descendant_chart_1","markHiddenRelatives","displayedNodes","flatMap","parseInt","c","markHiddenRelativesForIndi","f","ancestorNodes","descendantNodes","__spreadArray","il","j","RelativesChart","FilterChildFam","index","indexOf","splice","FilterChildData","layOutAncestorDescendants","focusedNode","ancestorData","eachAfter","descendantOptions","parentHeight","childNode","parentData","left","middle","thisNode","middleX","parentNode","nodeData","indiParent","spouseParent","nodeX","nodeY","nodeWidth","nodeHeight","spouseTreeHeight","dx_1","dy_1","indiTreeHeight","dx_2","dy_2","ancestorOptions","ancestorDescentants","createChart","data_1","SimpleChartHandle","initialRender","renderOptions","chartOptions","indiUrl","famUrl","createChartOptions","chartType","updateSvgSize","setData","DataSourceEnum","analyticsEvent","action","window","gtag","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","defaultMessage","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","closeIcon","Icon","color","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","properties","target","eventSources","sources","intl","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","Tab","Pane","note","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","sub","familyEntry","spouseReference","familySubEntry","eventPlace","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","resolveDate","eventNotes","toEvent","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","eventEntry","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","getMultilineDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","reject","PARENT_READY","postMessage","READY","GEDCOM","loadGedcom","addEventListener","onMessage","getI18nMessage","formatMessage","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","IndividualsTableExample","headerColor","Table","TableHeader","TableRow","TableHeaderCell","TableBody","TableCell","disabled","RelationshipsTableExample","FamiliesTableExample","IndividualsLanguagesTableExample","Papa","columnsValidation","valuesValidation","validateCSV","parsedData","header","skipEmptyLines","errors","rows","requiredColumns","headers","missingColumns","col","checkColumns","cellErrors","row","column","checkMissingValues","indiIdErrors","famIdErrors","langIdErrors","isNaN","checkIdFormat","Sex","Graph","shortestPath","Individual","params","givenName","surname","nickname","birthYear","familySpouses","familyChild","relationships","indID","fatherId","motherId","hasNode","addNode","addEdge","current","minValue","singleSourceLength","capitalize","famID","str","word","charAt","Family","husband","marriaged","divorced","csvToGedcom","languagesContents","individualsContent","relationshipsContent","familiesContent","individualsLanguagesContent","egoIndiId","individuals","parseIndividuals","parseRelationships","families","parseFamilies","mapFamiliesChildren","mapIndividualsSpouses","parseLanguages","individualsLanguages","parseIndividualsLanguages","mapIndividualsLanguages","createGedcomString","parseCSV","personId","langIds","individual","ind","langId","egoIndi","lowestEgoIndi","egoGeneration","_i","prev","createHeader","indiRecords","asGedcom","famRecords","createTail","tail","egoId","egoGen","fetch","headerFile","headerTemplate","toLocaleDateString","replaced","egoSection","repoSection","uid","uuidv4","repo","char","tailFile","tailTemplate","acc","key","initialHeaderColors","ConvertCSVMenu","dialogOpen","setDialogOpen","inputFiles","setInputFiles","headerColors","setHeaderColors","setEgoIndiId","setErrors","history","useHistory","closeDialog","handleUpload","files","validFilenames","validateFilenames","fileReadPromises","reader","FileReader","readAsText","onload","fileContent","validFile","onerror","then","results","validFiles","newHeaderColors","changeHeaderColors","egoTag","document","querySelector","parentElement","setProperty","convert2gedcom","individualsFile","relationshipsFile","familiesFile","individualsLanguagesFile","readFileContents","languagesFile","gedcomString","gedcomFile","Blob","loadFile","imageFileNames","hash","md5","state","Form","onSubmit","float","marginBottom","Input","every","labelPosition","icon","placeholder","onChange","_e","accept","multiple","Actions","Button","secondary","primary","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","initMultiLingualLunrWithoutTrimmer","field","boost","spouseLastName","husbId","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","pipelineFunctions","searchPipelineFunctions","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","searchPipeline","query","ScreenSize","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","debouncedHandleSearch","debounce","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","onResultSelect","onSelection","noResultsMessage","selectFirstResult","isImageFileName","lower","UploadMenu","filesArray","URL","createObjectURL","htmlFor","UrlMenu","setUrl","inputRef","handleLoad","focus","href","TopBar","changeView","view","FileMenus","screenSize","menuOpen","setMenuOpen","cooldown","toggleMenu","setTimeout","standalone","LARGE","SMALL","ChartMenus","showingChart","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","Divider","onDownloadGedcom","onCenterView","greaterThanOrEqual","inverted","at","LanguagesArg","EthnicityArg","IdsArg","SexArg","DEFAULT_CONFIG","HIDE","SHOW","renderLanguagesOption","renderEthnicityOption","languageOptions","COLOR_ARG","COLOR_ARG_INVERSE","LANGUAGES_ARG","LANGUAGES_ARG_INVERSE","ETHNICITY_ARG","ETHNICITY_ARG_INVERSE","ID_ARG","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","config","languagesEnabled","setLanguagesEnabled","ethnicityEnabled","setEthnicityEnabled","idsEnabled","setIdsEnabled","sexEnabled","setSexEnabled","Field","Checkbox","radio","checked","tagName","toggle","newState","ChartType","zoomed","scale","transform","offsetX","clientWidth","offsetY","clientHeight","scrollLeft","scrollTop","scrolled","zoomTransform","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","response","warn","inlineImages","getElementsByTagName","loadImage","drawImageOnCanvas","canvas","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","getAttribute","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","downloadSvg","contents","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","downloadGedcom","getFilename","obj","lastIndexOf","getChartType","Hourglass","Relatives","chartColors","TopolaChartColors","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","resetPosition","freezeAnimation","innerHTML","zoomOutFactor","extent","scaleExtent","translateExtent","scrollTopTween","interpolateNumber","scrollLeftTween","svgTransition","tween","Chart","chartWrapper","prevProps","usePrevious","hideIds","CSVLoader","csvData","idIndex","nameIndex","isoIndex","title_fn","iso","AppState","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getEgoGen","getLowestId","lowest","loadLanguageOptions","Set","getGedcomLanguages","getArguments","getParamFromSearch","chartTypes","embedded","sourceSpec","GEDCOM_URL","handleCors","UPLOADED","EMBEDDED","parsedGen","showSidePanel","messages","de","messages_de","fr","messages_fr","it","messages_it","es","messages_es","pl","messages_pl","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setGedcomString","setFreezeAnimation","setConfig","setAllLanguages","toggleDetails","getEthnicities","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","embeddedDataSource","isNewData","newSourceSpec","newSelection","spec","loadData","loadAllLanguages","loadLanguages","updateUrl","gen","displayErrorPopup","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","exact","DATE_QUALIFIERS","hasDay","hasMonth","hasYear","dateObject","toDateObject","formatOptions","lowerCaseQualifier","formatDateQualifier","dateElement","fromDate","toDate","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","prepareData","cacheId","serializedData","JSON","stringify","sessionStorage","setItem","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","cachedData","getItem","driveUrlMatch","urlToFetch","encodeURIComponent","ok","contentType","charCodeAt"],"mappings":"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","file":"static/js/main.2fe8e8c0.chunk.js","sourcesContent":["/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n    constructor(\n        public readonly code: string,\n        message: string,\n        public readonly args: { [key: string]: string } = {},\n    ) {\n        super(message);\n    }\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.ChartUtil = exports.getChartInfoWithoutMargin = exports.getChartInfo = exports.linkId = exports.V_SPACING = exports.H_SPACING = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst d3_flextree_1 = require(\"d3-flextree\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\n\n/** Horizontal distance between boxes. */\nexports.H_SPACING = 15;\n/** Vertical distance between boxes. */\nexports.V_SPACING = 30;\n/** Margin around the whole drawing. */\nconst MARGIN = 15;\nconst HIDE_TIME_MS = 200;\nconst MOVE_TIME_MS = 500;\n\n/** Assigns an identifier to a link. */\nfunction linkId(node) {\n    if (!node.parent) {\n        return node.id + \":A\";\n    }\n    const _a = node.data.generation > node.parent.data.generation\n        ? [node.data, node.parent.data]\n        : [node.parent.data, node.data], child = _a[0], parent = _a[1];\n    if (child.additionalMarriage) {\n        return child.id + \":A\";\n    }\n    return parent.id + \":\" + child.id;\n}\nexports.linkId = linkId;\n\nfunction getChartInfo(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    }) - MARGIN;\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    }) - MARGIN;\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    }) + MARGIN;\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    }) + MARGIN;\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfo = getChartInfo;\n\nfunction getChartInfoWithoutMargin(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    });\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    });\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    });\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    });\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfoWithoutMargin = getChartInfoWithoutMargin;\n\n/** Utility class with common code for all chart types. */\nlet ChartUtil = /** @class */ (function () {\n\n    function ChartUtil(options) {\n        this.options = options;\n    }\n\n    /** Creates a path from parent to the child node (horizontal layout). */\n    ChartUtil.prototype.linkHorizontal = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midX = (s.x + s.data.width / 2 + d.x - d.data.width / 2) / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + midX + \" \" + sy + \",\\n              \" + midX + \" \" + dy + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    /** Creates a path from parent to the child node (vertical layout). */\n    ChartUtil.prototype.linkVertical = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midY = s.y + s.data.height / 2 + exports.V_SPACING / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + sx + \" \" + midY + \",\\n              \" + dx + \" \" + midY + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    ChartUtil.prototype.linkAdditionalMarriage = function (node) {\n        const nodeIndex = node.parent.children.findIndex(function (n) {\n            return n.data.id === node.data.id;\n        });\n        // Assert nodeIndex > 0.\n        const siblingNode = node.parent.children[nodeIndex - 1];\n        const sAnchor = this.options.renderer.getIndiAnchor(node.data);\n        const dAnchor = this.options.renderer.getIndiAnchor(siblingNode.data);\n        const _a = [node.x + sAnchor[0], node.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [siblingNode.x + dAnchor[0], siblingNode.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        return \"M \" + sx + \", \" + sy + \"\\n            L \" + dx + \", \" + dy;\n    };\n\n    ChartUtil.prototype.updateSvgDimensions = function (chartInfo) {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        const group = svg.select('g');\n        const transition = this.options.animate\n            ? group.transition().delay(HIDE_TIME_MS).duration(MOVE_TIME_MS)\n            : group;\n        transition.attr('transform', \"translate(\" + chartInfo.origin[0] + \", \" + chartInfo.origin[1] + \")\");\n    };\n\n    ChartUtil.prototype.layOutChart = function (root, layoutOptions) {\n        const _this = this;\n        if (layoutOptions === void 0) { layoutOptions = {}; }\n        // Add styles so that calculating text size is correct.\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('style').empty()) {\n            svg.append('style').text(this.options.renderer.getCss());\n        }\n        // Assign generation number.\n        root.each(function (node) {\n            node.data.generation =\n                node.depth * (layoutOptions.flipVertically ? -1 : 1) +\n                    (_this.options.baseGeneration || 0);\n        });\n        // Set preferred sizes.\n        this.options.renderer.updateNodes(root.descendants());\n        const vSizePerDepth = new Map();\n        root.each(function (node) {\n            const depth = node.depth;\n            const maxVSize = d3_array_1.max([\n                _this.options.horizontal ? node.data.width : node.data.height,\n                vSizePerDepth.get(depth),\n            ]);\n            vSizePerDepth.set(depth, maxVSize);\n        });\n        // Set sizes of whole nodes.\n        root.each(function (node) {\n            const vSize = vSizePerDepth.get(node.depth);\n            if (_this.options.horizontal) {\n                node.data.width = vSize;\n            }\n            else {\n                node.data.height = vSize;\n            }\n        });\n        const vSpacing = layoutOptions.vSpacing !== undefined ? layoutOptions.vSpacing : exports.V_SPACING;\n        const hSpacing = layoutOptions.hSpacing !== undefined ? layoutOptions.hSpacing : exports.H_SPACING;\n        // Assigns the x and y position for the nodes.\n        const treemap = d3_flextree_1.flextree()\n            .nodeSize(function (node) {\n                if (_this.options.horizontal) {\n                    const maxChildSize_1 = d3_array_1.max(node.children || [], function (n) {\n                        return n.data.width;\n                    }) || 0;\n                    return [\n                        node.data.height,\n                        (maxChildSize_1 + node.data.width) / 2 + vSpacing,\n                    ];\n                }\n                const maxChildSize = d3_array_1.max(node.children || [], function (n) {\n                    return n.data.height;\n                }) || 0;\n                return [\n                    node.data.width,\n                    (maxChildSize + node.data.height) / 2 + vSpacing,\n                ];\n            }).spacing(function () {\n                return hSpacing;\n            });\n        const nodes = treemap(root).descendants();\n        // Swap x-y coordinates for horizontal layout.\n        nodes.forEach(function (node) {\n            let _a;\n            if (layoutOptions.flipVertically) {\n                node.y = -node.y;\n            }\n            if (_this.options.horizontal) {\n                _a = [node.y, node.x];\n                node.x = _a[0];\n                node.y = _a[1];\n            }\n        });\n        return nodes;\n    };\n\n    ChartUtil.prototype.renderChart = function (nodes) {\n        const svg = this.getSvgForRendering();\n        const nodeAnimation = this.renderNodes(nodes, svg);\n        const linkAnimation = this.renderLinks(nodes, svg);\n        return Promise.all([\n            nodeAnimation,\n            linkAnimation,\n        ]);\n    };\n\n    ChartUtil.prototype.renderNodes = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const boundNodes = svg\n                .select('g')\n                .selectAll('g.node')\n                .data(nodes, function (d) {\n                    return d.id;\n                });\n            const nodeEnter = boundNodes.enter().append('g');\n            let transitionsPending = boundNodes.exit().size() + boundNodes.size() + nodeEnter.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            nodeEnter\n                .merge(boundNodes)\n                .attr('class', function (node) {\n                    return \"node generation\" + node.data.generation;\n                });\n            nodeEnter.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            if (_this.options.animate) {\n                nodeEnter\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            const updateTransition = _this.options.animate\n                ? boundNodes\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundNodes;\n            updateTransition.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            _this.options.renderer.render(nodeEnter, boundNodes);\n            if (_this.options.animate) {\n                boundNodes\n                    .exit()\n                    .transition()\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundNodes.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.renderLinks = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const link = function (parent, child) {\n                if (child.data.additionalMarriage) {\n                    return _this.linkAdditionalMarriage(child);\n                }\n                const flipVertically = parent.data.generation > child.data.generation;\n                if (_this.options.horizontal) {\n                    if (flipVertically) {\n                        return _this.linkHorizontal(child, parent);\n                    }\n                    return _this.linkHorizontal(parent, child);\n                }\n                if (flipVertically) {\n                    return _this.linkVertical(child, parent);\n                }\n                return _this.linkVertical(parent, child);\n            };\n            const links = nodes.filter(function (n) {\n                return !!n.parent || n.data.additionalMarriage;\n            });\n            const boundLinks = svg\n                .select('g')\n                .selectAll('path.link')\n                .data(links, linkId);\n            const path = boundLinks\n                .enter()\n                .insert('path', 'g')\n                .attr('class', function (node) {\n                    return node.data.additionalMarriage ? 'link additional-marriage' : 'link';\n                })\n                .attr('d', function (node) {\n                    return link(node.parent, node);\n                });\n            let transitionsPending = boundLinks.exit().size() + boundLinks.size() + path.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            const linkTransition = _this.options.animate\n                ? boundLinks\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundLinks;\n            linkTransition.attr('d', function (node) {\n                return link(node.parent, node);\n            });\n            if (_this.options.animate) {\n                path\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(2 * HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(0)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            if (_this.options.animate) {\n                boundLinks\n                    .exit()\n                    .transition()\n                    .duration(0)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundLinks.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.getSvgForRendering = function () {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('g').empty()) {\n            svg.append('g');\n        }\n        return svg;\n    };\n    return ChartUtil;\n}());\nexports.ChartUtil = ChartUtil;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AncestorChart = exports.getAncestorsTree = void 0;\nvar chart_util_1 = require(\"./chart-util\");\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar id_generator_1 = require(\"./id-generator\");\nfunction getAncestorsTree(options) {\n    var ancestorChartOptions = __assign({}, options);\n    var startIndiFamilies = options.startIndi\n        ? options.data.getIndi(options.startIndi).getFamiliesAsSpouse()\n        : [];\n    // If the start individual is set and this person has at least one spouse,\n    // start with the family instead.\n    if (startIndiFamilies.length) {\n        ancestorChartOptions.startFam = startIndiFamilies[0];\n        ancestorChartOptions.startIndi = undefined;\n        var fam = options.data.getFam(startIndiFamilies[0]);\n        if (fam.getMother() === options.startIndi) {\n            ancestorChartOptions.swapStartSpouses = true;\n        }\n    }\n    var ancestors = new AncestorChart(ancestorChartOptions);\n    var ancestorsRoot = ancestors.createHierarchy();\n    // Remove spouse's ancestors if there are multiple spouses\n    // to avoid showing ancestors of just one spouse.\n    if (startIndiFamilies.length > 1 &&\n        ancestorsRoot.children &&\n        ancestorsRoot.children.length > 1) {\n        ancestorsRoot.children.pop();\n        ancestorsRoot.data.spouseParentNodeId = undefined;\n    }\n    return ancestorsRoot;\n}\nexports.getAncestorsTree = getAncestorsTree;\n/** Renders an ancestors chart. */\nvar AncestorChart = /** @class */ (function () {\n    function AncestorChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    /** Creates a d3 hierarchy from the input data. */\n    AncestorChart.prototype.createHierarchy = function () {\n        let id;\n        let famc;\n        let indi;\n        var parents = [];\n        var stack = [];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        if (this.options.startIndi) {\n            indi = this.options.data.getIndi(this.options.startIndi);\n            famc = indi.getFamilyAsChild();\n            id = famc ? idGenerator.getId(famc) : undefined;\n            if (famc) {\n                stack.push({\n                    id: famc,\n                    parentId: this.options.startIndi,\n                    family: { id: famc },\n                });\n            }\n            parents.push({\n                id: this.options.startIndi,\n                indi: { id: this.options.startIndi },\n                indiParentNodeId: id,\n            });\n        }\n        else {\n            stack.push({\n                id: idGenerator.getId(this.options.startFam),\n                family: { id: this.options.startFam },\n            });\n        }\n        while (stack.length) {\n            var entry = stack.pop();\n            var fam = this.options.data.getFam(entry.family.id);\n            if (!fam) {\n                continue;\n            }\n            var _a = entry.family.id === this.options.startFam &&\n                this.options.swapStartSpouses\n                ? [fam.getMother(), fam.getFather()]\n                : [fam.getFather(), fam.getMother()], father = _a[0], mother = _a[1];\n            if (!father && !mother) {\n                continue;\n            }\n            if (mother) {\n                entry.spouse = { id: mother };\n                indi = this.options.data.getIndi(mother);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.spouseParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            if (father) {\n                entry.indi = { id: father };\n                indi = this.options.data.getIndi(father);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.indiParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            parents.push(entry);\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    AncestorChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = this.util.layOutChart(root, { flipVertically: true });\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return AncestorChart;\n}());\nexports.AncestorChart = AncestorChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdGenerator = void 0;\n/** Provides unique identifiers. */\nvar IdGenerator = /** @class */ (function () {\n    function IdGenerator() {\n        this.ids = new Map();\n    }\n    /**\n     * Returns the given identifier if it wasn't used before. Otherwise, appends\n     * a number to the given identifier to make it unique.\n     */\n    IdGenerator.prototype.getId = function (id) {\n        if (this.ids.has(id)) {\n            var num = this.ids.get(id);\n            this.ids.set(id, num + 1);\n            return id + \":\" + num;\n        }\n        this.ids.set(id, 1);\n        return id;\n    };\n    return IdGenerator;\n}());\nexports.IdGenerator = IdGenerator;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescendantChart = exports.layOutDescendants = exports.DUMMY_ROOT_NODE_ID = void 0;\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar chart_util_1 = require(\"./chart-util\");\nvar id_generator_1 = require(\"./id-generator\");\nexports.DUMMY_ROOT_NODE_ID = 'DUMMY_ROOT_NODE';\nfunction layOutDescendants(options, layoutOptions) {\n    if (layoutOptions === void 0) { layoutOptions = {}; }\n    var descendants = new DescendantChart(options);\n    var descendantsRoot = descendants.createHierarchy();\n    return removeDummyNode(new chart_util_1.ChartUtil(options).layOutChart(descendantsRoot, layoutOptions));\n}\nexports.layOutDescendants = layOutDescendants;\n/** Removes the dummy root node if it was added in createHierarchy(). */\nfunction removeDummyNode(allNodes) {\n    if (allNodes[0].id !== exports.DUMMY_ROOT_NODE_ID) {\n        return allNodes;\n    }\n    var nodes = allNodes.slice(1);\n    // Move first node to (0, 0) coordinates.\n    var dx = -nodes[0].x;\n    var dy = -nodes[0].y;\n    nodes.forEach(function (node) {\n        if (node.parent &&\n            node.parent.id === exports.DUMMY_ROOT_NODE_ID &&\n            !node.data.additionalMarriage) {\n            node.parent = null;\n        }\n        node.x += dx;\n        node.y += dy;\n        node.data.generation--;\n    });\n    return nodes;\n}\n/** Returns the spouse of the given individual in the given family. */\nfunction getSpouse(indiId, fam) {\n    if (fam.getFather() === indiId) {\n        return fam.getMother();\n    }\n    return fam.getFather();\n}\n/** Renders a descendants chart. */\nvar DescendantChart = /** @class */ (function () {\n    function DescendantChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    DescendantChart.prototype.getNodes = function (id) {\n        var _this = this;\n        var indi = this.options.data.getIndi(id);\n        var famIds = indi.getFamiliesAsSpouse();\n        if (!famIds.length) {\n            // Single person.\n            return [\n                {\n                    id: id,\n                    indi: {\n                        id: id,\n                    },\n                },\n            ];\n        }\n        // Marriages.\n        var nodes = famIds.map(function (famId) {\n            var entry = {\n                id: famId,\n                indi: {\n                    id: id,\n                },\n                family: {\n                    id: famId,\n                },\n            };\n            var fam = _this.options.data.getFam(famId);\n            var spouse = getSpouse(id, fam);\n            if (spouse) {\n                entry.spouse = { id: spouse };\n            }\n            return entry;\n        });\n        nodes.slice(1).forEach(function (node) {\n            node.additionalMarriage = true;\n        });\n        return nodes;\n    };\n    DescendantChart.prototype.getFamNode = function (famId) {\n        var node = { id: famId, family: { id: famId } };\n        var fam = this.options.data.getFam(famId);\n        var father = fam.getFather();\n        if (father) {\n            node.indi = { id: father };\n        }\n        var mother = fam.getMother();\n        if (mother) {\n            node.spouse = { id: mother };\n        }\n        return node;\n    };\n    /** Creates a d3 hierarchy from the input data. */\n    DescendantChart.prototype.createHierarchy = function () {\n        var _this = this;\n        var parents = [];\n        var nodes = this.options.startIndi\n            ? this.getNodes(this.options.startIndi)\n            : [this.getFamNode(this.options.startFam)];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        nodes.forEach(function (node) { return (node.id = idGenerator.getId(node.id)); });\n        // If there are multiple root nodes, i.e. the start individual has multiple\n        // marriages, create a dummy root node.\n        // After layout is complete, the dummy node will be removed.\n        if (nodes.length > 1) {\n            var dummyNode_1 = {\n                id: exports.DUMMY_ROOT_NODE_ID,\n                height: 1,\n                width: 1,\n            };\n            parents.push(dummyNode_1);\n            nodes.forEach(function (node) { return (node.parentId = dummyNode_1.id); });\n        }\n        parents.push.apply(parents, nodes);\n        var stack = [];\n        nodes.forEach(function (node) {\n            if (node.family) {\n                stack.push(node);\n            }\n        });\n        var _loop_1 = function () {\n            var entry = stack.pop();\n            var fam = this_1.options.data.getFam(entry.family.id);\n            var children = fam.getChildren();\n            children.forEach(function (childId) {\n                var childNodes = _this.getNodes(childId);\n                childNodes.forEach(function (node) {\n                    node.parentId = entry.id;\n                    if (node.family) {\n                        node.id = \"\" + idGenerator.getId(node.family.id);\n                        stack.push(node);\n                    }\n                });\n                parents.push.apply(parents, childNodes);\n            });\n        };\n        var this_1 = this;\n        while (stack.length) {\n            _loop_1();\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    DescendantChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = removeDummyNode(this.util.layOutChart(root));\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return DescendantChart;\n}());\nexports.DescendantChart = DescendantChart;\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {gedcomEntriesToJson, JsonFam, JsonGedcomData, JsonImage, JsonIndi} from '../lib/topola';\nimport {compareDates} from './date_util';\nimport {Language} from \"../languages/languages-loader\";\n\nexport interface GedcomData {\n    /** The HEAD entry. */\n    head: GedcomEntry;\n    /** INDI entries mapped by id. */\n    indis: { [key: string]: GedcomEntry };\n    /** FAM entries mapped by id. */\n    fams: { [key: string]: GedcomEntry };\n    /** Other entries mapped by id, e.g. NOTE, SOUR. */\n    other: { [key: string]: GedcomEntry };\n}\n\nexport interface TopolaData {\n    chartData: JsonGedcomData;\n    gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n    return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n    const map = new Map<string, JsonIndi>();\n    data.indis.forEach((indi) => {\n        map.set(indi.id, indi);\n    });\n    return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n    const map = new Map<string, JsonFam>();\n    data.fams.forEach((fam) => {\n        map.set(fam.id, fam);\n    });\n    return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n    const head = entries.find((entry) => entry.tag === 'HEAD')!;\n    const indis: { [key: string]: GedcomEntry } = {};\n    const fams: { [key: string]: GedcomEntry } = {};\n    const other: { [key: string]: GedcomEntry } = {};\n    entries.forEach((entry) => {\n        if (entry.tag === 'INDI') {\n            indis[pointerToId(entry.pointer)] = entry;\n        } else if (entry.tag === 'FAM') {\n            fams[pointerToId(entry.pointer)] = entry;\n        } else if (entry.pointer) {\n            other[pointerToId(entry.pointer)] = entry;\n        }\n    });\n    return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n\n/** Birthdate comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n    const indiMap = idToIndiMap(gedcom);\n    return (indiId1: string, indiId2: string) => {\n        const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n        const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n        return (\n            compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n            strcmp(indiId1, indiId2)\n        );\n    };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n    const famMap = idToFamMap(gedcom);\n    return (famId1: string, famId2: string) => {\n        const fam1: JsonFam | undefined = famMap.get(famId1);\n        const fam2: JsonFam | undefined = famMap.get(famId2);\n        return (\n            compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n            strcmp(famId1, famId2)\n        );\n    };\n}\n\n/**\n * Sorts children by birthdate in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n    fam: JsonFam,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!fam.children) {\n        return fam;\n    }\n    const newChildren = fam.children.sort(comparator);\n    return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birthdate.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = birthDatesComparator(gedcom);\n    const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n    return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n    indi: JsonIndi,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!indi.fams) {\n        return indi;\n    }\n    const newFams = indi.fams.sort(comparator);\n    return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = marriageDatesComparator(gedcom);\n    const newIndis = gedcom.indis.map((indi) =>\n        sortIndiSpouses(indi, comparator),\n    );\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is returned.\n * Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    getterFunction: (gedcom: GedcomData) => { [key: string]: GedcomEntry },\n) {\n    if (entry.data) {\n        const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n        if (dereferenced) {\n            return dereferenced;\n        }\n    }\n    return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines.\n * Supports continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n    const result = [entry.data];\n    entry.tree.forEach((subentry) => {\n        if (subentry.tag === 'CONC' && subentry.data) {\n            const last = result.length - 1;\n            result[last] += subentry.data;\n        } else if (subentry.tag === 'CONT' && subentry.data) {\n            result.push(subentry.data);\n        }\n    });\n    return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n    return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n    const lowerName = fileName.toLowerCase();\n    return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n    if (!indi.images || indi.images.length === 0) {\n        return indi;\n    }\n    const newImages: JsonImage[] = [];\n    indi.images.forEach((image) => {\n        const filePath = image.url.replaceAll('\\\\', '/');\n        const fileName = filePath.match(/[^/]*$/)![0];\n        // If the image file has been loaded into memory, use it.\n        if (images.has(filePath)) {\n            newImages.push({url: images.get(filePath)!, title: image.title});\n        } else if (images.has(fileName)) {\n            newImages.push({url: images.get(fileName)!, title: image.title});\n        } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n            newImages.push(image);\n        }\n    });\n    return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n    gedcom: JsonGedcomData,\n    images: Map<string, string>,\n): JsonGedcomData {\n    const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birthdate\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param gedcom\n * @param images Map from file name to image URL. This is used to pass in uploaded images.\n * @param allLanguages\n */\nexport function convertGedcom(\n    gedcom: string,\n    allLanguages: Language[],\n    images: Map<string, string>\n): TopolaData {\n    const entries = parseGedcom(gedcom, allLanguages);\n    const json = gedcomEntriesToJson(entries, allLanguages);\n    if (\n        !json ||\n        !json.indis ||\n        !json.indis.length ||\n        !json.fams ||\n        !json.fams.length\n    ) {\n        throw new TopolaError('GEDCOM_READ_FAILED', 'Insufficient GEDCOM data');\n    }\n    return {\n        chartData: filterImages(normalizeGedcom(json), images),\n        gedcom: prepareGedcom(entries)\n    };\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n    const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n    const notMarriedName = names.find(\n        (subEntry) =>\n            subEntry.tree.filter(\n                (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n            ).length === 0,\n    );\n    const name = notMarriedName || names[0];\n    return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n    const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n    const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')?.data;\n    return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(objectEntry: GedcomEntry): GedcomEntry | undefined {\n    return objectEntry.tree.find(\n        (entry) =>\n            entry.tag === 'FILE' &&\n            entry.data.startsWith('http') &&\n            isImageFile(entry.data),\n    );\n}\n\n/**\n * Reverts a TopolaData object to a gedcom string.\n * This is needed to export to gedcom. The original string is not for given, it could have originally come via\n * file upload, but it could have come by other data sources (url, etc.)\n * @param gedcomData\n */\nexport function jsonToGedcom(gedcomData: GedcomData): string {\n    let gedcom = \"\";\n\n    function processNode(node: GedcomEntry, level: number): void {\n        let line = `${level} `;\n        if (node.pointer) line += `${node.pointer} `;\n        line += `${node.tag}`;\n        if (node.data) line += ` ${node.data}`;\n        gedcom += line + '\\n';\n        if (node.tree && node.tree.length > 0) {\n            node.tree.forEach(child => processNode(child, level + 1));\n        }\n    }\n\n    processNode(gedcomData.head, 0);\n    gedcom += '\\n';\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag === \"SUBM\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n        if (record.tag === \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    Object.values(gedcomData.indis).forEach(indi => {\n        processNode(indi, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.fams).forEach(fam => {\n        processNode(fam, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag !== \"SUBM\" && record.tag !== \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    gedcom += \"0 TRLR\";\n    return gedcom.trim();\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFamPositionHorizontal = exports.getFamPositionVertical = exports.CompositeRenderer = void 0;\n\nconst d3_array_1 = require(\"d3-array\");\n\n/**\n * Common code for tree nodes that are composed of individual and family boxes.\n */\nlet CompositeRenderer = /** @class */ (function () {\n\n    function CompositeRenderer(options) {\n        this.options = options;\n    }\n\n    CompositeRenderer.prototype.getPreferredFamSize = function (id) {\n        // No family box in the simple renderer.\n        return [0, 0];\n    };\n\n    CompositeRenderer.prototype.setPreferredIndiSize = function (indi) {\n        let _a;\n        if (!indi) {\n            return;\n        }\n        _a = this.getPreferredIndiSize(indi.id);\n        indi.width = _a[0];\n        indi.height = _a[1];\n    };\n\n    CompositeRenderer.prototype.updateNodes = function (nodes) {\n        const _this = this;\n        // Calculate individual vertical size per depth.\n        const indiVSizePerDepth = new Map();\n        nodes.forEach(function (node) {\n            let _a;\n            _this.setPreferredIndiSize(node.data.indi);\n            _this.setPreferredIndiSize(node.data.spouse);\n            const family = node.data.family;\n            if (family) {\n                _a = _this.getPreferredFamSize(family.id);\n                family.width = _a[0];\n                family.height = _a[1];\n            }\n            const depth = node.depth;\n            const maxIndiVSize = d3_array_1.max([\n                getIndiVSize(node.data, !!_this.options.horizontal),\n                indiVSizePerDepth.get(depth),\n            ]);\n            indiVSizePerDepth.set(depth, maxIndiVSize);\n        });\n        // Set same width for each depth.\n        nodes.forEach(function (node) {\n            let _a;\n            if (_this.options.horizontal) {\n                if (node.data.indi) {\n                    node.data.indi.width = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.width = indiVSizePerDepth.get(node.depth);\n                }\n            } else {\n                if (node.data.indi) {\n                    node.data.indi.height = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.height = indiVSizePerDepth.get(node.depth);\n                }\n            }\n            const vSize = getVSize(node.data, !!_this.options.horizontal);\n            const hSize = getHSize(node.data, !!_this.options.horizontal);\n            _a = _this.options.horizontal ? [vSize, hSize] : [hSize, vSize];\n            node.data.width = _a[0];\n            node.data.height = _a[1];\n        });\n    };\n\n    CompositeRenderer.prototype.getFamilyAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_1 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const famYOffset = node.family\n                ? d3_array_1.max([-getFamPositionHorizontal(node), 0])\n                : 0;\n            const y_1 = -(node.indi && node.spouse ? node.height / 2 - node.indi.height : 0) +\n                famYOffset;\n            return [x_1, y_1];\n        }\n        const famXOffset = node.family\n            ? d3_array_1.max([-getFamPositionVertical(node), 0])\n            : 0;\n        const x = -(node.indi && node.spouse ? node.width / 2 - node.indi.width : 0) +\n            famXOffset;\n        const y = -node.height / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getSpouseAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_2 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_2 = node.indi ? node.indi.height / 2 : 0;\n            return [x_2, y_2];\n        }\n        const x = node.indi ? node.indi.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getIndiAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_3 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_3 = node.spouse ? -node.spouse.height / 2 : 0;\n            return [x_3, y_3];\n        }\n        const x = node.spouse ? -node.spouse.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    return CompositeRenderer;\n}());\nexports.CompositeRenderer = CompositeRenderer;\n\n/**\n * Returns the relative position of the family box for the vertical layout.\n */\nfunction getFamPositionVertical(node) {\n    const indiWidth = node.indi ? node.indi.width : 0;\n    const spouseWidth = node.spouse ? node.spouse.width : 0;\n    const familyWidth = node.family.width;\n    if (!node.indi || !node.spouse || indiWidth + spouseWidth <= familyWidth) {\n        return (indiWidth + spouseWidth - familyWidth) / 2;\n    }\n    if (familyWidth / 2 >= spouseWidth) {\n        return indiWidth + spouseWidth - familyWidth;\n    }\n    if (familyWidth / 2 >= indiWidth) {\n        return 0;\n    }\n    return indiWidth - familyWidth / 2;\n}\nexports.getFamPositionVertical = getFamPositionVertical;\n\n/**\n * Returns the relative position of the family box for the horizontal layout.\n */\nfunction getFamPositionHorizontal(node) {\n    const indiHeight = node.indi ? node.indi.height : 0;\n    const spouseHeight = node.spouse ? node.spouse.height : 0;\n    const familyHeight = node.family.height;\n    if (!node.indi || !node.spouse) {\n        return (indiHeight + spouseHeight - familyHeight) / 2;\n    }\n    return indiHeight - familyHeight / 2;\n}\nexports.getFamPositionHorizontal = getFamPositionHorizontal;\n\n/** Returns the horizontal size. */\nfunction getHSize(node, horizontal) {\n    if (horizontal) {\n        return ((node.indi ? node.indi.height : 0) +\n            (node.spouse ? node.spouse.height : 0));\n    }\n    const indiHSize = (node.indi ? node.indi.width : 0) + (node.spouse ? node.spouse.width : 0);\n    return d3_array_1.max([indiHSize, node.family ? node.family.width : 0]);\n}\n\nfunction getFamVSize(node, horizontal) {\n    if (horizontal) {\n        return node.family ? node.family.width : 0;\n    }\n    return node.family ? node.family.height : 0;\n}\n\n/** Returns the vertical size of individual boxes. */\nfunction getIndiVSize(node, horizontal) {\n    if (horizontal) {\n        return d3_array_1.max([\n            node.indi ? node.indi.width : 0,\n            node.spouse ? node.spouse.width : 0,\n        ]);\n    }\n    return d3_array_1.max([\n        node.indi ? node.indi.height : 0,\n        node.spouse ? node.spouse.height : 0,\n    ]);\n}\n\n/** Returns the vertical size. */\nfunction getVSize(node, horizontal) {\n    return getIndiVSize(node, horizontal) + getFamVSize(node, horizontal);\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonDataProvider = void 0;\n/** Details of an individual based on Json input. */\nvar JsonIndiDetails = /** @class */ (function () {\n    function JsonIndiDetails(json) {\n        this.json = json;\n    }\n    JsonIndiDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonIndiDetails.prototype.isEgo = function () {\n        return this.json.isEgo;\n    };\n    JsonIndiDetails.prototype.getFamiliesAsSpouse = function () {\n        return this.json.fams || [];\n    };\n    JsonIndiDetails.prototype.getFamilyAsChild = function () {\n        return this.json.famc || null;\n    };\n    JsonIndiDetails.prototype.getFirstName = function () {\n        return this.json.firstName || null;\n    };\n    JsonIndiDetails.prototype.getLastName = function () {\n        // Check if this.json and this.json.lastName exist and are valid before calling toUpperCase()\n        if (this.json.lastName) {\n            return this.json.lastName.toUpperCase();\n        }\n        return null;\n    };\n    JsonIndiDetails.prototype.getBirthDate = function () {\n        return this.json.birth || null;\n    };\n    JsonIndiDetails.prototype.getMaidenName = function () {\n        return this.json.maidenName || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfChildren = function () {\n        return this.json.numberOfChildren || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfMarriages = function () {\n        return this.json.numberOfMarriages || null;\n    };\n    JsonIndiDetails.prototype.getBirthPlace = function () {\n        return (this.json.birth && this.json.birth.place) || null;\n    };\n    JsonIndiDetails.prototype.getDeathDate = function () {\n        return this.json.death || null;\n    };\n    JsonIndiDetails.prototype.getDeathPlace = function () {\n        return (this.json.death && this.json.death.place) || null;\n    };\n    JsonIndiDetails.prototype.isConfirmedDeath = function () {\n        return !!this.json.death && !!this.json.death.confirmed;\n    };\n    JsonIndiDetails.prototype.getSex = function () {\n        return this.json.sex || null;\n    };\n    JsonIndiDetails.prototype.getLanguages = function () {\n        return this.json.languages || [];\n    };\n    JsonIndiDetails.prototype.getLanguagesLabel = function () {\n        const abbreviations = this.json.languages.map(lang => lang.abbreviation);\n        return abbreviations.length > 0 ? `${abbreviations.join(', ')}` : null;\n    };\n    JsonIndiDetails.prototype.getEthnicity = function () {\n        return this.json.ethnicity || null;\n    };\n    JsonIndiDetails.prototype.getTribe = function () {\n        return this.json.tribe || null;\n    };\n    JsonIndiDetails.prototype.getImageUrl = function () {\n        return ((this.json.images &&\n            this.json.images.length > 0 &&\n            this.json.images[0].url) ||\n            null);\n    };\n    JsonIndiDetails.prototype.getImages = function () {\n        return this.json.images || [];\n    };\n    JsonIndiDetails.prototype.getNotes = function () {\n        return this.json.notes || [];\n    };\n    JsonIndiDetails.prototype.getEvents = function () {\n        return this.json.events || [];\n    };\n    JsonIndiDetails.prototype.showLanguages = function () {\n        return !this.json.hideLanguages;\n    };\n    JsonIndiDetails.prototype.showEthnicity = function () {\n        return !this.json.hideEthnicity;\n    };\n    JsonIndiDetails.prototype.showId = function () {\n        return !this.json.hideId;\n    };\n    JsonIndiDetails.prototype.showSex = function () {\n        return !this.json.hideSex;\n    };\n    return JsonIndiDetails;\n}());\n/** Details of a family based on Json input. */\nvar JsonFamDetails = /** @class */ (function () {\n    function JsonFamDetails(json) {\n        this.json = json;\n    }\n    JsonFamDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonFamDetails.prototype.getFather = function () {\n        return this.json.husb || null;\n    };\n    JsonFamDetails.prototype.getMother = function () {\n        return this.json.wife || null;\n    };\n    JsonFamDetails.prototype.getChildren = function () {\n        return this.json.children || [];\n    };\n    JsonFamDetails.prototype.getMarriageDate = function () {\n        return this.json.marriage || null;\n    };\n    JsonFamDetails.prototype.getMarriagePlace = function () {\n        return (this.json.marriage && this.json.marriage.place) || null;\n    };\n    return JsonFamDetails;\n}());\n/** Implementation of the DataProvider interface based on Json input. */\nvar JsonDataProvider = /** @class */ (function () {\n    function JsonDataProvider(json) {\n        var _this = this;\n        this.json = json;\n        this.indis = new Map();\n        this.fams = new Map();\n        json.indis.forEach(function (indi) {\n            return _this.indis.set(indi.id, new JsonIndiDetails(indi));\n        });\n        json.fams.forEach(function (fam) { return _this.fams.set(fam.id, new JsonFamDetails(fam)); });\n    }\n    JsonDataProvider.prototype.getIndi = function (id) {\n        return this.indis.get(id) || null;\n    };\n    JsonDataProvider.prototype.getFam = function (id) {\n        return this.fams.get(id) || null;\n    };\n    return JsonDataProvider;\n}());\nexports.JsonDataProvider = JsonDataProvider;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDateOrRange = exports.formatDate = void 0;\n/** Month in English is used as fallback if a requested translation is not found. */\nvar MONTHS_EN = new Map([\n    [1, 'Jan'],\n    [2, 'Feb'],\n    [3, 'Mar'],\n    [4, 'Apr'],\n    [5, 'May'],\n    [6, 'Jun'],\n    [7, 'Jul'],\n    [8, 'Aug'],\n    [9, 'Sep'],\n    [10, 'Oct'],\n    [11, 'Nov'],\n    [12, 'Dec'],\n]);\n/** Translations of the GEDCOM date qualifiers. */\nvar QUALIFIERS_I18N = new Map([\n    [\n        'cs',\n        new Map([\n            ['cal', 'vypočt.'],\n            ['abt', 'o'],\n            ['est', 'ocenil'],\n            ['before', 'před'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'de',\n        new Map([\n            ['cal', 'errech.'],\n            ['abt', 'etwa'],\n            ['est', 'geschät.'],\n            ['before', 'vor'],\n            ['after', 'nach'],\n        ]),\n    ],\n    [\n        'fr',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'vers'],\n            ['est', 'est.'],\n            ['before', 'avant'],\n            ['after', 'après'],\n        ]),\n    ],\n    [\n        'it',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'circa il'],\n            ['est', 'stim.'],\n            ['before', 'prima del'],\n            ['after', 'dopo del'],\n        ]),\n    ],\n    [\n        'pl',\n        new Map([\n            ['cal', 'wyl.'],\n            ['abt', 'ok.'],\n            ['est', 'szac.'],\n            ['before', 'przed'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'ru',\n        new Map([\n            ['cal', 'выч.'],\n            ['abt', 'ок.'],\n            ['est', 'оцен.'],\n            ['before', 'до'],\n            ['after', 'после'],\n        ]),\n    ],\n]);\nvar shortMonthCache = new Map();\nfunction getShortMonth(month, locale) {\n    if (!Intl || !Intl.DateTimeFormat) {\n        return MONTHS_EN.get(month);\n    }\n    var cacheKey = month + \"|\" + (locale || '');\n    if (shortMonthCache.has(cacheKey)) {\n        return shortMonthCache.get(cacheKey);\n    }\n    var result = new Intl.DateTimeFormat(locale, { month: 'short' }).format(new Date(2000, month - 1));\n    shortMonthCache.set(cacheKey, result);\n    return result;\n}\nfunction getQualifier(qualifier, locale) {\n    var language = locale && locale.split(/[-_]/)[0];\n    var languageMap = language && QUALIFIERS_I18N.get(language);\n    return languageMap ? languageMap.get(qualifier) : qualifier;\n}\n/**\n * Formats the date consisting of day, month and year.\n * All parts of the date are optional.\n */\nfunction formatDateOnly(day, month, year, locale) {\n    if (!day && !month && !year) {\n        return '';\n    }\n    // Fall back to formatting the date manually in case of\n    // - locale not provided\n    // - English (to avoid formatting like 'Oct 11, 2009')\n    // - Lack of i18n support in the browser\n    if (!Intl || !Intl.DateTimeFormat || !locale || locale === 'en') {\n        return [day, month && getShortMonth(month, locale), year].join(' ');\n    }\n    var format = {\n        day: day ? 'numeric' : undefined,\n        month: month ? 'short' : undefined,\n        year: year ? 'numeric' : undefined,\n    };\n    return new Intl.DateTimeFormat(locale, format).format(new Date(year !== null && year !== void 0 ? year : 2000, month ? month - 1 : 1, day !== null && day !== void 0 ? day : 1));\n}\n/** Simple date formatter. */\nfunction formatDate(date, locale) {\n    return [\n        date.qualifier && getQualifier(date.qualifier, locale),\n        formatDateOnly(date.day, date.month, date.year, locale),\n        date.text,\n    ].join(' ');\n}\nexports.formatDate = formatDate;\n/** Formats a DateOrRange object. */\nfunction formatDateOrRange(dateOrRange, locale) {\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, locale);\n    }\n    if (!dateOrRange.dateRange) {\n        return '';\n    }\n    var from = dateOrRange.dateRange.from && formatDate(dateOrRange.dateRange.from);\n    var to = dateOrRange.dateRange.to && formatDate(dateOrRange.dateRange.to);\n    if (from && to) {\n        return from + \" .. \" + to;\n    }\n    if (from) {\n        return getQualifier('after', locale) + \" \" + from;\n    }\n    if (to) {\n        return getQualifier('before', locale) + \" \" + to;\n    }\n    return '';\n}\nexports.formatDateOrRange = formatDateOrRange;\n","var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\n\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"array-flat-polyfill\");\n__exportStar(require(\"./ancestor-chart\"), exports);\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./chart-util\"), exports);\n__exportStar(require(\"./composite-renderer\"), exports);\n__exportStar(require(\"./data\"), exports);\n__exportStar(require(\"./date-format\"), exports);\n__exportStar(require(\"./descendant-chart\"), exports);\n__exportStar(require(\"./detailed-renderer\"), exports);\n__exportStar(require(\"./gedcom\"), exports);\n__exportStar(require(\"./hourglass-chart\"), exports);\n__exportStar(require(\"./relatives-chart\"), exports);\n__exportStar(require(\"./simple-api\"), exports);\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChartColors = void 0;\nlet ChartColors;\n(function (ChartColors) {\n    ChartColors[ChartColors[\"NO_COLOR\"] = 0] = \"NO_COLOR\";\n    ChartColors[ChartColors[\"COLOR_BY_GENERATION\"] = 1] = \"COLOR_BY_GENERATION\";\n    ChartColors[ChartColors[\"COLOR_BY_SEX\"] = 2] = \"COLOR_BY_SEX\";\n    ChartColors[ChartColors[\"COLOR_BY_ETHNICITY\"] = 3] = \"COLOR_BY_ETHNICITY\";\n    ChartColors[ChartColors[\"COLOR_BY_NR_LANGUAGES\"] = 4] = \"COLOR_BY_NR_LANGUAGES\";\n    ChartColors[ChartColors[\"COLOR_BY_LANGUAGE\"] = 5] = \"COLOR_BY_LANGUAGE\";\n})\n// eslint-disable-next-line\n(ChartColors = exports.ChartColors || (exports.ChartColors = {}));\n","var __extends = (this && this.__extends) || (function () {\n    let extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({__proto__: []} instanceof Array && function (d, b) {\n                d.__proto__ = b;\n            }) ||\n            function (d, b) {\n                for (const p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n            };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        if (b === null) {\n            d.prototype = Object.create(b);\n        } else {\n            __.prototype = b.prototype;  // Set the prototype of __ to b's prototype\n            d.prototype = new __();      // Create a new instance of __ to set as d's prototype\n        }\n    };\n})();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedRenderer = exports.getLength = void 0;\n\nconst d3_selection_1 = require(\"d3-selection\");\nconst _1 = require(\"./index\");\nconst date_format_1 = require(\"./date-format\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\nconst composite_renderer_1 = require(\"./composite-renderer\");\nconst INDI_MIN_HEIGHT = 44;\nconst INDI_MIN_WIDTH = 64;\nconst FAM_MIN_HEIGHT = 10;\nconst FAM_MIN_WIDTH = 15;\nconst IMAGE_WIDTH = 70;\n\n/** Minimum box height when an image is present. */\nconst IMAGE_HEIGHT = 90;\nconst ETHNICITY_HEIGHT = 17;\nconst LANGUAGES_HEIGHT = 17;\nconst DETAILS_HEIGHT = 17;\nconst ANIMATION_DELAY_MS = 200;\nconst ANIMATION_DURATION_MS = 500;\nconst textLengthCache = new Map();\n\n/** Calculates the length of the given text in pixels when rendered. */\nfunction getLength(text, textClass) {\n    const cacheKey = text + \"|\" + textClass;\n    if (textLengthCache.has(cacheKey)) {\n        return textLengthCache.get(cacheKey);\n    }\n    const g = d3_selection_1.select('svg').append('g').attr('class', 'detailed node');\n    const x = g.append('text').attr('class', textClass).text(text);\n    const length = x.node().getComputedTextLength();\n    g.remove();\n    textLengthCache.set(cacheKey, length);\n    return length;\n}\nexports.getLength = getLength;\n\nconst SEX_SYMBOLS = new Map([\n    ['F', '\\u2640'],\n    ['M', '\\u2642'],\n]);\n\n/**\n * Renders some details about a person such as date and place of birth\n * and death.\n */\nvar DetailedRenderer = /** @class */ (function (_super) {\n    __extends(DetailedRenderer, _super);\n\n    function DetailedRenderer(options) {\n        var _this = _super.call(this, options) || this;\n        _this.options = options;\n        return _this;\n    }\n\n    DetailedRenderer.prototype.getColoringClass = function () {\n        switch (this.options.colors) {\n            case _1.ChartColors.NO_COLOR:\n                return 'nocolor';\n            case _1.ChartColors.COLOR_BY_GENERATION:\n                return 'bygeneration';\n            case _1.ChartColors.COLOR_BY_SEX:\n                return 'bysex';\n            case _1.ChartColors.COLOR_BY_ETHNICITY:\n                return 'byethnicity';\n            case _1.ChartColors.COLOR_BY_NR_LANGUAGES:\n                return 'bylanguages';\n            case _1.ChartColors.COLOR_BY_LANGUAGE:\n                return 'bylanguages';\n            default:\n                return 'bygeneration';\n        }\n    };\n\n    /** Extracts lines of details for a person. */\n    DetailedRenderer.prototype.getIndiDetails = function (indi) {\n        const detailsList = [];\n        const birthDate = indi.getBirthDate() && date_format_1.formatDateOrRange(indi.getBirthDate(), this.options.locale);\n        const birthPlace = indi.getBirthPlace();\n        const deathDate = indi.getDeathDate() && date_format_1.formatDateOrRange(indi.getDeathDate(), this.options.locale);\n        const deathPlace = indi.getDeathPlace();\n        if (birthDate) {\n            detailsList.push({ symbol: '', text: birthDate });\n        }\n        if (birthPlace) {\n            detailsList.push({ symbol: '', text: birthPlace });\n        }\n        if (birthDate || birthPlace) {\n            detailsList[0].symbol = '*';\n        }\n        const listIndex = detailsList.length;\n        if (deathDate) {\n            detailsList.push({ symbol: '', text: deathDate });\n        }\n        if (deathPlace) {\n            detailsList.push({ symbol: '', text: deathPlace });\n        }\n        if (deathDate || deathPlace) {\n            detailsList[listIndex].symbol = '+';\n        }\n        else if (indi.isConfirmedDeath()) {\n            detailsList.push({ symbol: '+', text: '' });\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredIndiSize = function (id) {\n        // Height\n        const indi = this.options.data.getIndi(id);\n        const details = this.getIndiDetails(indi);\n        const ethnicityHeight = indi.showEthnicity() && indi.getEthnicity() != null ? ETHNICITY_HEIGHT : 0;\n        const languagesHeight = indi.showLanguages() && indi.getLanguages().length > 0 ? LANGUAGES_HEIGHT : 0;\n        const idAndSexHeight = indi.showId() || indi.showSex() ? DETAILS_HEIGHT : 0;\n        const height = d3_array_1.max([\n            INDI_MIN_HEIGHT + languagesHeight + ethnicityHeight + (details.length * DETAILS_HEIGHT) + idAndSexHeight,\n            indi.getImageUrl() ? IMAGE_HEIGHT : 0,\n        ]);\n        // Width\n        const maxDetailsWidth = d3_array_1.max(details.map(detail => getLength(detail.text, 'details')));\n        const width = d3_array_1.max([\n            maxDetailsWidth + 22,\n            getLength(indi.getFirstName() || '', 'name') + 8,\n            getLength(indi.getLastName() || '', 'name') + 8,\n            indi.showLanguages() && indi.getLanguages().length > 0 ? (getLength(indi.getLanguagesLabel(), 'languages') + 28) : 0,\n            indi.showEthnicity() && indi.getEthnicity() != null ? (getLength(indi.getEthnicity(), 'ethnicity') + 28) : 0,\n            getLength(id, 'id') + 32,\n            INDI_MIN_WIDTH,\n        ]) + (indi.getImageUrl() ? IMAGE_WIDTH : 0);\n        return [width, height];\n    };\n\n    /** Extracts lines of details for a family. */\n    DetailedRenderer.prototype.getFamDetails = function (fam) {\n        const detailsList = [];\n        const marriageDate = fam.getMarriageDate() &&\n            date_format_1.formatDateOrRange(fam.getMarriageDate(), this.options.locale);\n        const marriagePlace = fam.getMarriagePlace();\n        if (marriageDate) {\n            detailsList.push({ symbol: '', text: marriageDate });\n        }\n        if (marriagePlace) {\n            detailsList.push({ symbol: '', text: marriagePlace });\n        }\n        if (marriageDate || marriagePlace) {\n            detailsList[0].symbol = '\\u26AD';\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredFamSize = function (id) {\n        const fam = this.options.data.getFam(id);\n        const details = this.getFamDetails(fam);\n        const height = d3_array_1.max([10 + details.length * DETAILS_HEIGHT, FAM_MIN_HEIGHT]);\n        const maxDetailsWidth = d3_array_1.max(details.map(function (x) { return getLength(x.text, 'details'); }));\n        const width = d3_array_1.max([maxDetailsWidth + 22, FAM_MIN_WIDTH]);\n        return [width, height];\n    };\n\n    DetailedRenderer.prototype.render = function (enter, update) {\n        const _this = this;\n        enter = enter.append('g').attr('class', 'detailed');\n        update = update.select('g');\n\n        const indiUpdate = enter\n            .merge(update)\n            .selectAll('g.indi')\n            .data(function (node) {\n                const result = [];\n                const famXOffset = !_this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionVertical(node.data), 0])\n                    : 0;\n                const famYOffset = _this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionHorizontal(node.data), 0])\n                    : 0;\n\n                if (node.data.indi) {\n                    node.data.indi.hiddenRelatives = node.data.hiddenRelatives;\n                    result.push({\n                        indi: node.data.indi,\n                        generation: node.data.generation,\n                        xOffset: famXOffset,\n                        yOffset: 0\n                    });\n                }\n                if (node.data.spouse) {\n                    result.push({\n                        indi: node.data.spouse,\n                        generation: node.data.generation,\n                        xOffset: !_this.options.horizontal && node.data.indi ? node.data.indi.width + famXOffset : 0,\n                        yOffset: _this.options.horizontal && node.data.indi ? node.data.indi.height + famYOffset : 0\n                });\n            }\n            return result;\n        }, function (data) { return data.indi.id; });\n        const indiEnter = indiUpdate\n            .enter()\n            .append('g')\n            .attr('class', 'indi');\n        this.transition(indiEnter.merge(indiUpdate)).attr('transform', function (node) {\n            return \"translate(\" + node.xOffset + \", \" + node.yOffset + \")\";\n        });\n        this.renderIndi(indiEnter, indiUpdate);\n\n        const familyEnter = enter.select(function (node) {\n            return node.data.family ? this : null;\n        }).append('g').attr('class', 'family');\n        const familyUpdate = update.select(function (node) {\n            return node.data.family ? this : null;\n        }).select('g.family');\n        this.transition(familyEnter.merge(familyUpdate)).attr('transform', function (node) {\n            return _this.getFamTransform(node.data);\n        });\n        this.renderFamily(familyEnter);\n    };\n\n    DetailedRenderer.prototype.getCss = function () {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', './styles/detailed-renderer.css', false);\n        try {\n            xhr.send();\n            if (xhr.status === 200) {\n                const cssCode = xhr.responseText\n                return cssCode;\n            } else {\n                throw new Error('Failed to load CSS file:' + xhr.statusText);\n            }\n        } catch (error) {\n            console.error('Error occurred while loading CSS:', error);\n            return null;\n        }\n    };\n\n    DetailedRenderer.prototype.transition = function (selection) {\n        return this.options.animate\n            ? selection\n                .transition()\n                .delay(ANIMATION_DELAY_MS)\n                .duration(ANIMATION_DURATION_MS)\n            : selection;\n    };\n\n    DetailedRenderer.prototype.getFamTransform = function (node) {\n        if (this.options.horizontal) {\n            return \"translate(\" + ((node.indi && node.indi.width) || node.spouse.width) + \", \" + d3_array_1.max([composite_renderer_1.getFamPositionHorizontal(node), 0]) + \")\";\n        }\n        return \"translate(\" + d3_array_1.max([composite_renderer_1.getFamPositionVertical(node), 0]) + \", \" + ((node.indi && node.indi.height) || node.spouse.height) + \")\";\n    };\n\n    DetailedRenderer.prototype.getSexClass = function (indiId) {\n        let _a;\n        const sex = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getSex();\n        switch (sex) {\n            case 'M':\n                return 'male';\n            case 'F':\n                return 'female';\n            default:\n                break;\n        }\n    };\n\n    const ethnicityCss = new Map();\n    DetailedRenderer.prototype.getEthnicityClass = function (indiId) {\n        if (ethnicityCss.size === 0) {\n            this.buildEthnicityMap()\n        }\n        let _a;\n        const ethnicity = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getEthnicity();\n        if (ethnicity) {\n            return ethnicityCss.get(ethnicity);\n        }\n        return ''  // Blank if no ethnicity\n    };\n\n    DetailedRenderer.prototype.buildEthnicityMap = function () {\n        try {\n            // Assign the ethnicity of the ego as eth0\n            if (!ethnicityCss.has(\"eth0\")) {\n                const egoEthnicity = Array.from(this.options.data.indis?.values() || []).find(indi => indi.isEgo())?.json.ethnicity\n                if (egoEthnicity) {\n                    ethnicityCss.set(egoEthnicity, \"ego\")\n                }\n            }\n            ethnicityCss.set(\"Blanco\", \"blanco\")\n            ethnicityCss.set(\"Afroamerican\", \"afroamerican\")\n            // Assign the ethnicities of the the rest individuals\n            Array.from(this.options.data.indis?.values() || [])\n                .filter(indi => indi.getEthnicity() != null)\n                .forEach(indi => {\n                    const ethnicity = indi.getEthnicity()\n                    if (!ethnicityCss.has(ethnicity)) {\n                        // Might be a tree with no ego individual. Then there is no eth0\n                        const classNum = Object.keys(ethnicityCss).find(k => ethnicityCss[k] === \"ego\") ? ethnicityCss.size : ethnicityCss.size + 1\n                        ethnicityCss.set(ethnicity, \"eth\" + classNum)\n                    }\n                    if (ethnicityCss.size > 14) {\n                        throw new Error('No CSS for more than 14 different ethnicities')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    DetailedRenderer.prototype.getLanguagesClass = function (indiId, selectedLanguageId) {\n        let _a;\n        const languages = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getLanguages();\n        if (selectedLanguageId != null) {\n            // By specific language\n            const hasSelectedLanguage = languages.some(language => language.id === selectedLanguageId);\n            if (hasSelectedLanguage) {\n                return \"l\" + selectedLanguageId;\n            }\n        } else {\n            // By nr. languages\n            return languages.length > 0 ? 'n' + Math.min(languages.length, 7) : '';\n        }\n        return '' // Blank if no language\n    }\n\n    DetailedRenderer.prototype.resetCss = function () {\n        ethnicityCss.clear()\n        console.log('Cleared CSS maps')\n    }\n\n    DetailedRenderer.prototype.renderIndi = function (enter, update) {\n        const _this = this;\n\n        if (this.options.indiHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr('href', function (data) { return _this.options.indiHrefFunc(data.indi.id); });\n            update = update.select('a');\n        }\n\n        if (this.options.indiCallback) {\n            enter.on('click', function (event, data) {\n                data.indi.hiddenRelatives = false\n                return _this.options.indiCallback({\n                    id: data.indi.id,\n                    generation: data.generation,\n                });\n            });\n        }\n\n        // Background\n        const background = enter\n            .append('rect')\n            .attr('rx', 5)\n            .attr('stroke-width', 0)\n            .attr('class', function (node) {\n                return \"background \"\n                    +_this.getColoringClass() + \" \"\n                    + _this.getSexClass(node.indi.id) + \" \"\n                    + _this.getEthnicityClass(node.indi.id) + \" \"\n                    + _this.getLanguagesClass(node.indi.id, _this.options.selectedLanguage) + \" \";\n            })\n            .merge(update.select('rect.background'));\n\n        this.transition(background)\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n\n        // Clip path\n        const getClipId = function (id) {\n            return \"clip-\" + id;\n        };\n        enter\n            .append('clipPath')\n            .attr('id', function (node) { return getClipId(node.indi.id); })\n            .append('rect')\n            .attr('rx', 5)\n            .merge(update.select('clipPath rect'))\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n        const getIndi = function (data) {\n            return _this.options.data.getIndi(data.indi.id);\n        };\n        const getDetailsWidth = function (data) {\n            return data.indi.width - (getIndi(data).getImageUrl() ? IMAGE_WIDTH : 0);\n        };\n\n        // Name\n        enter\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'name')\n            .attr('transform', function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 17)\"; })\n            .text(function (node) { return getIndi(node).getFirstName(); });\n        enter\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'name')\n            .attr('transform', function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 33)\"; })\n            .text(function (node) { return getIndi(node).getLastName(); })\n\n        // Languages\n        const languages = enter\n            .filter(function (node) {\n                return getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0\n            })\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'languages')\n            .text(function (node) {\n                return getIndi(node).getLanguagesLabel()\n            });\n        this.transition(languages).attr('transform', function (node) {\n            // if the indi does not have languages to show, the height start does not apply\n            const languages_height_start =  getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0 ? 52 : null\n            return \"translate(\" + getDetailsWidth(node) / 2 + \", \" + languages_height_start + \")\";\n        });\n\n        // Ethnicity\n        const ethnicity = enter\n            .filter(function (node) {\n                return getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null\n            })\n            .append('text')\n            .attr('class', 'ethnicity')\n            .text(function (node) {\n                return '¤ ' + getIndi(node).getEthnicity()\n            });\n        this.transition(ethnicity).attr('transform', function (node) {\n            let ethnicity_height_start =  null\n            if (getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) {\n                ethnicity_height_start = 71\n            } else if (getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) {\n                ethnicity_height_start = 55\n            }\n            return \"translate(5, \" + ethnicity_height_start + \")\";\n        });\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const indi = getIndi(node);\n            const detailsList = _this.getIndiDetails(indi);\n            details.set(node.indi.id, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        function details_height_start(node) {\n            return 55\n                + ((getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) ? LANGUAGES_HEIGHT : 0)\n                + ((getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) ? ETHNICITY_HEIGHT : 0)\n        }\n\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.indi.id).length > i;\n            });\n\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'middle')\n                .attr('class', 'details')\n                .attr('transform', function (node) {\n                    return \"translate(9, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].symbol;\n                });\n            lineGroup\n                .append('text')\n                .attr('class', 'details')\n                .attr('transform', function (node) {\n                    return \"translate(15, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n\n        // Render id\n        const id = enter\n            .append('text')\n            .attr('class', 'id')\n            .text(function (node) {\n                return (getIndi(node).showId() ? node.indi.id : '');\n            })\n            .merge(update.select('text.id'));\n        this.transition(id).attr('transform', function (node) { return \"translate(9, \" + (node.indi.height - 5) + \")\"; });\n\n        // Render sex\n        const sex = enter\n            .append('text')\n            .attr('class', 'details sex')\n            .attr('text-anchor', 'end')\n            .text(function (node) {\n                const sexSymbol = SEX_SYMBOLS.get(getIndi(node).getSex() || '') || '';\n                return getIndi(node).showSex() ? sexSymbol : '';\n            })\n            .merge(update.select('text.sex'));\n        this.transition(sex).attr('transform', function (node) {\n            return \"translate(\" + (getDetailsWidth(node) - 5) + \", \" + (node.indi.height - 5) + \")\";\n        });\n\n        // Image\n        enter.filter(function (node) { return !!getIndi(node).getImageUrl(); })\n            .append('image')\n            .attr('width', IMAGE_WIDTH)\n            .attr('height', function (node) { return node.indi.height; })\n            .attr('preserveAspectRatio', 'xMidYMin')\n            .attr('transform', function (node) { return \"translate(\" + (node.indi.width - IMAGE_WIDTH) + \", 0)\"; })\n            .attr('clip-path', function (node) { return \"url(#\" + getClipId(node.indi.id) + \")\"; })\n            .attr('href', function (node) { return getIndi(node).getImageUrl(); });\n\n        // Border on top\n        const border = enter\n            .append('rect')\n            .attr('rx', 5)\n            .attr('fill-opacity', 0)\n            .attr('class', 'border')\n            .attr('stroke-dasharray', function (node) {\n                if (node.indi.hiddenRelatives) {\n                    return '5, 5'\n                } else {\n                    return '0, 0'\n                }\n            })\n            .merge(update.select('rect.border'));\n        this.transition(border)\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n    };\n\n    DetailedRenderer.prototype.renderFamily = function (enter) {\n        const _this = this;\n\n        if (this.options.famHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr('href', function (node) {\n                return _this.options.famHrefFunc(node.data.family.id);\n            });\n        }\n\n        if (this.options.famCallback) {\n            enter.on('click', function (event, node) {\n                return _this.options.famCallback({\n                    id: node.data.family.id,\n                    generation: node.data.generation,\n                });\n            });\n        }\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const famId = node.data.family.id;\n            const fam = _this.options.data.getFam(famId);\n            const detailsList = _this.getFamDetails(fam);\n            details.set(famId, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        // Box\n        enter.filter(function (node) {\n                const detail = details.get(node.data.family.id);\n                return 0 < detail.length;\n        }).append('rect')\n        .attr('class', this.getColoringClass())\n        .attr('rx', 5)\n        .attr('ry', 5)\n        .attr('width', function (node) { return node.data.family.width; })\n        .attr('height', function (node) { return node.data.family.height; });\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.data.family.id).length > i;\n            });\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'middle')\n                .attr('class', 'details')\n                .attr('transform', \"translate(9, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].symbol;\n                });\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'start')\n                .attr('class', 'details')\n                .attr('transform', \"translate(15, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n    };\n\n    return DetailedRenderer;\n}(composite_renderer_1.CompositeRenderer));\nexports.DetailedRenderer = DetailedRenderer;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.gedcomEntriesToJson = exports.gedcomToJson = exports.getDate = void 0;\nconst parse_gedcom_1 = require(\"parse-gedcom\");\n\n/** Returns the first entry with the given tag or undefined if not found. */\nfunction findTag(tree, tag) {\n    return tree.find(function (entry) { return entry.tag === tag; });\n}\n\n/** Returns all entries with the given tag. */\nfunction findTags(tree, tag) {\n    return tree.filter(function (entry) { return entry.tag === tag; });\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer) {\n    return pointer.substring(1, pointer.length - 1);\n}\n\n/** Extracts the first and last name from a GEDCOM name field. */\nfunction extractName(name) {\n    const arr = name.split('/');\n    if (arr.length === 1) {\n        return { firstName: arr[0].trim() };\n    }\n    return { firstName: arr[0].trim(), lastName: arr[1].trim() };\n}\n\n/** Maps month abbreviations used in GEDCOM to month numbers. */\nconst MONTHS = new Map([\n    ['jan', 1],\n    ['feb', 2],\n    ['mar', 3],\n    ['apr', 4],\n    ['may', 5],\n    ['jun', 6],\n    ['jul', 7],\n    ['aug', 8],\n    ['sep', 9],\n    ['oct', 10],\n    ['nov', 11],\n    ['dec', 12],\n]);\n\n/** Parses the GEDCOM date into the Date structure. */\nfunction parseDate(parts) {\n    let lastPart;\n    if (!parts || !parts.length) {\n        return undefined;\n    }\n    const result = {};\n    // Remove parentheses if they surround the text\n    if (parts[0].startsWith('(') && parts[parts.length - 1].endsWith(')')) {\n        parts[0] = parts[0].substring(1);\n        lastPart = parts[parts.length - 1];\n        parts[parts.length - 1] = lastPart.substring(0, lastPart.length - 1);\n    }\n    const fullText = parts.join(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart === 'cal' || firstPart === 'abt' || firstPart === 'est') {\n        result.qualifier = firstPart;\n        parts = parts.slice(1);\n    }\n    if (parts.length && parts[parts.length - 1].match(/^\\d{1,4}$/)) {\n        result.year = Number(parts[parts.length - 1]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        lastPart = parts[parts.length - 1].toLowerCase();\n        if (MONTHS.has(lastPart)) {\n            result.month = MONTHS.get(lastPart);\n            parts = parts.slice(0, parts.length - 1);\n        }\n    }\n    if (parts.length && parts[0].match(/^\\d\\d?$/)) {\n        result.day = Number(parts[0]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        // A part didn't get parsed. Return the whole text verbatim.\n        return { text: fullText };\n    }\n    return result;\n}\n\n/** Parses a GEDCOM date or date range. */\nfunction getDate(gedcomDate) {\n    const parts = gedcomDate.replace(/@.*@/, '').trim().split(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart.startsWith('bet')) {\n        const i = parts.findIndex(function (x) {\n            return x.toLowerCase() === 'and';\n        });\n        const from = parseDate(parts.slice(1, i));\n        const to = parseDate(parts.slice(i + 1));\n        return { dateRange: { from: from, to: to } };\n    }\n    if (firstPart.startsWith('bef') || firstPart.startsWith('aft')) {\n        const date_1 = parseDate(parts.slice(1));\n        if (firstPart.startsWith('bef')) {\n            return { dateRange: { to: date_1 } };\n        }\n        return { dateRange: { from: date_1 } };\n    }\n    const date = parseDate(parts);\n    if (date) {\n        return { date: date };\n    }\n    return undefined;\n}\nexports.getDate = getDate;\n\n/**\n * Tries to treat an input tag as NOTE and parse all lines of notes\n */\nfunction createNotes(notesTag) {\n    if (!notesTag || notesTag.tag !== 'NOTE')\n        return undefined;\n    return findTags(notesTag.tree, 'CONT')\n        .filter(function (x) { return x.data; })\n        .reduce(function (a, i) { return a.concat(i.data); }, [notesTag.data]);\n}\n\n/**\n * Creates a JsonEvent object from a GEDCOM entry.\n * Used for BIRT, DEAT and MARR tags.\n */\nfunction createEvent(entry) {\n    if (!entry) {\n        return undefined;\n    }\n    const typeTag = findTag(entry.tree, 'TYPE');\n    const dateTag = findTag(entry.tree, 'DATE');\n    const placeTag = findTag(entry.tree, 'PLAC');\n    const date = dateTag && dateTag.data && getDate(dateTag.data);\n    const place = placeTag && placeTag.data;\n    if (date || place) {\n        const result = date || {};\n        if (place) {\n            result.place = place;\n        }\n        result.confirmed = true;\n        result.type = typeTag ? typeTag.data : undefined;\n        result.notes = createNotes(findTag(entry.tree, 'NOTE'));\n        return result;\n    }\n    if (entry.data && entry.data.toLowerCase() === 'y') {\n        return { confirmed: true };\n    }\n    return undefined;\n}\n\n/** Creates a JsonIndi object from an INDI entry in GEDCOM. */\nfunction createIndi(entry, objects, ego, allLanguages) {\n    let firstName;\n    let lastName;\n    const id = pointerToId(entry.pointer);\n    const fams = findTags(entry.tree, 'FAMS').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const indi = {id: id, fams: fams};\n\n    // is Ego?\n    if (ego) {\n        indi.isEgo = pointerToId(ego.pointer) === id\n    }\n\n    // Name\n    const nameTags = findTags(entry.tree, 'NAME');\n    const isMaiden = function (nameTag) {\n        const type = findTag(nameTag.tree, 'TYPE');\n        return type !== undefined && type.data === 'maiden';\n    };\n    const main = nameTags.find(function (x) {\n        return !isMaiden(x);\n    });\n    const maiden = nameTags.find(isMaiden);\n    if (main) {\n        const _a = extractName(main.data);\n        firstName = _a.firstName;\n        lastName = _a.lastName;\n        if (firstName) {\n            indi.firstName = firstName;\n        }\n        if (lastName) {\n            indi.lastName = lastName;\n        }\n    }\n    if (maiden) {\n        let _b = extractName(maiden.data);\n        firstName = _b.firstName;\n        lastName = _b.lastName;\n        if (lastName) {\n            indi.maidenName = lastName;\n        }\n        if (firstName && !indi.firstName) {\n            indi.firstName = firstName;\n        }\n    }\n    // Number of children\n    const nchiTag = findTag(entry.tree, 'NCHI');\n    if (nchiTag) {\n        indi.numberOfChildren = +nchiTag.data;\n    }\n    // Number of marriages\n    const nmrTag = findTag(entry.tree, 'NMR');\n    if (nmrTag) {\n        indi.numberOfMarriages = +nmrTag.data;\n    }\n    // Sex\n    const sexTag = findTag(entry.tree, 'SEX');\n    if (sexTag) {\n        indi.sex = sexTag.data;\n    }\n    // Languages\n    const languageTags = findTags(entry.tree, 'LANG')\n    if (languageTags) {\n        const gedcomLanguages = findTags(entry.tree, 'LANG').map(lang => lang.data)\n        indi.languages = allLanguages.filter(l => gedcomLanguages.includes(l.name));\n    }\n    // Ethnicity\n    const ethnicityTag = findTag(entry.tree, '_ETHN');\n    if (ethnicityTag) {\n        indi.ethnicity = ethnicityTag.data;\n    }\n    // Tribe\n    const tribeTag = findTag(entry.tree, '_TRIB');\n    if (tribeTag) {\n        indi.tribe = tribeTag.data;\n    }\n    // Family with parents\n    const famcTag = findTag(entry.tree, 'FAMC');\n    if (famcTag) {\n        indi.famc = pointerToId(famcTag.data);\n    }\n    // Image URL\n    const objeTags = findTags(entry.tree, 'OBJE');\n    if (objeTags.length > 0) {\n        // Dereference OBJECT if needed\n        const getFileTag = function (tag) {\n            const realObjeTag = tag.data ? objects.get(pointerToId(tag.data)) : tag;\n            if (!realObjeTag)\n                return undefined;\n            const file = findTag(realObjeTag.tree, 'FILE');\n            const title = findTag(realObjeTag.tree, 'TITL');\n            if (!file)\n                return undefined;\n            return {\n                url: file.data,\n                title: title && title.data,\n            };\n        };\n        indi.images = objeTags\n            .map(getFileTag)\n            .filter(function (x) { return x !== undefined; });\n    }\n    // Birthdate and place\n    const birth = createEvent(findTag(entry.tree, 'BIRT'));\n    if (birth) {\n        indi.birth = birth;\n    }\n    // Death date and place\n    const death = createEvent(findTag(entry.tree, 'DEAT'));\n    if (death) {\n        indi.death = death;\n    }\n    // Notes\n    indi.notes = createNotes(findTag(entry.tree, 'NOTE'));\n    // Events\n    indi.events = findTags(entry.tree, 'EVEN')\n        .map(createEvent)\n        .filter(function (x) { return x !== null; });\n    return indi;\n}\n\n/** Creates a JsonFam object from an FAM entry in GEDCOM. */\nfunction createFam(entry) {\n    const id = pointerToId(entry.pointer);\n    const children = findTags(entry.tree, 'CHIL').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const fam = {id: id, children: children};\n    // Husband.\n    const husbTag = findTag(entry.tree, 'HUSB');\n    if (husbTag) {\n        fam.husb = pointerToId(husbTag.data);\n    }\n    // Wife.\n    const wifeTag = findTag(entry.tree, 'WIFE');\n    if (wifeTag) {\n        fam.wife = pointerToId(wifeTag.data);\n    }\n    // Marriage\n    const marriage = createEvent(findTag(entry.tree, 'MARR'));\n    if (marriage) {\n        fam.marriage = marriage;\n    }\n    return fam;\n}\n\n/** Creates a map from ID to entry from an array of entries. */\nfunction createMap(entries) {\n    return new Map(entries.map(function (entry) { return [pointerToId(entry.pointer), entry]; }));\n}\n\n/** Parses a GEDCOM file into a JsonGedcomData structure. */\nfunction gedcomToJson(gedcomContents, allLanguages) {\n    return gedcomEntriesToJson(parse_gedcom_1.parse(gedcomContents, allLanguages));\n}\nexports.gedcomToJson = gedcomToJson;\n\n/** Converts parsed GEDCOM entries into a JsonGedcomData structure. */\nfunction gedcomEntriesToJson(gedcom, allLanguages) {\n    const objects = createMap(findTags(gedcom, 'OBJE'));\n    const ego = findTags(gedcom, 'EGO')\n    const indis = findTags(gedcom, 'INDI').map(function (entry) {\n        return createIndi(entry, objects, ego.length > 0 ? ego[0] : undefined, allLanguages);\n    });\n    const fams = findTags(gedcom, 'FAM').map(createFam);\n    return { indis: indis, fams: fams };\n}\nexports.gedcomEntriesToJson = gedcomEntriesToJson;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.HourglassChart = void 0;\n\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar chart_util_1 = require(\"./chart-util\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\n\n/**\n * Renders an hourglass chart. It consists of an ancestor chart and\n * a descendant chart for a family.\n */\nvar HourglassChart = /** @class */ (function () {\n    function HourglassChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n\n    HourglassChart.prototype.markHiddenRelatives = function (nodes, gedcomData) {\n        let displayedNodes = nodes.flatMap(function (node) {\n            if (node.data.family) {\n                return [node.data.indi.id, node.data.spouse.id];\n            } else {\n                return [node.data.indi.id];\n            }\n        });\n        displayedNodes = displayedNodes.sort((a, b) => {\n            const numA = parseInt(a.slice(1));\n            const numB = parseInt(b.slice(1));\n            return numA - numB;\n        });\n        for (var n = 0; n < nodes.length; n++) {\n            var node = nodes[n];\n            if (node.data.family) {\n                const fam = gedcomData.fams.get(node.data.family.id)\n                // this family has children who are not displayed\n                for (var c = 0; c < fam.json.children.length; c++) {\n                    const childId = fam.json.children[c]\n                    if (!displayedNodes.includes(childId)) {\n                        node.data.hiddenRelatives = true\n                        break;\n                    }\n                }\n                // check the wife parents\n                this.markHiddenRelativesForIndi(node.data.spouse, gedcomData, displayedNodes);\n            } else {\n                // go through each family to find the parents of this indi\n                this.markHiddenRelativesForIndi(node.data.indi, gedcomData, displayedNodes);\n            }\n        }\n    }\n\n    HourglassChart.prototype.markHiddenRelativesForIndi = function (node, gedcomData, displayedNodes) {\n        // check all parent until it finds the child\n        for (var f = 0; f < gedcomData.fams.size; f++) {\n            const fam = Array.from(gedcomData.fams.values())[f]\n            if (fam.json.children.length > 0) {\n                if (fam.json.children.includes(node.id)) {\n                    // parents found\n                    if (!displayedNodes.includes(fam.json.husb)) {\n                        node.hiddenRelatives = true\n                        break;\n                    }\n                    if (!displayedNodes.includes(fam.json.wife)) {\n                        node.hiddenRelatives = true\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    HourglassChart.prototype.render = function () {\n        const ancestorsRoot = ancestor_chart_1.getAncestorsTree(this.options);\n        const ancestorNodes = this.util.layOutChart(ancestorsRoot, { flipVertically: true });\n        const descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // slice(1) removes the duplicated start node.\n        const nodes = ancestorNodes.slice(1).concat(descendantNodes);\n        // dash the stroke of indis having non-visible relatives\n        this.markHiddenRelatives(nodes, this.options.data)\n\n        const animationPromise = this.util.renderChart(nodes);\n        const info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return HourglassChart;\n}());\nexports.HourglassChart = HourglassChart;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelativesChart = void 0;\n\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar id_generator_1 = require(\"./id-generator\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\nvar d3_array_1 = require(\"d3-array\");\nvar chart_util_1 = require(\"./chart-util\");\n\n/** A view of a family that hides one child individual. */\nvar FilterChildFam = /** @class */ (function () {\n    function FilterChildFam(fam, childId) {\n        this.fam = fam;\n        this.childId = childId;\n    }\n    FilterChildFam.prototype.getId = function () {\n        return this.fam.getId();\n    };\n    FilterChildFam.prototype.getFather = function () {\n        return this.fam.getFather();\n    };\n    FilterChildFam.prototype.getMother = function () {\n        return this.fam.getMother();\n    };\n    FilterChildFam.prototype.getChildren = function () {\n        var children = __spreadArray([], this.fam.getChildren());\n        var index = children.indexOf(this.childId);\n        if (index !== -1) {\n            children.splice(index, 1);\n        }\n        return children;\n    };\n    return FilterChildFam;\n}());\n/** Data provider proxy that filters out a specific child individual. */\nvar FilterChildData = /** @class */ (function () {\n    function FilterChildData(data, childId) {\n        this.data = data;\n        this.childId = childId;\n    }\n    FilterChildData.prototype.getIndi = function (id) {\n        return this.data.getIndi(id);\n    };\n    FilterChildData.prototype.getFam = function (id) {\n        return new FilterChildFam(this.data.getFam(id), this.childId);\n    };\n    return FilterChildData;\n}());\n/** Chart layout showing all relatives of a person. */\nvar RelativesChart = /** @class */ (function () {\n    function RelativesChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n        this.options.idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n    }\n    RelativesChart.prototype.layOutAncestorDescendants = function (ancestorsRoot, focusedNode) {\n        // let ancestorDescentants: Array<HierarchyPointNode<TreeNode>> = [];\n        var _this = this;\n        var ancestorData = new Map();\n        ancestorsRoot.eachAfter(function (node) {\n            if (!node.parent) {\n                return;\n            }\n            var descendantOptions = __assign({}, _this.options);\n            descendantOptions.startFam = node.data.family.id;\n            descendantOptions.startIndi = undefined;\n            var child = node.id === node.parent.data.spouseParentNodeId\n                ? node.parent.data.spouse.id\n                : node.parent.data.indi.id;\n            descendantOptions.data = new FilterChildData(descendantOptions.data, child);\n            descendantOptions.baseGeneration =\n                (_this.options.baseGeneration || 0) - node.depth;\n            var descendantNodes = descendant_chart_1.layOutDescendants(descendantOptions);\n            // The id could be modified because of duplicates. This can happen when\n            // drawing one family in multiple places of the chart).\n            node.data.id = descendantNodes[0].id;\n            var chartInfo = chart_util_1.getChartInfoWithoutMargin(descendantNodes);\n            var parentData = (node.children || []).map(function (childNode) {\n                return ancestorData.get(childNode.data.id);\n            });\n            var parentHeight = parentData\n                .map(function (data) { return data.height; })\n                .reduce(function (a, b) { return a + b + chart_util_1.V_SPACING; }, 0);\n            var data = {\n                descendantNodes: descendantNodes,\n                width: chartInfo.size[0],\n                height: chartInfo.size[1] + parentHeight,\n                x: chartInfo.origin[0],\n                y: chartInfo.origin[1] + parentHeight,\n            };\n            ancestorData.set(node.data.id, data);\n        });\n        ancestorsRoot.each(function (node) {\n            if (!node.parent) {\n                return;\n            }\n            var data = ancestorData.get(node.data.id);\n            var parentData = ancestorData.get(node.parent.data.id);\n            data.left =\n                parentData && !parentData.middle\n                    ? parentData.left\n                    : node.parent.data.indiParentNodeId === node.id;\n            data.middle =\n                (!parentData || parentData.middle) &&\n                node.parent.children.length === 1;\n        });\n        ancestorsRoot.each(function (node) {\n            var data = ancestorData.get(node.data.id);\n            var thisNode = data ? data.descendantNodes[0] : focusedNode;\n            (node.children || []).forEach(function (child) {\n                var childNode = ancestorData.get(child.data.id).descendantNodes[0];\n                childNode.parent = thisNode;\n            });\n            if (node.data.indiParentNodeId && node.children) {\n                thisNode.data.indiParentNodeId = node.children.find(function (childNode) { return childNode.id === node.data.indiParentNodeId; }).data.id;\n            }\n            if (node.data.spouseParentNodeId && node.children) {\n                thisNode.data.spouseParentNodeId = node.children.find(function (childNode) { return childNode.id === node.data.spouseParentNodeId; }).data.id;\n            }\n        });\n        ancestorsRoot.each(function (node) {\n            let middleX;\n            let parentData;\n            let parentNode;\n            let data;\n            var nodeData = ancestorData.get(node.data.id);\n            // Lay out the nodes produced by laying out descendants of ancestors\n            // instead of the ancestor nodes from ancestorsRoot.\n            var thisNode = nodeData ? nodeData.descendantNodes[0] : focusedNode;\n            var indiParent = node.children &&\n                node.children.find(function (child) { return child.id === node.data.indiParentNodeId; });\n            var spouseParent = node.children &&\n                node.children.find(function (child) { return child.id === node.data.spouseParentNodeId; });\n            var nodeX = thisNode.x;\n            var nodeY = thisNode.y;\n            var nodeWidth = thisNode.data.width;\n            var nodeHeight = thisNode.data.height;\n            var indiWidth = thisNode.data.indi ? thisNode.data.indi.width : 0;\n            var spouseWidth = thisNode.data.spouse\n                ? thisNode.data.spouse.width\n                : 0;\n            // Lay out the individual's ancestors and their descendants.\n            if (indiParent) {\n                data = ancestorData.get(indiParent.data.id);\n                parentNode = data.descendantNodes[0];\n                parentData = parentNode.data;\n                var spouseTreeHeight = spouseParent\n                    ? ancestorData.get(spouseParent.data.id).height + chart_util_1.V_SPACING\n                    : 0;\n                var dx_1 = nodeX +\n                    data.x -\n                    nodeWidth / 2 +\n                    indiWidth / 2 +\n                    (data.left ? -data.width - chart_util_1.H_SPACING : chart_util_1.H_SPACING);\n                var dy_1 = nodeY +\n                    data.y -\n                    nodeHeight / 2 -\n                    data.height +\n                    (data.left ? -chart_util_1.V_SPACING : -spouseTreeHeight - chart_util_1.V_SPACING);\n                // Move all nodes by (dx, dy). The ancestor node,\n                // ie. data.descendantNodes[0] is now at (0, 0).\n                data.descendantNodes.forEach(function (node) {\n                    node.x += dx_1;\n                    node.y += dy_1;\n                });\n                // Set the ancestor's horizontal position independently.\n                middleX = indiWidth / 2 -\n                    nodeWidth / 2 +\n                    parentData.width / 2 -\n                    (parentData.indi\n                        ? parentData.indi.width\n                        : parentData.spouse.width);\n                if (data.middle) {\n                    parentNode.x = 0;\n                }\n                else if (!nodeData || nodeData.middle) {\n                    parentNode.x =\n                        -nodeWidth / 2 - parentData.width / 2 + indiWidth - chart_util_1.H_SPACING / 2;\n                }\n                else if (data.left) {\n                    parentNode.x =\n                        nodeX +\n                        d3_array_1.min([\n                            nodeWidth / 2 -\n                            parentData.width / 2 -\n                            spouseWidth / 2 -\n                            chart_util_1.H_SPACING,\n                            middleX,\n                        ]);\n                }\n                else {\n                    parentNode.x =\n                        nodeX + d3_array_1.max([parentData.width / 2 - nodeWidth / 2, middleX]);\n                }\n            }\n            // Lay out the spouse's ancestors and their descendants.\n            if (spouseParent) {\n                data = ancestorData.get(spouseParent.data.id);\n                parentNode = data.descendantNodes[0];\n                parentData = parentNode.data;\n                const indiTreeHeight = indiParent\n                    ? ancestorData.get(indiParent.data.id).height + chart_util_1.V_SPACING\n                    : 0;\n                const dx_2 = nodeX +\n                    data.x +\n                    nodeWidth / 2 -\n                    spouseWidth / 2 +\n                    (data.left ? -data.width - chart_util_1.H_SPACING : chart_util_1.H_SPACING);\n                const dy_2 = nodeY +\n                    data.y -\n                    nodeHeight / 2 -\n                    data.height +\n                    (data.left ? -indiTreeHeight - chart_util_1.V_SPACING : -chart_util_1.V_SPACING);\n                // Move all nodes by (dx, dy). The ancestor node,\n                // ie. data.descendantNodes[0] is now at (0, 0).\n                data.descendantNodes.forEach(function (node) {\n                    node.x += dx_2;\n                    node.y += dy_2;\n                });\n                // Set the ancestor's horizontal position independently.\n                middleX = nodeWidth / 2 -\n                    spouseWidth / 2 +\n                    parentData.width / 2 -\n                    (parentData.indi\n                        ? parentData.indi.width\n                        : parentData.spouse.width);\n                if (data.middle) {\n                    parentNode.x = 0;\n                }\n                else if (!nodeData || nodeData.middle) {\n                    parentNode.x =\n                        nodeWidth / 2 + parentData.width / 2 - spouseWidth + chart_util_1.H_SPACING / 2;\n                }\n                else if (data.left) {\n                    parentNode.x =\n                        nodeX + d3_array_1.min([nodeWidth / 2 - parentData.width / 2, middleX]);\n                }\n                else {\n                    parentNode.x =\n                        nodeX +\n                        d3_array_1.max([\n                            parentData.width / 2 - nodeWidth / 2 + indiWidth / 2 + chart_util_1.H_SPACING,\n                            middleX,\n                        ]);\n                }\n            }\n        });\n        return Array.from(ancestorData.values())\n            .map(function (data) { return data.descendantNodes; })\n            .reduce(function (a, b) { return a.concat(b); }, []);\n    };\n    RelativesChart.prototype.render = function () {\n        var descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // Don't use common id generator because these nodes will not be drawn.\n        var ancestorOptions = Object.assign({}, this.options, {\n            idGenerator: undefined,\n        });\n        var ancestorsRoot = ancestor_chart_1.getAncestorsTree(ancestorOptions);\n        var ancestorDescentants = this.layOutAncestorDescendants(ancestorsRoot, descendantNodes[0]);\n        var nodes = descendantNodes.concat(ancestorDescentants);\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return RelativesChart;\n}());\nexports.RelativesChart = RelativesChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChart = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst data_1 = require(\"./data\");\nconst DEFAULT_SVG_SELECTOR = 'svg';\n\nfunction createChartOptions(chartOptions, renderOptions, options) {\n    const data = new data_1.JsonDataProvider(chartOptions.json);\n    const indiHrefFunc = chartOptions.indiUrl ? function (id) {\n            return chartOptions.indiUrl.replace(`${id}`, id);\n        } : undefined;\n    const famHrefFunc = chartOptions.famUrl ? function (id) {\n            return chartOptions.famUrl.replace(`${id}`, id);\n        } : undefined;\n    // If startIndi nor startFam is provided, select the first indi in the data.\n    if (!renderOptions.startIndi && !renderOptions.startFam) {\n        renderOptions.startIndi = chartOptions.json.indis[0].id;\n    }\n    const animate = !options.initialRender && chartOptions.animate;\n    return {\n        data: data,\n        renderer: new chartOptions.renderer({\n            data: data,\n            indiHrefFunc: indiHrefFunc,\n            famHrefFunc: famHrefFunc,\n            indiCallback: chartOptions.indiCallback,\n            famCallback: chartOptions.famCallback,\n            horizontal: chartOptions.horizontal,\n            colors: chartOptions.colors,\n            selectedLanguage: chartOptions.selectedLanguage,\n            animate: animate,\n            locale: chartOptions.locale,\n        }),\n        startIndi: renderOptions.startIndi,\n        startFam: renderOptions.startFam,\n        svgSelector: chartOptions.svgSelector || DEFAULT_SVG_SELECTOR,\n        horizontal: chartOptions.horizontal,\n        baseGeneration: renderOptions.baseGeneration,\n        animate: animate,\n    };\n}\n\nconst SimpleChartHandle = /** @class */ (function () {\n\n    function SimpleChartHandle(options) {\n        this.options = options;\n        this.initialRender = true;\n    }\n\n    SimpleChartHandle.prototype.render = function (renderOptions) {\n        if (renderOptions === void 0) {\n            renderOptions = {};\n        }\n        const chartOptions = createChartOptions(this.options, renderOptions, {\n            initialRender: this.initialRender\n        });\n        // Reset CSS maps\n        if (this.initialRender) {\n            chartOptions.renderer.resetCss();\n        }\n        this.initialRender = false;\n        const chart = new this.options.chartType(chartOptions);\n        const info = chart.render();\n        if (this.options.updateSvgSize !== false) {\n            d3_selection_1.select(chartOptions.svgSelector)\n                .attr('width', info.size[0])\n                .attr('height', info.size[1]);\n        }\n        return info;\n    };\n    /**\n     * Updates the chart input data.\n     * This is useful when the data is dynamically loaded and a different subset\n     * of data will be displayed.\n     */\n    SimpleChartHandle.prototype.setData = function (json) {\n        this.options.json = json;\n    };\n    return SimpleChartHandle;\n}());\n\nfunction createChart(options) {\n    return new SimpleChartHandle(options);\n}\nexports.createChart = createChart;\n","import {IndiInfo} from '../lib/topola';\nimport {TopolaData} from '../util/gedcom_util';\nimport {Language} from \"../languages/languages-loader\";\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n    UPLOADED,\n    GEDCOM_URL,\n    EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n    spec: SourceSpecT;\n    selection?: IndiInfo;\n    allLanguages?: Language[];\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n    /**\n     * Returns true if the application is now loading a completely new data set\n     * and the existing one should be wiped.\n     */\n    isNewData(\n        newSource: SourceSelection<SourceSpecT>,\n        oldSource: SourceSelection<SourceSpecT>,\n        data?: TopolaData,\n    ): boolean;\n\n    /** Loads data from the data source. */\n    loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n    ['ADOP', 'Adoption'],\n    ['BAPM', 'Baptism'],\n    ['BIRT', 'Birth'],\n    ['BURI', 'Burial'],\n    ['CENS', 'Census'],\n    ['CHR', 'Christening'],\n    ['CREM', 'Cremation'],\n    ['DEAT', 'Death'],\n    ['EDUC', 'Education'],\n    ['EMAIL', 'E-mail'],\n    ['EMIG', 'Emigration'],\n    ['EVEN', 'Event'],\n    ['FACT', 'Fact'],\n    ['IMMI', 'Immigration'],\n    ['MARR', 'Marriage'],\n    ['MARS', 'Marriage settlement'],\n    ['ETHN', 'Ethnic'],\n    ['TRIB', 'Clan'],\n    ['LANG', 'Language'],\n    ['DIV', 'Divorce'],\n    ['MILT', 'Military services'],\n    ['NATU', 'Naturalization'],\n    ['OCCU', 'Occupation'],\n    ['TITL', 'Title'],\n    ['WWW', 'WWW'],\n    ['birth', 'Birth name'],\n    ['married', 'Married name'],\n    ['maiden', 'Maiden name'],\n    ['immigrant', 'Immigrant name'],\n    ['aka', 'Also known as'],\n]);\n\ninterface Props {\n    tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n    const normalizedTag = props.tag.replace(/_/g, '');\n    return (\n        <FormattedMessage\n            id={`gedcom.${normalizedTag}`}\n            defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n        />\n    );\n}\n","import {\n    Container,\n    Icon,\n    Image,\n    Label,\n    Message,\n    Modal,\n    Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n    const [imageOpen, setImageOpen] = useState(false);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageFailed, setImageFailed] = useState(false);\n    const [imageSrc, setImageSrc] = useState('');\n\n    if (imageLoaded && imageSrc !== props.url) {\n        setImageLoaded(false);\n    }\n    return (\n        <>\n            <Image\n                className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n                onClick={() => setImageOpen(true)}\n                onLoad={() => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(false);\n                }}\n                onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(true);\n                    e.currentTarget.alt = '';\n                }}\n                src={props.url}\n                alt={props.title || props.filename}\n                centered={true}\n            />\n            <Placeholder className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}>\n                <Placeholder.Image square/>\n            </Placeholder>\n            {imageFailed && (\n                <Container fluid textAlign=\"center\">\n                    <Message negative compact>\n                        <Message.Header>\n                            <FormattedMessage\n                                id=\"error.failed_to_load_image\"\n                                defaultMessage={'Failed to load image file'}\n                            />\n                        </Message.Header>\n                    </Message>\n                </Container>\n            )}\n            <Modal\n                basic\n                size=\"large\"\n                closeIcon={<Icon name=\"close\" color=\"red\"/>}\n                open={imageOpen}\n                onClose={() => setImageOpen(false)}\n                onOpen={() => setImageOpen(true)}\n                centered={false}\n            >\n                <Modal.Header>{props.title}</Modal.Header>\n                <Modal.Content image>\n                    <Image\n                        className=\"modal-image\"\n                        src={props.url}\n                        alt={props.title || props.filename}\n                        label={<Label attached=\"bottom\" content={props.filename}/>}\n                        wrapped\n                    />\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n    lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n    return (\n        <>\n            {props.lines.map((line, index) => (\n                <div key={index}>\n                    <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n                    <br/>\n                </div>\n            ))}\n        </>\n    );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Icon, Item, List, Menu, MenuItemProps, Popup, Tab,} from 'semantic-ui-react';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from '../lib/topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport interface Source {\n    title?: string;\n    author?: string;\n    page?: string;\n    date?: DateOrRange;\n    publicationInfo?: string;\n}\n\ninterface Props {\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n    return (\n        !!images &&\n        images.map((image, index) => (\n            <List key={index}>\n                <List.Item>\n                    <WrappedImage\n                        url={image.url}\n                        filename={image.filename}\n                        title={image.title}\n                    />\n                </List.Item>\n            </List>\n        ))\n    );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n    return (\n        !!notes?.length &&\n        notes.map((note, index) => (\n            <div key={index}>\n                <MultilineText\n                    lines={note.map((line, index) => (\n                        <i key={index}>{line}</i>\n                    ))}\n                />\n            </div>\n        ))\n    );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n    return (\n        !!sources?.length && (\n            <List>\n                {sources.map((source, index) => (\n                    <List.Item key={index}>\n                        <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\"/>\n                        <List.Content>\n                            <List.Header>\n                                <Linkify properties={{target: '_blank'}}>\n                                    {[source.author, source.title, source.publicationInfo]\n                                        .filter((sourceElement) => sourceElement)\n                                        .join(', ')}\n                                </Linkify>\n                            </List.Header>\n                            <List.Description>\n                                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                                {source.date\n                                    ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                                    : null}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n                ))}\n            </List>\n        )\n    );\n}\n\nexport function EventExtras(props: Props) {\n    const intl = useIntl();\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [indi, setIndi] = useState('');\n\n    if (!indi || indi !== props.indi) {\n        setActiveIndex(-1);\n        setIndi(props.indi);\n    }\n\n    function handleTabOnClick(\n        event: React.MouseEvent<HTMLAnchorElement>,\n        menuItemProps: MenuItemProps,\n    ) {\n        menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n            ? setActiveIndex(menuItemProps.index)\n            : setActiveIndex(-1);\n    }\n\n    const imageTab = props.images?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"camera\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n    };\n\n    const noteTab = props.notes?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"sticky note outline\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n    };\n\n    const sourceTab = props.sources?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"quote right\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n    };\n\n    const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n        tab ? [tab] : [],\n    );\n\n    if (panes.length) {\n        return (\n            <Item.Description>\n                <Tab\n                    className=\"event-extras\"\n                    activeIndex={activeIndex}\n                    renderActiveOnly={true}\n                    menu={{\n                        tabular: true,\n                        attached: true,\n                        compact: true,\n                        borderless: true,\n                    }}\n                    panes={panes}\n                />\n            </Item.Description>\n        );\n    }\n    return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry,\n    getName,\n    pointerToId,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\nimport {DateOrRange, getDate} from '../lib/topola';\n\nfunction PersonLink(props: { person: GedcomEntry }) {\n    const location = useLocation();\n    const name = getName(props.person);\n    const search = queryString.parse(location.search);\n    search['indi'] = pointerToId(props.person.pointer);\n    return (\n        <Item.Meta>\n            <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n                {name ? (name) : (<FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>)}\n            </Link>\n        </Item.Meta>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n    entries: GedcomEntry[];\n}\n\ninterface EventData {\n    type: string;\n    date?: DateOrRange;\n    personLink?: GedcomEntry;\n    place?: string[];\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nconst EVENT_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'FAMS',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'MARS', 'DIV'];\n\nfunction EventHeader(props: { event: EventData }) {\n    const intl = useIntl();\n    return (\n        <div className=\"event-header\">\n            <Header as=\"span\" size=\"small\">\n                <TranslatedTag tag={props.event.type}/>\n            </Header>\n            {props.event.date ? (\n                <Header as=\"span\" textAlign=\"right\" sub>\n                    {formatDateOrRange(props.event.date, intl)}\n                </Header>\n            ) : null}\n        </div>\n    );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n    const spouseReference = familyEntry.tree\n        .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n        .find((familySubEntry) => !familySubEntry.data.includes(indi));\n    if (!spouseReference) {\n        return undefined;\n    }\n    return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n    const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n    return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n    return entry.tree\n        .filter((subEntry) => 'OBJE' === subEntry.tag)\n        .map((objectEntry) =>\n            dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n        )\n        .map((objectEntry) => getImageFileEntry(objectEntry))\n        .flatMap((imageFileEntry) =>\n            imageFileEntry ? [\n                    {\n                        url: imageFileEntry?.data || '',\n                        filename: getFileName(imageFileEntry) || '',\n                    },\n                ] : [],\n        );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n    return entry.tree\n        .filter((subEntry) => 'SOUR' === subEntry.tag)\n        .map((sourceEntryReference) => {\n            const sourceEntry = dereference(sourceEntryReference, gedcom, (gedcom) => gedcom.other);\n            const title = sourceEntry.tree.find((subEntry) => 'TITL' === subEntry.tag);\n            const abbr = sourceEntry.tree.find((subEntry) => 'ABBR' === subEntry.tag);\n            const author = sourceEntry.tree.find((subEntry) => 'AUTH' === subEntry.tag);\n            const publicationInfo = sourceEntry.tree.find((subEntry) => 'PUBL' === subEntry.tag);\n            const page = sourceEntryReference.tree.find((subEntry) => 'PAGE' === subEntry.tag);\n            const sourceData = sourceEntryReference.tree.find((subEntry) => 'DATA' === subEntry.tag);\n            const date = sourceData ? resolveDate(sourceData) : undefined;\n            return {\n                title: title?.data || abbr?.data,\n                author: author?.data,\n                page: page?.data,\n                date: date ? getDate(date.data) : undefined,\n                publicationInfo: publicationInfo?.data,\n            };\n        });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n    return entry.tree\n        .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n        .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n        .map((note) => getData(note));\n}\n\nfunction toEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    return entry.tag === 'FAMS' ? toFamilyEvents(entry, gedcom, indi) : toIndiEvent(entry, gedcom, indi);\n}\n\nfunction toIndiEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const date = resolveDate(entry) || null;\n    return [\n        {\n            date: date ? getDate(date.data) : undefined,\n            type: entry.tag,\n            place: eventPlace(entry),\n            images: eventImages(entry, gedcom),\n            notes: eventNotes(entry, gedcom),\n            sources: eventSources(entry, gedcom),\n            indi: indi,\n        },\n    ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n    return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n    return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n        family.tree.filter((entry) => entry.tag === tag),\n    ).map((familyMarriageEvent) => {\n        const date = resolveDate(familyMarriageEvent) || null;\n        return {\n            date: date ? getDate(date.data) : undefined,\n            type: familyMarriageEvent.tag,\n            personLink: getSpouse(indi, family, gedcom),\n            place: eventPlace(familyMarriageEvent),\n            images: eventImages(familyMarriageEvent, gedcom),\n            notes: eventNotes(familyMarriageEvent, gedcom),\n            sources: eventSources(familyMarriageEvent, gedcom),\n            indi: indi,\n        };\n    });\n}\n\nfunction Event(props: { event: EventData }) {\n    return (\n        <Item>\n            <Item.Content>\n                <EventHeader event={props.event}/>\n                {!!props.event.personLink && (<PersonLink person={props.event.personLink}/>)}\n                {!!props.event.place && (<Item.Description>{props.event.place}</Item.Description>)}\n                <EventExtras\n                    images={props.event.images}\n                    notes={props.event.notes}\n                    sources={props.event.sources}\n                    indi={props.event.indi}\n                />\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport function Events(props: Props) {\n    const events = flatMap(EVENT_TAGS, (tag) =>\n        props.entries\n            .filter((entry) => entry.tag === tag)\n            .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi))\n            .flatMap((events) => events)\n            .sort((event1, event2) => compareDates(event1.date, event2.date)),\n    );\n    if (events.length) {\n        return (\n            <>\n                {events.map((event, index) => (\n                    <Event event={event} key={index}/>\n                ))}\n            </>\n        );\n    }\n    return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n    'NAME',\n    'SEX',\n    'FAMC',\n    'FAMS',\n    'NOTE',\n    'SOUR',\n    'LANG',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n    const lines = [];\n    if (entry.data) {\n        lines.push(...getData(entry));\n    }\n    entry.tree\n        .filter((subentry) => subentry.tag === 'NOTE')\n        .forEach((note) =>\n            getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n        );\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <>\n            <Header sub>\n                <TranslatedTag tag={entry.tag}/>\n            </Header>\n            <span>\n                <MultilineText lines={lines}/>\n            </span>\n        </>\n    );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n    const imageFileEntry = getImageFileEntry(objectEntry);\n    return imageFileEntry ? (\n        <div className=\"person-image\">\n            <WrappedImage\n                url={imageFileEntry.data}\n                filename={getFileName(imageFileEntry) || ''}\n            />\n        </div>\n    ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n    return (\n        <MultilineText\n            lines={getData(entry).map((line, index) => (\n                <i key={index}>{line}</i>\n            ))}\n        />\n    );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n    const fullName = entry.data.replaceAll('/', '');\n    const nameType = entry.tree.find(\n        (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n    )?.data;\n    return (\n        <>\n            <Header as=\"span\" size=\"large\">\n                {fullName ? (\n                    fullName\n                ) : (\n                    <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>\n                )}\n            </Header>\n            {fullName && nameType && (\n                <Item.Meta>\n                    <TranslatedTag tag={nameType}/>\n                </Item.Meta>\n            )}\n        </>\n    );\n}\n\nfunction getDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n    return flatMap(tags, (tag) =>\n        entries\n            .filter((entry) => entry.tag === tag)\n            .map((entry) => detailsFunction(entry)),\n    )\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n    return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n    return entries\n        .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n        .filter(hasData)\n        .map((entry) => dataDetails(entry))\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\nfunction getMultilineDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    title: [string, string],\n) {\n    const lines= entries\n        .filter((entry) => tags.includes(entry.tag))\n        .filter(hasData)\n        .map((element) => element.data)\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <Item key=\"languages\">\n            <Item.Content>\n                <Header as=\"span\">\n                    <FormattedMessage id={title[0]} defaultMessage={title[1]}/>\n                </Header>\n                <span>\n                    <MultilineText lines={lines}/>\n                </span>\n            </Item.Content>\n        </Item>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n}\n\nexport function Details(props: Props) {\n    const entries = props.gedcom.indis[props.indi].tree;\n    const entriesWithData = entries\n        .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n        .filter(hasData);\n\n    return (\n        <div className=\"details\">\n            <Item.Group divided>\n                {getDetails(entries, ['NAME'], nameDetails)}\n                {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n                <Events gedcom={props.gedcom} entries={entries} indi={props.indi}/>\n                {getMultilineDetails(entriesWithData, ['LANG'], ['gedcom.languages', 'Languages'])}\n                {getOtherDetails(entriesWithData)}\n                {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n            </Item.Group>\n        </div>\n    );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\nimport {Language} from \"../languages/languages-loader\";\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n    GEDCOM = 'gedcom',\n    READY = 'ready',\n    PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n    message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n    message: EmbeddedMessageType.GEDCOM;\n    gedcom?: string;\n    allLanguages?: Language[]\n}\n\nexport interface EmbeddedSourceSpec {\n    source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<EmbeddedSourceSpec>,\n        oldSource: SourceSelection<EmbeddedSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        // Never reload data.\n        return false;\n    }\n\n    private async onMessage(\n        message: EmbeddedMessage,\n        resolve: (value: TopolaData) => void,\n        reject: (reason: any) => void,\n    ) {\n        if (message.message === EmbeddedMessageType.PARENT_READY) {\n            // Parent didn't receive the first 'ready' message, so we need to send it again.\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n        } else if (message.message === EmbeddedMessageType.GEDCOM) {\n            const gedcom = (message as GedcomMessage).gedcom;\n            const allLanguages = (message as GedcomMessage).allLanguages;\n            if (!gedcom || !allLanguages) {\n                return;\n            }\n            try {\n                const data = await loadGedcom('', gedcom, allLanguages);\n                resolve(data);\n            } catch (error) {\n                reject(error);\n            }\n        }\n    }\n\n    async loadData(source: SourceSelection<EmbeddedSourceSpec>): Promise<TopolaData> {\n        // Notify the parent window that we are ready.\n        return new Promise<TopolaData>((resolve, reject) => {\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n            window.addEventListener('message', (data) =>\n                this.onMessage(data.data, resolve, reject),\n            );\n        });\n    }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n    if (!(error instanceof TopolaError)) {\n        return error.message;\n    }\n    return intl.formatMessage(\n        {\n            id: `error.${error.code}`,\n            defaultMessage: error.message,\n        },\n        error.args,\n    );\n}\n","import {\n    Menu,\n    Dropdown,\n    MenuItemProps,\n    DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n    Menu,\n    Dropdown\n}\n\ninterface Props {\n    menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n    const newProps = {...props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n        <>\n            {props.menuType === MenuType.Menu? (\n                <Menu.Item {...newProps}>{props.children}</Menu.Item>\n            ) : (\n                <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n            )}\n        </>\n    );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n    breakpoints: {\n        small: 320,\n        large: 768,\n    },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import {SemanticCOLORS, Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableRow} from \"semantic-ui-react\";\n\nexport function IndividualsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell>name</TableHeaderCell>\n                    <TableHeaderCell>surname</TableHeaderCell>\n                    <TableHeaderCell>nickname</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>sex *</TableHeaderCell>\n                    <TableHeaderCell >YOB</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>ethnic *</TableHeaderCell>\n                    <TableHeaderCell>clan</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Jane</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>F</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled>Some comments</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled>Johnny</TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled>1983</TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function RelationshipsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell>father_id</TableHeaderCell>\n                    <TableHeaderCell>mother_id</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>I200</TableCell>\n                    <TableCell disabled>I201</TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function FamiliesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>husband_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>wife_id *</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>F200</TableCell>\n                    <TableCell>I200</TableCell>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Common Law settlement</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function IndividualsLanguagesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>language_id *</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>3</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}","const Papa = require(\"papaparse\");\n\nexport const columnsValidation = {\n    \"1_individuals.csv\": [\"id\", \"name\", \"surname\", \"nickname\", \"sex\", \"YOB\", \"ethnic\", \"clan\", \"notes\"],\n    \"2_relationships.csv\": [\"person_id\", \"father_id\", \"mother_id\", \"notes\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport const valuesValidation = {\n    \"1_individuals.csv\": [\"id\", \"sex\"],\n    \"2_relationships.csv\": [\"person_id\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport function validateFilenames(files: File[], validFilenames: string[]): boolean {\n    for (const file of files) {\n        const filename = file.name;\n        if (!validFilenames.includes(filename)) {\n            console.error(`Invalid filename: ${filename}`);\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function validateCSV(filename: string, content: string) {\n    const parsedData = Papa.parse(content, { header: true, skipEmptyLines: true });\n    if (parsedData.errors.length) {\n        console.error(\"CSV loading errors:\", parsedData.errors);\n        return false;\n    }\n    const rows = parsedData.data as Record<string, string>[];\n    return checkColumns(filename, rows, columnsValidation[filename])\n        && checkMissingValues(filename, rows, valuesValidation[filename])\n        && checkIdFormat(filename, rows, valuesValidation[filename]);\n}\n\nexport function checkColumns(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const headers = Object.keys(rows[0]);\n    // Check for missing columns\n    const missingColumns = requiredColumns.filter(col => !headers.includes(col));\n    if (missingColumns.length) {\n        const error = `${filename}: the following required columns are missing: ${missingColumns.join(\", \")}`\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\nexport function checkMissingValues(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const cellErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Checks empty\n            if (!row[column] || row[column].trim() === \"\") {\n                cellErrors.push(`${filename}: row ${index + 1} is missing a value in column: ${column}`);\n            }\n        });\n    });\n    if (cellErrors.length > 0) {\n        console.error(`File ${filename} had ${cellErrors.length} missing values`)\n    }\n    return cellErrors.length <= 0\n}\n\nexport function checkIdFormat(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const indiIdErrors: string[] = [];\n    const famIdErrors: string[] = [];\n    const langIdErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Check id format\n            switch(filename) {\n                case \"1_individuals.csv\":\n                    if (column === \"id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"2_relationships.csv\":\n                    if ([\"person_id\", \"father_id\", \"mother_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"3_families.csv\":\n                    if (column === \"id\" && !row[column].startsWith('F')) {\n                        famIdErrors.push(`${filename}: row ${index + 1} is not a valid family ID`);\n                        console.log(`${filename}: '${column}' must start with 'F'`)\n                    }\n                    if ([\"husband_id\", \"wife_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"4_individuals_languages.csv\":\n                    if (column === \"person_id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    if (column === \"language_id\" && isNaN(Number(row[column]))) {\n                        langIdErrors.push(`${filename}: row ${index + 1} is not a valid language ID`);\n                        console.log(`${filename}: '${column}' must be a number`)\n                    }\n                    break;\n            }\n        });\n    });\n    return indiIdErrors.length <= 0 && famIdErrors.length <= 0 && langIdErrors.length <= 0\n}\n\n","const Graph = require(\"graphology\");\nconst shortestPath = require(\"graphology-shortest-path\");\n\nexport enum Sex {\n    M = \"M\",\n    F = \"F\"\n}\n\nexport class Individual {\n    id: string | null = null;\n    sex: Sex | null = null;\n    givenName?: string;\n    surname?: string;\n    nickname?: string;\n    birthYear?: number;\n    ethnicity?: string;\n    tribe?: string;\n    familySpouses: string[] = [];\n    languages: string[] = [];\n    familyChild?: string;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        sex: Sex;\n        givenName?: string;\n        surname?: string;\n        nickname?: string;\n        birthYear?: number;\n        ethnicity?: string;\n        tribe?: string;\n        familySpouses?: string[];\n        languages?: string[];\n        familyChild?: string;\n        notes?: string;\n    }) {\n        Object.assign(this, params);\n    }\n\n    get name(): string | null {\n        if (this.givenName || this.surname || this.nickname) {\n            let name = \"\";\n            if (this.givenName) name += this.givenName;\n            if (this.nickname) name += ` \"${this.nickname}\"`;\n            if (this.surname) name += ` /${this.surname}/`;\n            return name;\n        }\n        return null;\n    }\n\n    generation(relationships: Record<string, [string | null, string | null]>): string {\n        const g = new Graph({ type: \"directed\" });\n        // Add all nodes\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (!g.hasNode(indID)) {\n                g.addNode(indID);\n            }\n            if (!g.hasNode(fatherId)) {\n                g.addNode(fatherId);\n            }\n            if (!g.hasNode(motherId)) {\n                g.addNode(motherId);\n            }\n        }\n        // Add all edges\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (fatherId) g.addEdge(fatherId, indID);\n            if (motherId) g.addEdge(motherId, indID);\n        }\n        // @ts-ignore\n        const source = g.nodes().reduce((min, current) => {\n            const minValue = parseInt(min.slice(1), 10);\n            const currentValue = parseInt(current.slice(1), 10);\n            return currentValue < minValue ? current : min;\n        });\n        // @ts-ignore\n        return shortestPath.singleSourceLength(g, source)[this.id]  // root MUST have the lowest ID!\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ INDI\\n`;\n\n        if (this.name) gedcom += `1 NAME ${this.name}\\n`;\n        if (this.givenName) gedcom += `2 GIVN ${this.givenName}\\n`;\n        if (this.surname) gedcom += `2 SURN ${this.surname}\\n`;\n        if (this.nickname) gedcom += `2 NICK ${this.nickname}\\n`;\n        gedcom += `1 SEX ${this.sex}\\n`;\n        if (this.birthYear) {\n            gedcom += `1 BIRT\\n`;\n            gedcom += `2 DATE ${this.birthYear}\\n`;\n        }\n        if (this.ethnicity) gedcom += `1 _ETHN ${this.capitalize(this.ethnicity)}\\n`;\n        if (this.tribe) gedcom += `1 _TRIB ${this.capitalize(this.tribe)}\\n`;\n        for (const language of this.languages) {\n            gedcom += `1 LANG ${this.capitalize(language)}\\n`;\n        }\n        for (const famID of this.familySpouses) {\n            gedcom += `1 FAMS @${famID}@\\n`;\n        }\n        if (this.familyChild) gedcom += `1 FAMC @${this.familyChild}@\\n`;\n        if (this.notes) gedcom += `1 NOTE ${this.notes}\\n`;\n\n        return gedcom;\n    }\n\n    private capitalize(str: string): string {\n        return str\n            .toLowerCase()\n            .split(/[-\\s]/)\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join((str.includes('-') ? '-' : ' '));\n    }\n}\n","export class Family {\n    id: string;\n    husband: string;\n    wife: string;\n    marriaged: boolean = false;\n    children: string[] = [];\n    divorced?: boolean = false;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        husband: string;\n        wife: string;\n        marriaged?: boolean;\n        children?: string[];\n        divorced?: boolean;\n        notes?: string;\n    }) {\n        this.id = params.id;\n        this.husband = params.husband;\n        this.wife = params.wife;\n        this.marriaged = params.marriaged ?? false;\n        this.children = params.children ?? [];\n        this.divorced = params.divorced ?? false;\n        this.notes = params.notes;\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ FAM\\n`;\n        gedcom += `1 HUSB @${this.husband}@\\n`;\n        gedcom += `1 WIFE @${this.wife}@\\n`;\n        if (this.marriaged) {\n            gedcom += `1 MARR\\n`;\n        } else {\n            gedcom += `1 MARS\\n`;\n            gedcom += `2 TYPE \"Common Law\"\\n`;\n        }\n        for (const childId of this.children) {\n            gedcom += `1 CHIL @${childId}@\\n`;\n        }\n        if (this.divorced) {\n            gedcom += `1 DIV\\n`;\n        }\n        if (this.notes) {\n            gedcom += `1 NOTE ${this.notes}\\n`;\n        }\n        return gedcom;\n    }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport {Individual, Sex} from \"./individual\";\nimport {Language} from \"./languages-loader\";\nimport {Family} from \"./family\";\n\ntype Relationships = Record<string, [string, string]>;\n\nexport async function csvToGedcom(\n    languagesContents: string,\n    individualsContent: string,\n    relationshipsContent: string,\n    familiesContent: string,\n    individualsLanguagesContent: string | null,\n    egoIndiId: string | null\n) {\n    try {\n        const individuals = parseIndividuals(individualsContent);\n        const relationships = parseRelationships(relationshipsContent);\n        const families = parseFamilies(familiesContent);\n        mapFamiliesChildren(relationships, families, individuals);\n        mapIndividualsSpouses(families, individuals);\n        if (languagesContents && individualsLanguagesContent) {\n            const languages = parseLanguages(languagesContents);\n            const individualsLanguages = parseIndividualsLanguages(individualsLanguagesContent);\n            mapIndividualsLanguages(individuals, individualsLanguages, languages);\n        }\n        return await createGedcomString(individuals, relationships, families, egoIndiId);\n    } catch (e) {\n        throw e;\n    }\n}\n\nfunction parseIndividuals(individualsContent: string): Individual[] {\n    const rows = parseCSV(individualsContent);\n    return rows.map(row => new Individual({\n        id: row[\"id\"],\n        sex: row[\"sex\"] as Sex,\n        givenName: row[\"name\"] || undefined,\n        surname: row[\"surname\"] || undefined,\n        nickname: row[\"nickname\"] || undefined,\n        birthYear: row[\"YOB\"] ? parseInt(row[\"YOB\"], 10) : undefined,\n        ethnicity: row[\"ethnic\"] || undefined,\n        tribe: row[\"clan\"] || undefined,\n        familySpouses: [],\n        languages: [],\n        notes: row[\"notes\"] || undefined\n    }));\n\n}\n\nfunction parseLanguages(languagesContents: string): Language[] {\n    const rows = parseCSV(languagesContents);\n    return rows.map(row => ({\n        id: row[\"id\"],\n        name: row[\"name\"]\n    }));\n}\n\nfunction parseIndividualsLanguages(individualsLanguagesContent: string): Record<string, string[]> {\n    const rows = parseCSV(individualsLanguagesContent);\n    const individualsLanguages: Record<string, string[]> = {};\n    rows.forEach(row => {\n        const personId = row[\"person_id\"];\n        if (!individualsLanguages[personId]) {\n            individualsLanguages[personId] = [];\n        }\n        individualsLanguages[personId].push(row[\"language_id\"]);\n    });\n    return individualsLanguages;\n}\n\nfunction parseRelationships(relationshipsContent: string): Relationships {\n    const rows = parseCSV(relationshipsContent);\n    const relationships: Relationships = {};\n    rows.forEach(row => {\n        if (row[\"father_id\"] && row[\"mother_id\"]) {\n            relationships[row[\"person_id\"]] = [row[\"father_id\"], row[\"mother_id\"]];\n        }\n    });\n    return relationships;\n}\n\nfunction parseFamilies(familiesContent: string): Family[] {\n    const rows = parseCSV(familiesContent);\n    return rows.map(row => new Family({\n        id: row[\"id\"],\n        husband: row[\"husband_id\"],\n        wife: row[\"wife_id\"],\n        children: [],\n        notes: row[\"notes\"] || undefined\n    }));\n}\n\nfunction mapIndividualsLanguages(\n    individuals: Individual[],\n    individualsLanguages: Record<string, string[]>,\n    languages: Language[]\n): void {\n    Object.entries(individualsLanguages).forEach(([personId, langIds]) => {\n        const individual = individuals.find(ind => ind.id === personId);\n        if (!individual)\n            throw new Error(`Individual not found: ${personId}`);\n        langIds.forEach(langId => {\n            const language = languages.find(lang => lang.id === langId);\n            if (!language)\n                throw new Error(`Language not found: ${langId}`);\n            individual.languages.push(language.name);\n        });\n    });\n}\n\nfunction mapFamiliesChildren(\n    relationships: Relationships,\n    families: Family[],\n    individuals: Individual[]\n): void {\n    Object.entries(relationships).forEach(([childId, [fatherId, motherId]]) => {\n        const family = families.find(fam => fam.husband === fatherId && fam.wife === motherId);\n        if (!family)\n            throw new Error(`Family not found: ${childId} (${fatherId}, ${motherId})`);\n        family.children.push(childId);\n        const individual = individuals.find(ind => ind.id === childId);\n        if (!individual)\n            throw new Error(`Individual not found: ${childId}`);\n        individual.familyChild = family.id;\n    });\n}\n\nfunction mapIndividualsSpouses(families: Family[], individuals: Individual[]): void {\n    families.forEach(family => {\n        const husband = individuals.find(ind => ind.id === family.husband);\n        if (!husband)\n            throw new Error(`Husband not found: ${family.husband}`);\n        husband.familySpouses.push(family.id);\n        const wife = individuals.find(ind => ind.id === family.wife);\n        if (!wife)\n            throw new Error(`Wife not found: ${family.wife}`);\n        wife.familySpouses.push(family.id);\n    });\n}\n\nasync function createGedcomString(\n    individuals: Individual[],\n    relationships: Relationships,\n    families: Family[],\n    egoIndiId: string | null\n) {\n    let egoIndi = null\n    let lowestEgoIndi = null\n    let egoGeneration = null\n    let filename = null\n\n    if (egoIndiId) {\n        try {\n            egoIndi = individuals.filter(_i => _i.id === egoIndiId);\n            // @ts-ignore\n            lowestEgoIndi = egoIndi.reduce((prev, current) => (prev.id < current.id ? prev : current));\n            egoGeneration = lowestEgoIndi.generation(relationships)\n            filename = `${lowestEgoIndi.givenName?.toLowerCase()}_${lowestEgoIndi.surname?.toLowerCase()}`\n            if (!lowestEgoIndi || !egoGeneration)\n                throw new Error()\n        } catch(e) {\n            throw new Error(`Ego individual not found: ${egoIndiId}`);\n        }\n    }\n    const header = await createHeader(\n        filename,\n        lowestEgoIndi ? lowestEgoIndi.id : null,\n        egoGeneration ? egoGeneration : null\n    );\n    const indiRecords = individuals.map(indi => indi.asGedcom()).join(\"\\n\");\n    const famRecords = families.map(fam => fam.asGedcom()).join(\"\\n\");\n    const tail = await createTail(filename);\n\n    return [header, indiRecords, famRecords, tail].join(\"\\n\")\n}\n\nasync function createHeader(filename: string | null, egoId: string | null, egoGen: string | null) {\n    const headerFile = await fetch(\"data/header.ged\");\n    const headerTemplate = await headerFile.text();\n    const date = new Date().toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n    let replaced = headerTemplate\n        .replace(/{file}/g, filename ? filename: \"genealogy.ged\")\n        .replace(/{date}/g, date)\n        .replace(/{subm}/g, 'drexa1@hotmail.com')\n    if (egoId && egoGen) {\n        const egoSection = `\\n0 @${egoId}@ EGO\\n1 GEN ${egoGen}\\n`;\n        replaced += egoSection;\n    }\n    return replaced\n}\n\nasync function createTail(filename: string | null) {\n    let repoSection = \"\"\n    const uid = uuidv4().toUpperCase();\n    if (filename) {\n        const repo = `The ${filename\n            .replace(/_/g, ' ')\n            .toLowerCase()\n            .replace(/\\b\\w/g, (char) => char.toUpperCase())} family`;\n        repoSection += `0 @R0@ REPO\\n1 _UID ${uid}\\n1 NAME ${repo}\\n`\n    }\n    const tailFile = await fetch(\"data/tail.ged\");\n    const tailTemplate = await tailFile.text();\n    return repoSection + tailTemplate\n}\n\n// CSV parser utility\nfunction parseCSV(data: string): Record<string, string>[] {\n    const [header, ...rows] = data.split(\"\\n\").filter(line => line.trim() !== \"\");\n    const keys = header.split(\",\");\n    return rows.map(row => {\n        const values = row.split(\",\");\n        return keys.reduce((acc, key, index) => {\n            acc[key.trim()] = values[index].trim();\n            return acc;\n        }, {} as Record<string, string>);\n    });\n}\n","import {MenuItem, MenuType} from \"./menu_item\";\nimport {Button, Icon, SemanticCOLORS, Input, Form, Header, Label, Modal, Message} from \"semantic-ui-react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {SyntheticEvent, useEffect, useState} from \"react\";\nimport * as queryString from \"query-string\";\nimport {useHistory} from \"react-router\";\nimport {loadFile} from \"../datasource/load_data\";\nimport md5 from \"md5\";\nimport {\n    FamiliesTableExample,\n    IndividualsLanguagesTableExample,\n    IndividualsTableExample,\n    RelationshipsTableExample\n} from \"./convert_tables\";\nimport {\n    columnsValidation,\n    validateCSV,\n    validateFilenames\n} from \"../languages/validate_csv\";\nimport {csvToGedcom} from \"../languages/convert_csv\";\nimport {analyticsEvent} from \"../util/analytics\";\n\ninterface Props {\n    menuType: MenuType\n}\n\nexport const initialHeaderColors: Record<string, SemanticCOLORS> = {\n    \"1_individuals.csv\": \"yellow\",\n    \"2_relationships.csv\": \"yellow\",\n    \"3_families.csv\": \"yellow\",\n    \"4_individuals_languages.csv\": \"blue\"\n}\n\n/** Displays and handles the \"Convert CSV's\" menu. */\nexport function ConvertCSVMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const[inputFiles, setInputFiles] = useState<File[]>([])\n    const[headerColors, setHeaderColors] = useState<Record<string, SemanticCOLORS>>(initialHeaderColors)\n    const [egoIndiId, setEgoIndiId] = useState<string | null>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const history = useHistory()\n\n    function closeDialog() {\n        setInputFiles([])\n        setErrors([])\n        setHeaderColors(initialHeaderColors)\n        setDialogOpen(false)\n    }\n\n    function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        setErrors([])\n        const files = (event.target as HTMLInputElement).files;\n        // Validate number of files\n        if (!files) {\n            return\n        }\n        // Validate file names\n        if (!validateFilenames(Array.from(files), Object.keys(columnsValidation))) {\n            return\n        }\n        // Validate schemas\n        const fileReadPromises = Array.from(files).map(file => {\n            return new Promise<File | null>((resolve) => {\n                const reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n                reader.onload = () => {\n                    const fileContent = reader.result as string;\n                    const validFile = validateCSV(file.name, fileContent);\n                    if (validFile) {\n                        resolve(file);\n                    } else {\n                        resolve(null);\n                    }\n                };\n                reader.onerror = () => {\n                    console.error(\"Error reading file:\", file.name);\n                    setErrors([\"Error reading file:\" + file.name])\n                    resolve(null); // Resolve as null to exclude invalid files\n                };\n            });\n        });\n        // Wait for all file validations to complete\n        Promise.all(fileReadPromises).then(results => {\n            const validFiles = results.filter((file): file is File => file !== null);\n            const invalidFiles = Array.from(files)\n                .filter((file: File) => !validFiles.some(validFile => validFile.name === file.name))\n                .map(file => `'${file.name}'`)\n                .join(\", \");\n            if (invalidFiles) {\n                setErrors([\"Files had errors. You can check them in the browser console\"])\n            }\n            setHeaderColors(changeHeaderColors(files, validFiles));\n            setInputFiles(validFiles)\n            // Validate number of files\n            if (!validFiles || validFiles.length < 3 || validFiles.length > 4) {\n                console.error(\"Required files missing...\")\n                return\n            }\n            // All validations passed, highlight Ego input\n            const egoInput = document.querySelector(\"#egoIndi\") as HTMLDivElement;\n            // @ts-ignore\n            const egoTag = egoInput.parentElement.querySelector(\".ui.label.label\") as HTMLDivElement;\n            if (egoTag) {\n                egoTag.style.setProperty(\"background-color\", \"orange\");\n                egoTag.style.setProperty(\"color\", \"white\");\n            }\n            // (event.target as HTMLInputElement).value = ''; // Reset the file input\n        });\n    }\n\n    function changeHeaderColors(files: FileList, validFiles: File[]) {\n        const newHeaderColors = { ...initialHeaderColors };\n        Array.from(files).forEach(file => {\n            if (newHeaderColors.hasOwnProperty(file.name)) {\n                newHeaderColors[file.name] = validFiles.includes(file) ? \"green\" : \"red\";\n            }\n        });\n        return newHeaderColors;\n    }\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    async function convert2gedcom() {\n        try {\n            const individualsFile = inputFiles.find(file => file.name === \"1_individuals.csv\");\n            const relationshipsFile = inputFiles.find(file => file.name === \"2_relationships.csv\");\n            const familiesFile = inputFiles.find(file => file.name === \"3_families.csv\");\n            const individualsLanguagesFile = inputFiles.find(file => file.name === \"4_individuals_languages.csv\");\n\n            const [individualsContent, relationshipsContent, familiesContent] = await Promise.all([\n                readFileContents(individualsFile!),\n                readFileContents(relationshipsFile!),\n                readFileContents(familiesFile!),\n            ])\n            const individualsLanguagesContent = individualsLanguagesFile ? await readFileContents(individualsLanguagesFile) : null;\n\n            const languagesFile = await fetch(\"data/languages.csv\");\n            const languagesContents = await languagesFile.text();\n\n            const gedcomString = await csvToGedcom(\n                languagesContents,\n                individualsContent,\n                relationshipsContent,\n                familiesContent,\n                individualsLanguagesContent,\n                egoIndiId\n            )\n            const gedcomFile = new Blob([gedcomString])\n            const {gedcom, images} = await loadFile(gedcomFile);\n\n            // Hash GEDCOM contents with uploaded image file names.\n            const imageFileNames = Array.from(images.keys()).sort().join('|');\n            const hash = md5(md5(gedcom) + imageFileNames);\n\n            const search = queryString.parse(window.location.search);\n            const historyPush = search.file === hash ? history.replace : history.push;\n\n            historyPush({\n                pathname: '/view',\n                search: queryString.stringify({file: hash}),\n                state: {data: gedcom, images}\n            });\n            // Finally\n            analyticsEvent('topola_convert_csv');\n            closeDialog()\n        } catch (e) {\n            console.error(e);\n            setErrors([e.message])\n        }\n    }\n\n    const readFileContents = (file: File): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                resolve(reader.result as string);\n            }\n            reader.onerror = (error) => reject(error);\n            reader.readAsText(file, \"UTF-8\");\n        });\n    };\n\n    function convertCSVModal() {\n        return (\n            <Modal open={dialogOpen} onClose={closeDialog} centered={true}>\n                <Header>\n                    <Icon name=\"sitemap\"/>\n                    <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV files to GEDCOM\"/>\n                </Header>\n                <Modal.Content>\n                    <Message negative className={errors.length === 0 ? \"hidden\" : undefined}>\n                        <p>{errors}</p>\n                    </Message>\n                    <Form onSubmit={() => convert2gedcom()}>\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"1_individuals.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>1_individuals.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"2_relationships.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>2_relationships.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"3_families.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>3_families.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"4_individuals_languages.csv\") ? \"green\" : undefined}\n                            style={{float: \"right\"}}>\n                            <Icon name=\"file text\"/>4_individuals_languages.csv\n                        </Label>}\n\n                        <IndividualsTableExample headerColor={headerColors[\"1_individuals.csv\"]}/>\n                        <RelationshipsTableExample headerColor={headerColors[\"2_relationships.csv\"]}/>\n                        <FamiliesTableExample headerColor={headerColors[\"3_families.csv\"]}/>\n                        <IndividualsLanguagesTableExample headerColor={headerColors[\"4_individuals_languages.csv\"]}/>\n\n                        <div style={{textAlign: \"center\", marginBottom: 10}}>\n                            <Input id=\"egoIndi\"\n                                   disabled={\n                                       ![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                                           inputFiles.some((file: File) => file.name === fileName)\n                                       )\n                                    }\n                                   fluid\n                                   size=\"small\"\n                                   label=\"Ego ID\"\n                                   labelPosition=\"left\"\n                                   icon=\"user\"\n                                   placeholder=\"I000\"\n                                   onChange={(_e, { value }) => setEgoIndiId(value)}\n                            />\n                        </div>\n\n                        <input type=\"file\"\n                               accept=\".csv\"\n                               id=\"fileInput\"\n                               multiple\n                               onChange={(e) => handleUpload(e)}\n                        />\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => {\n                        closeDialog()\n                    }}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary\n                        disabled={![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                            inputFiles.some((file: File) => file.name === fileName)\n                        )}\n                        onClick={() => convert2gedcom()}>\n                            <FormattedMessage id=\"load_from_gedcom.generate\" defaultMessage=\"Generate\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"file excel\"/>\n                <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV's\"/>\n            </MenuItem>\n            {convertCSVModal()}\n        </>\n    );\n}","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from '../lib/topola';\n\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n    id: string;\n    indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n    search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n    return input\n        .toLocaleLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n    if (a.score !== b.score) {\n        return b.score - a.score;\n    }\n    return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n    indi: JsonIndi,\n    indiMap: Map<String, JsonIndi>,\n    famMap: Map<string, JsonFam>,\n): string {\n    return (indi.fams || [])\n        .map((famId) => famMap.get(famId))\n        .map((fam) => fam && fam.husb)\n        .map((husbId) => husbId && indiMap.get(husbId))\n        .map((husband) => husband && husband.lastName)\n        .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n    private index: lunr.Index | undefined;\n    private indiMap: Map<string, JsonIndi>;\n    private famMap: Map<string, JsonFam>;\n\n    constructor(data: JsonGedcomData) {\n        this.indiMap = idToIndiMap(data);\n        this.famMap = idToFamMap(data);\n    }\n\n    initialize() {\n        const self = this;\n        this.index = lunr(function () {\n            //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n            self.initMultiLingualLunrWithoutTrimmer(this, [\n                'de',\n                'en',\n                'fr',\n                'it',\n                'ru',\n            ]);\n            this.ref('id');\n            this.field('id');\n            this.field('name', {boost: 10});\n            this.field('normalizedName', {boost: 8});\n            this.field('spouseLastName', {boost: 2});\n            this.field('normalizedSpouseLastName', {boost: 2});\n\n            self.indiMap.forEach((indi) => {\n                const name = [indi.firstName, indi.lastName].join(' ');\n                const spouseLastName = getHusbandLastName(\n                    indi,\n                    self.indiMap,\n                    self.famMap,\n                );\n                this.add({\n                    id: indi.id,\n                    name,\n                    normalizedName: normalize(name),\n                    spouseLastName,\n                    normalizedSpouseLastName: normalize(spouseLastName),\n                });\n            });\n        });\n    }\n\n    private initMultiLingualLunrWithoutTrimmer(\n        lunrInstance: any,\n        languages: string[],\n    ): void {\n        let wordCharacters = '';\n        const pipelineFunctions: PipelineFunction[] = [];\n        const searchPipelineFunctions: PipelineFunction[] = [];\n        languages.forEach((language) => {\n            if (language === 'en') {\n                wordCharacters += '\\\\w';\n                pipelineFunctions.unshift(lunr.stopWordFilter);\n                pipelineFunctions.push(lunr.stemmer);\n                searchPipelineFunctions.push(lunr.stemmer);\n            } else {\n                wordCharacters += lunr[language].wordCharacters;\n                if (lunr[language].stopWordFilter) {\n                    pipelineFunctions.unshift(lunr[language].stopWordFilter);\n                }\n                if (lunr[language].stemmer) {\n                    pipelineFunctions.push(lunr[language].stemmer);\n                    searchPipelineFunctions.push(lunr[language].stemmer);\n                }\n            }\n        });\n        lunrInstance.pipeline.reset();\n        lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n        if (lunrInstance.searchPipeline) {\n            lunrInstance.searchPipeline.reset();\n            lunrInstance.searchPipeline.add.apply(\n                lunrInstance.searchPipeline,\n                searchPipelineFunctions,\n            );\n        }\n    }\n\n    public search(input: string): SearchResult[] {\n        const query = input\n            .split(' ')\n            .filter((s) => !!s)\n            .map((s) => `${s} ${s}*`)\n            .join(' ');\n        const results = this.index!.search(query);\n        return results\n            .sort(compare)\n            .slice(0, MAX_RESULTS)\n            .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n    }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n    const index = new LunrSearchIndex(data);\n    index.initialize();\n    return index;\n}\n","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {useRef, useState} from \"react\";\nimport {ConvertCSVMenu} from \"./convert_menu\";\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n    onDownloadGedcom: () => void;\n    onCenterView: () => void;\n}\n\ninterface Props {\n    showingChart: boolean;\n    data?: JsonGedcomData;\n    standalone: boolean;\n    eventHandlers: EventHandlers;\n}\n\nexport function TopBar(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    function changeView(view: string) {\n        const search = queryString.parse(location.search);\n        if (search.view !== view) {\n            search.view = view;\n            location.search = queryString.stringify(search);\n            history.push(location);\n        }\n    }\n\n    function FileMenus(screenSize: ScreenSize) {\n        const [menuOpen, setMenuOpen] = useState(false);\n        const cooldown = useRef(false);\n\n        // Debug handler\n        const toggleMenu = (state: boolean) => {\n            if (!state) {\n                cooldown.current = true;\n                setMenuOpen(false);\n                setTimeout(() => {\n                    cooldown.current = false;\n                }, 150);\n            } else if (!cooldown.current) {\n                setMenuOpen(true);\n            }\n        };\n\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <Dropdown\n                        onOpen={() => toggleMenu(true)}\n                        onClose={() => toggleMenu(false)}\n                        open={menuOpen}\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\">\n                        <Dropdown.Menu onClick={() => toggleMenu(false)}>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                            <ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        {/*<ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />*/}\n                    </>\n                );\n        }\n    }\n\n    function ViewMenus() {\n        return (\n            <>\n                <Dropdown.Item onClick={() => changeView(\"hourglass\")}>\n                    <Icon name=\"hourglass\" />\n                    <FormattedMessage\n                        id=\"menu.hourglass\"\n                        defaultMessage=\"Hourglass\"\n                    />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => changeView(\"relatives\")}>\n                    <Icon name=\"users\" />\n                    <FormattedMessage\n                        id=\"menu.relatives\"\n                        defaultMessage=\"All relatives\"\n                    />\n                </Dropdown.Item>\n            </>\n        );\n    }\n\n    function ChartMenus(screenSize: ScreenSize) {\n        if (!props.showingChart) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\"/>\n                                </div>\n                            }\n                            className=\"item\">\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Divider/>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                    <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"eye\" />\n                                    <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>{ViewMenus()}</Dropdown.Menu>\n                        </Dropdown>\n\n                        <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                            <Icon name=\"target\" />\n                            <FormattedMessage id=\"menu.view.reset\" defaultMessage=\"Reset view\" />\n                        </Menu.Item>\n\n                        <Menu.Menu position=\"right\">\n                            <SearchBar\n                                data={props.data!}\n                                onSelection={props.eventHandlers.onSelection}\n                                {...props}\n                            />\n                        </Menu.Menu>\n                    </>\n                );\n            case ScreenSize.SMALL:\n                if (!props.showingChart) {\n                    return (\n                        <>\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </>\n                    );\n                } else {\n                    return (\n                        <>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                                <Icon name=\"eye\" />\n                                <FormattedMessage id=\"menu.view.reset\" defaultMessage=\"Reset view\" />\n                            </Menu.Item>\n                        </>\n                    );\n                }\n        }\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {FileMenus(ScreenSize.LARGE)}\n                {ChartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {FileMenus(ScreenSize.SMALL)}\n                        {ChartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu as={Media} greaterThanOrEqual=\"large\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {desktopMenus()}\n            </Menu>\n            <Menu as={Media} at=\"small\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData, JsonIndi} from '../lib/topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n    const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n    if (result.id.length > 8) {\n        return name;\n    }\n    return (\n        <>\n            {name} <i>({result.id})</i>\n        </>\n    );\n}\n\ninterface Props {\n    /** Data used for the search index. */\n    data: JsonGedcomData;\n    onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n    const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n    const [searchString, setSearchString] = useState('');\n    const searchIndex = useRef<SearchIndex>();\n    const intl = useIntl();\n\n    function getDescriptionLine(indi: JsonIndi) {\n        const birthDate = formatDateOrRange(indi.birth, intl);\n        const deathDate = formatDateOrRange(indi.death, intl);\n        if (!deathDate) {\n            return birthDate;\n        }\n        return `${birthDate} – ${deathDate}`;\n    }\n\n    /** Produces an object that is displayed in the Semantic UI Search results. */\n    function displaySearchResult(result: SearchResult): SearchResultProps {\n        return {\n            id: result.id,\n            key: result.id,\n            title: getNameLine(result),\n            description: getDescriptionLine(result.indi),\n        } as SearchResultProps;\n    }\n\n    /** On search input change. */\n    function handleSearch(input: string | undefined) {\n        if (!input) {\n            return;\n        }\n        const results = searchIndex\n            .current!.search(input)\n            .map((result) => displaySearchResult(result));\n        setSearchResults(results);\n    }\n\n    const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n    /** On search result selected. */\n    function handleResultSelect(id: string) {\n        props.onSelection({id, generation: 0});\n        setSearchString('');\n    }\n\n    /** On search string changed. */\n    function onChange(value: string) {\n        debouncedHandleSearch.current(value);\n        setSearchString(value);\n    }\n\n    // Initialize the search index.\n    useEffect(() => {\n        searchIndex.current = buildSearchIndex(props.data);\n    }, [props.data]);\n\n    return (\n        <Search\n            onSearchChange={(_, data) => onChange(data.value!)}\n            onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n            results={searchResults}\n            noResultsMessage={intl.formatMessage({\n                id: 'menu.search.no_results',\n                defaultMessage: 'No results found',\n            })}\n            placeholder={intl.formatMessage({\n                id: 'menu.search.placeholder',\n                defaultMessage: 'Search for people',\n            })}\n            selectFirstResult={true}\n            value={searchString}\n            id=\"search\"\n        />\n    );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n    const lower = fileName.toLowerCase();\n    return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        const filesArray = Array.from(files);\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n        const gedcomFile =\n            filesArray.length === 1\n                ? filesArray[0]\n                : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n                filesArray[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Convert uploaded images to object URLs.\n        filesArray\n            .filter((file) => file.name !== gedcomFile.name && isImageFileName(file.name))\n            .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images}\n        });\n    }\n\n    const content = (\n        <>\n            <Icon name=\"folder open\"/>\n            <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\"/>\n        </>\n    );\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <label htmlFor=\"fileInput\">\n                    <Menu.Item as=\"a\">{content}</Menu.Item>\n                </label>\n            ) : (\n                <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                    {content}\n                </Dropdown.Item>\n            )}\n            <input className=\"hidden\"\n                type=\"file\"\n                accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n                id=\"fileInput\"\n                multiple\n                onChange={handleUpload}\n            />\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [url, setUrl] = useState('');\n    const inputRef = useRef<Input>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (dialogOpen) {\n            setUrl('');\n            inputRef.current!.focus();\n        }\n    }, [dialogOpen]);\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    function handleLoad() {\n        setDialogOpen(false);\n        if (url) {\n            history.push({\n                pathname: '/view',\n                search: queryString.stringify({url})\n            });\n        }\n    }\n\n    function loadFromUrlModal() {\n        return (\n            <Modal open={dialogOpen} onClose={() => setDialogOpen(false)} centered={false}>\n                <Header>\n                    <Icon name=\"cloud download\"/>\n                    <FormattedMessage id=\"load_from_url.title\" defaultMessage=\"Load from URL\"/>\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={handleLoad}>\n                        <Input\n                            placeholder=\"https://\"\n                            fluid\n                            value={url}\n                            onChange={(_, data) => setUrl(data.value)}\n                            ref={inputRef}\n                        />\n                        <p>\n                            <FormattedMessage\n                                id=\"load_from_url.comment\"\n                                defaultMessage={\n                                    'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                                }\n                                values={{\n                                    link: (\n                                        <a href=\"https://corsproxy.io/\">corsproxy.io</a>\n                                    ),\n                                }}\n                            />\n                        </p>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary onClick={handleLoad}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"cloud download\"/>\n                <FormattedMessage id=\"menu.load_from_url\" defaultMessage=\"Load from URL\"/>\n            </MenuItem>\n            {loadFromUrlModal()}\n        </>\n    );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\nimport {Language} from \"./languages/languages-loader\";\nimport {useState} from \"react\";\n\nexport enum ChartColors {\n    NO_COLOR,\n    COLOR_BY_SEX,\n    COLOR_BY_GENERATION,\n    COLOR_BY_ETHNICITY,\n    COLOR_BY_NR_LANGUAGES = 4,\n    COLOR_BY_LANGUAGE = 5,\n}\n\nexport enum LanguagesArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum EthnicityArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum IdsArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum SexArg {\n    HIDE,\n    SHOW,\n}\n\nexport interface Config {\n    color: ChartColors;\n    languages: LanguagesArg;\n    ethnicity: EthnicityArg;\n    id: IdsArg;\n    sex: SexArg;\n    renderLanguagesOption: boolean\n    renderEthnicityOption: boolean\n    languageOptions: Language[],\n    selectedLanguage: string | null\n}\n\nexport const DEFAULT_CONFIG: Config = {\n    color: ChartColors.COLOR_BY_GENERATION,\n    languages: LanguagesArg.HIDE,\n    ethnicity: EthnicityArg.HIDE,\n    id: IdsArg.SHOW,\n    sex: SexArg.SHOW,\n    renderLanguagesOption: false,\n    renderEthnicityOption: false,\n    languageOptions: [],\n    selectedLanguage: null,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n    ['n', ChartColors.NO_COLOR],\n    ['g', ChartColors.COLOR_BY_GENERATION],\n    ['s', ChartColors.COLOR_BY_SEX],\n    ['e', ChartColors.COLOR_BY_ETHNICITY],\n    ['nl', ChartColors.COLOR_BY_NR_LANGUAGES],\n    ['l', ChartColors.COLOR_BY_LANGUAGE],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst LANGUAGES_ARG = new Map<string, LanguagesArg>([\n    ['h', LanguagesArg.HIDE],\n    ['s', LanguagesArg.SHOW],\n]);\nconst LANGUAGES_ARG_INVERSE = new Map<LanguagesArg, string>();\nLANGUAGES_ARG.forEach((v, k) => LANGUAGES_ARG_INVERSE.set(v, k));\n\nconst ETHNICITY_ARG = new Map<string, EthnicityArg>([\n    ['h', EthnicityArg.HIDE],\n    ['s', EthnicityArg.SHOW],\n]);\nconst ETHNICITY_ARG_INVERSE = new Map<EthnicityArg, string>();\nETHNICITY_ARG.forEach((v, k) => ETHNICITY_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, IdsArg>([\n    ['h', IdsArg.HIDE],\n    ['s', IdsArg.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<IdsArg, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, SexArg>([\n    ['h', SexArg.HIDE],\n    ['s', SexArg.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<SexArg, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n    const getParam = (name: string) => {\n        return typeof args[name] === 'string' || typeof args[name] === 'number' ? args[name] : undefined;\n    };\n    return {\n        color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n        languages: LANGUAGES_ARG.get(getParam('l') ?? '') ?? DEFAULT_CONFIG.languages,\n        selectedLanguage: getParam('n') ?? DEFAULT_CONFIG.selectedLanguage,\n        ethnicity: ETHNICITY_ARG.get(getParam('e') ?? '') ?? DEFAULT_CONFIG.ethnicity,\n        id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n        sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n        renderEthnicityOption: DEFAULT_CONFIG.renderEthnicityOption,\n        renderLanguagesOption: DEFAULT_CONFIG.renderLanguagesOption,\n        languageOptions: DEFAULT_CONFIG.languageOptions\n    };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n    return {\n        c: COLOR_ARG_INVERSE.get(config.color),\n        l: LANGUAGES_ARG_INVERSE.get(config.languages),\n        e: ETHNICITY_ARG_INVERSE.get(config.ethnicity),\n        i: ID_ARG_INVERSE.get(config.id),\n        s: SEX_ARG_INVERSE.get(config.sex),\n        n: config.selectedLanguage\n    };\n}\n\nexport function ConfigPanel(props: {config: Config; onChange: (config: Config) => void}) {\n    const [languagesEnabled, setLanguagesEnabled] = useState(props.config.languages === LanguagesArg.SHOW);\n    const [ethnicityEnabled, setEthnicityEnabled] = useState(props.config.ethnicity === EthnicityArg.SHOW);\n    const [idsEnabled, setIdsEnabled] = useState(props.config.id === IdsArg.SHOW);\n    const [sexEnabled, setSexEnabled] = useState(props.config.sex === SexArg.SHOW);\n\n    const toggleLanguages = (newState: LanguagesArg) => {\n        setLanguagesEnabled(!languagesEnabled);\n        props.onChange({...props.config, languages: newState});\n    };\n    const toggleEthnicity = (newState: EthnicityArg) => {\n        setEthnicityEnabled(!ethnicityEnabled);\n        props.onChange({...props.config, ethnicity: newState});\n    };\n    const toggleIds = (newState: IdsArg) => {\n        setIdsEnabled(!idsEnabled);\n        props.onChange({...props.config, id: newState});\n    };\n    const toggleSex = (newState: SexArg) => {\n        setSexEnabled(!sexEnabled);\n        props.onChange({...props.config, sex: newState});\n    };\n\n    const languageOptions = [];\n    for (let i = 0; i < props.config.languageOptions.length; i++) {\n        const language = props.config.languageOptions[i];\n        languageOptions.push(\n            <Form.Field key={i} className={!props.config.renderLanguagesOption ? 'hidden' : 'no-margin suboption'}>\n                <Checkbox\n                    radio\n                    label={language.name + \" (\" + language.abbreviation + \")\"}\n                    name=\"checkboxRadioGroup\"\n                    value={i}\n                    checked={props.config.selectedLanguage === language.id}\n                    onClick={\n                        () => {\n                            props.onChange({\n                                ...props.config,\n                                selectedLanguage: language.id,\n                                color: ChartColors.COLOR_BY_LANGUAGE,\n                                languages: LanguagesArg.SHOW,\n                            });\n                            setLanguagesEnabled(true);\n                        }\n                    }\n                />\n            </Form.Field>\n        );\n    }\n    return (\n        <Form className=\"details no-border-bottom\">\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Header sub style={{ \"margin-bottom\": \"14px\" }}>\n                            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\"/>\n                        </Header>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"none\"\n                                checked={props.config.color === ChartColors.NO_COLOR}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.NO_COLOR,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"generation\"\n                                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_GENERATION,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by gender\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"gender\"\n                                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_SEX,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_ETHNICITY\" defaultMessage=\"by ethnicity\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"ethnicity\"\n                                checked={props.config.color === ChartColors.COLOR_BY_ETHNICITY}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_ETHNICITY,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.SHOW,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(true);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_LANGUAGES\" defaultMessage=\"by no. languages\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"languages\"\n                                checked={props.config.color === ChartColors.COLOR_BY_NR_LANGUAGES}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_NR_LANGUAGES,\n                                            languages: LanguagesArg.SHOW,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(true);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        {languageOptions}\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"languages\"\n                                  checked={languagesEnabled}\n                                  onClick={() => toggleLanguages(languagesEnabled ? LanguagesArg.HIDE : LanguagesArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {languagesEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.languages\" defaultMessage=\"languages\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ethnicity\"\n                                  checked={ethnicityEnabled}\n                                  onClick={() => toggleEthnicity(ethnicityEnabled ? EthnicityArg.HIDE : EthnicityArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {ethnicityEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ethnicity\" defaultMessage=\"ethnicity\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ids\"\n                                  checked={idsEnabled}\n                                  onClick={() => toggleIds(idsEnabled ? IdsArg.HIDE : IdsArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {idsEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"sex\"\n                                  checked={sexEnabled}\n                                  onClick={() => toggleSex(sexEnabled ? SexArg.HIDE : SexArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {sexEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.sex\" defaultMessage=\"sex\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n            <div style={{textAlign: \"center\"}}>\n                <Form.Button primary onClick={\n                    () => {\n                        props.onChange(DEFAULT_CONFIG);\n                        setEthnicityEnabled(false);\n                        setLanguagesEnabled(false);\n                        setIdsEnabled(true);\n                        setSexEnabled(true);\n                    }\n                }>\n                    <FormattedMessage id=\"config.reset\" defaultMessage=\"Reset\"/>\n                </Form.Button>\n            </div>\n        </Form>\n\n);\n}\n","import {ChartColors, LanguagesArg, EthnicityArg, IdsArg, SexArg} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {D3ZoomEvent, zoom, ZoomBehavior, ZoomedElementBaseType, zoomTransform,} from 'd3-zoom';\nimport {\n    ChartColors as TopolaChartColors,\n    ChartHandle,\n    createChart,\n    DetailedRenderer,\n    HourglassChart,\n    RelativesChart,\n    IndiInfo,\n    JsonGedcomData,\n} from './lib/topola';\nimport {GedcomData} from \"./util/gedcom_util\";\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n * @param event\n */\nfunction zoomed(\n    size: [number, number],\n    event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = event.transform.k;\n    const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    select(\"#chartSvg\")\n        .attr(\"width\", size[0] * scale)\n        .attr(\"height\", size[1] * scale)\n        .attr(\"transform\", `translate(${offsetX}, ${offsetY})`);\n    select(\"#chart\").attr(\"transform\", `scale(${scale})`);\n    parent.scrollLeft = -event.transform.x;\n    parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const x = parent.scrollLeft + parent.clientWidth / 2;\n    const y = parent.scrollTop + parent.clientHeight / 2;\n    const scale = zoomTransform(parent).k;\n    select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise<string>((resolve) => {\n        reader.onload = (e) => resolve((e.target as FileReader).result as string);\n    });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n    const href = image.href.baseVal;\n    if (!href) {\n        return;\n    }\n    try {\n        const response = await fetch(href);\n        const blob = await response.blob();\n        image.href.baseVal = await loadAsDataUrl(blob);\n    } catch (e) {\n        console.warn(\"Failed to load image:\", e);\n    }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n    const images = Array.from(svg.getElementsByTagName('image'));\n    await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    return new Promise<HTMLImageElement>((resolve) => {\n        image.addEventListener(\"load\", () => resolve(image));\n    });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n    const canvas = document.createElement(\"canvas\");\n    // Scale image for better quality.\n    canvas.width = image.width * 2;\n    canvas.height = image.height * 2;\n    const ctx = canvas.getContext(\"2d\")!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob) {\n                resolve(blob);\n            } else {\n                reject();\n            }\n        }, type);\n    });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n    const svg = document.getElementById(\"chartSvg\")!.cloneNode(true) as Element;\n    svg.removeAttribute(\"transform\");\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\"width\", String(Number(svg.getAttribute(\"width\")) / scale));\n    svg.setAttribute(\n        \"height\",\n        String(Number(svg.getAttribute(\"height\")) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute(\"transform\");\n    return svg;\n}\n\nasync function getSvgContentsWithInlinedImages() {\n    const svg = getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n}\n\nexport async function downloadSvg(filename: string | undefined) {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    saveAs(blob, filename ? filename + \".svg\" : \"genealogy.svg\");\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng(filename: string | undefined) {\n    const canvas = await drawOnCanvas();\n    const blob = await canvasToBlob(canvas, \"image/png\");\n    saveAs(blob, filename ? filename + \".png\" : \"genealogy.png\");\n}\n\nexport async function downloadPdf(filename: string | undefined) {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import(\"jspdf\");\n    const canvas = await drawOnCanvas();\n    const doc = new jspdf({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: \"pt\",\n        format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, \"PNG\", 0, 0, canvas.width, canvas.height, \"NONE\");\n    doc.save(filename ? filename + \".pdf\" : \"genealogy.pdf\");\n}\n\nexport async function downloadGedcom(gedcom: string, filename: string | undefined) {\n    const blob = new Blob([gedcom], {type: \"text/plain\"});\n    saveAs(blob, filename ? filename + \".ged\" : \"genealogy.ged\");\n}\n\ninterface GedcomTreeItem {\n    tag: string;\n    data: string;\n}\nexport function getFilename(gedcom: GedcomData | undefined) {\n    const filename = Object.entries(gedcom?.head || {})\n        .filter((k) => k[0] === \"tree\")\n        .map(_ => _[1])\n        .map(obj => obj.find((sub: GedcomTreeItem) => sub.tag === 'FILE'))\n        .map(file => file?.data)[0];\n    return !filename ? null : filename.substring(0, filename.lastIndexOf('.')) || filename; // Remove file extension (if any)\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n    Hourglass,\n    Relatives\n}\n\nfunction getChartType(chartType: ChartType) {\n    switch (chartType) {\n        case ChartType.Hourglass:\n            return HourglassChart;\n        case ChartType.Relatives:\n            return RelativesChart;\n        default:\n            return HourglassChart;\n    }\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n    [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n    [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n    [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n    [ChartColors.COLOR_BY_ETHNICITY, TopolaChartColors.COLOR_BY_ETHNICITY],\n    [ChartColors.COLOR_BY_NR_LANGUAGES, TopolaChartColors.COLOR_BY_NR_LANGUAGES],\n    [ChartColors.COLOR_BY_LANGUAGE, TopolaChartColors.COLOR_BY_LANGUAGE]\n]);\n\nexport interface ChartProps {\n    data: JsonGedcomData;\n    selection: IndiInfo;\n    chartType: ChartType;\n    onSelection: (indiInfo: IndiInfo) => void;\n    freezeAnimation?: boolean;\n    colors?: ChartColors;\n    selectedLanguage?: string | null;\n    hideLanguages?: LanguagesArg;\n    hideEthnicity?: EthnicityArg;\n    hideIds?: IdsArg;\n    hideSex?: SexArg;\n}\n\nclass ChartWrapper {\n    private chart?: ChartHandle;\n    /** Animation is in progress. */\n    private animating = false;\n    /** Rendering is required after the current animation finishes. */\n    private rerenderRequired = false;\n    /** The d3 zoom behavior object. */\n    private zoomBehavior?: ZoomBehavior<Element, any>;\n    /** Props that will be used for re-rendering. */\n    private rerenderProps?: ChartProps;\n    private rerenderResetPosition?: boolean;\n\n    zoom(factor: number) {\n        const parent = select(\"#svgContainer\") as Selection<Element, any, any, any>;\n        this.zoomBehavior!.scaleBy(parent, factor);\n    }\n\n    /**\n     * Renders the chart or performs a transition animation to a new state.\n     * If indiInfo is not given, it means that it is the initial render and no animation is performed.\n     */\n    renderChart(\n        props: ChartProps,\n        intl: IntlShape,\n        args: { initialRender: boolean; resetPosition: boolean } = {\n            initialRender: false,\n            resetPosition: false,\n        },\n    ) {\n        // Wait for animation to finish if animation is in progress.\n        if (!args.initialRender && this.animating) {\n            this.rerenderRequired = true;\n            this.rerenderProps = props;\n            this.rerenderResetPosition = args.resetPosition;\n            return;\n        }\n\n        // Freeze changing selection after initial rendering.\n        if (!args.initialRender && props.freezeAnimation) {\n            return;\n        }\n\n        if (args.initialRender) {\n            (select(\"#chart\").node() as HTMLElement).innerHTML = '';\n            this.chart = createChart({\n                json: props.data,\n                chartType: getChartType(props.chartType),\n                renderer: DetailedRenderer,\n                svgSelector: \"#chart\",\n                indiCallback: (info) => props.onSelection(info),\n                colors: chartColors.get(props.colors!),\n                selectedLanguage: props.selectedLanguage,\n                animate: true,\n                updateSvgSize: false,\n                locale: intl.locale,\n            });\n        } else {\n            this.chart!.setData(props.data);\n        }\n\n        const chartInfo = this.chart!.render({\n            startIndi: props.selection.id,\n            baseGeneration: props.selection.generation,\n        });\n        const svg = select(\"#chartSvg\");\n        const parent = select(\"#svgContainer\").node() as Element;\n        const scale = zoomTransform(parent).k;\n        const zoomOutFactor = min([\n            1,\n            scale,\n            parent.clientWidth / chartInfo.size[0],\n            parent.clientHeight / chartInfo.size[1],\n        ])!;\n        const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n        this.zoomBehavior = zoom()\n            .scaleExtent(extent)\n            .translateExtent([[0, 0], chartInfo.size])\n            .on(\"zoom\", (event) => zoomed(chartInfo.size, event));\n        select(parent).on(\"scroll\", scrolled).call(this.zoomBehavior);\n\n        const scrollTopTween = (scrollTop: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollTop, scrollTop);\n                return (t: number) => {\n                    parent.scrollTop = i(t);\n                };\n            };\n        };\n\n        const scrollLeftTween = (scrollLeft: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n                return (t: number) => {\n                    parent.scrollLeft = i(t);\n                };\n            };\n        };\n\n        const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n        const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n        const offsetX = max([\n            0,\n            (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n        ]);\n        const offsetY = max([\n            0,\n            (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n        ]);\n        const svgTransition = svg.transition().delay(200).duration(500);\n        const transition = args.initialRender ? svg : svgTransition;\n        transition\n            .attr(\"transform\", `translate(${offsetX}, ${offsetY})`)\n            .attr(\"width\", chartInfo.size[0] * scale)\n            .attr(\"height\", chartInfo.size[1] * scale);\n        if (args.resetPosition) {\n            if (args.initialRender) {\n                parent.scrollLeft = -dx;\n                parent.scrollTop = -dy;\n            } else {\n                svgTransition\n                    .tween(\"scrollLeft\", scrollLeftTween(-dx))\n                    .tween(\"scrollTop\", scrollTopTween(-dy));\n            }\n        }\n\n        // After the animation is finished, rerender the chart if required.\n        this.animating = true;\n        chartInfo.animationPromise.then(() => {\n            this.animating = false;\n            if (this.rerenderRequired) {\n                this.rerenderRequired = false;\n                // Use `this.rerenderProps` instead of the props in scope because\n                // the props may have been updated in the meantime.\n                this.renderChart(this.rerenderProps!, intl, {\n                    initialRender: false,\n                    resetPosition: !!this.rerenderResetPosition,\n                });\n            }\n        });\n    }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n    const chartWrapper = useRef(new ChartWrapper());\n    const prevProps = usePrevious(props);\n    const intl = useIntl();\n\n    useEffect(() => {\n        if (prevProps) {\n            const initialRender =\n                props.chartType !== prevProps?.chartType ||\n                props.colors !== prevProps?.colors ||\n                props.selectedLanguage !== prevProps?.selectedLanguage ||\n                props.hideLanguages !== prevProps?.hideLanguages ||\n                props.hideEthnicity !== prevProps?.hideEthnicity ||\n                props.hideIds !== prevProps?.hideIds ||\n                props.hideSex !== prevProps?.hideSex;\n            const resetPosition =\n                props.chartType !== prevProps?.chartType ||\n                props.data !== prevProps.data ||\n                props.selection !== prevProps.selection;\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender,\n                resetPosition,\n            });\n        } else {\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender: true,\n                resetPosition: true,\n            });\n        }\n    });\n\n    return (\n        <div id=\"svgContainer\">\n            <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n                <button className=\"zoom-in\" onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}>+</button>\n                <button className=\"zoom-out\" onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}>−</button>\n            </Media>\n            <svg id=\"chartSvg\">\n                <g id=\"chart\"/>\n            </svg>\n        </div>\n    );\n}\n","export interface Language {\n    id: string;\n    name: string;\n    iso?: string | null;\n    abbreviation?: string;\n}\n\nexport default class CSVLoader {\n    // Singleton\n    private static csvData: Language[] | null = null;\n\n    static async loadLanguages(filePath: string) {\n        if (CSVLoader.csvData) {\n            return CSVLoader.csvData;\n        }\n        try {\n            const data = await fetch(filePath);\n            const text = await data.text();\n\n            const rows = text.trim().split('\\n');\n            const headers = rows[0].split(',');\n\n            const idIndex = headers.indexOf('id');\n            const nameIndex = headers.indexOf('name');\n            const isoIndex = headers.indexOf('ISO 639-3');\n\n            CSVLoader.csvData = rows.slice(1).map(row => {\n                const values = row.split(',');\n                return {\n                    id: values[idIndex],\n                    name: CSVLoader.title_fn(values[nameIndex]),\n                    iso: values[isoIndex],\n                    abbreviation: values[isoIndex].toUpperCase() || (values[nameIndex].slice(0, 3).toUpperCase() + '*')\n                } as Language;\n            });\n            return CSVLoader.csvData;\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n\n    private static title_fn = (str: string) =>\n        str.split(/[-_\\s]/) // Split by hyphen, underscore, or space\n           .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n           .join('-');\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from './lib/topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {GedcomData, idToIndiMap, jsonToGedcom, TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n    Chart,\n    ChartType,\n    downloadGedcom,\n    downloadPdf,\n    downloadPng,\n    downloadSvg,\n    getFilename\n} from './chart';\nimport {\n    GedcomUrlDataSource,\n    getSelection,\n    UploadedDataSource,\n    UploadSourceSpec,\n    UrlSourceSpec\n} from './datasource/load_data';\nimport CSVLoader, {Language} from \"./languages/languages-loader\";\nimport {\n    argsToConfig,\n    Config,\n    ConfigPanel,\n    configToArgs,\n    DEFAULT_CONFIG,\n    EthnicityArg,\n    IdsArg,\n    LanguagesArg,\n    SexArg\n} from './config';\n\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE\n}\n\ntype DataSourceSpec = UrlSourceSpec | UploadSourceSpec | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\nfunction startIndi(data: TopolaData | undefined) {\n    const egoGen = getEgoGen(data)\n    return {\n        id: getLowestId(data) || 'I0',  // lowest ID on the chart, focus at the root, not at the EGO\n        generation: egoGen !== undefined ? -parseInt(egoGen, 10) : 0\n    };\n}\n\nfunction getEgoGen(data: TopolaData | undefined) {\n    return getEgoRecord(data?.gedcom)\n        .map(([_, value]) => value.tree.find(sub => sub.tag === \"GEN\")?.data)\n        .find(data => data !== undefined);\n}\n\nexport function getEgoRecord(gedcom: GedcomData | undefined) {\n    return Object.entries(gedcom?.other || {}).filter(([_, value]) => value.tag === \"EGO\")\n}\n\nfunction getLowestId(data: TopolaData | undefined) {\n    return data?.chartData?.indis?.reduce((lowest, current) =>\n            current.id.startsWith('I') && parseInt(current.id.slice(1), 10) < parseInt(lowest.id.slice(1), 10)\n            ? current\n            : lowest,\n        data?.chartData?.indis?.[0]\n    )?.id;\n}\n\nfunction loadLanguageOptions(data: TopolaData | undefined, allLanguages: Language[]) {\n    const gedcomLanguages = Array.from(getGedcomLanguages(data));\n    return allLanguages.filter((l: Language) => gedcomLanguages.includes(l.name)).sort();\n}\n\nfunction getGedcomLanguages(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"LANG\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\nfunction getEthnicities(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"_ETHN\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded data.\n */\nfunction getArguments(location: H.Location<any>, allLanguages: Language[]): Arguments {\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n    const view = getParam(\"view\");\n    const chartTypes = new Map<string | undefined, ChartType>([\n        [\"relatives\", ChartType.Relatives]\n    ]);\n    const hash = getParam(\"file\");\n    const url = getParam(\"url\");\n    const embedded = getParam(\"embedded\") === \"true\"; // False by default.\n    let sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n            allLanguages: allLanguages\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            allLanguages: allLanguages,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            allLanguages: allLanguages,\n            handleCors: getParam(\"handleCors\") !== \"false\", // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam(\"indi\");\n    const parsedGen = Number(getParam(\"gen\"));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined\n\n    return {\n        sourceSpec,\n        selection,\n        chartType: chartTypes.get(view) || ChartType.Hourglass,\n        showSidePanel: getParam(\"sidePanel\") !== \"false\", // True by default.\n        standalone: getParam(\"standalone\") !== \"false\" && !embedded && !staticUrl,\n        freezeAnimation: getParam(\"freeze\") === \"true\", // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    const [gedcomString, setGedcomString] = useState<String>()\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n    /** All languages. */\n    const [allLanguages, setAllLanguages] = useState<Language[]>([]);\n\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (!selection || selection.id !== newSelection.id || selection!.generation !== newSelection.generation) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined, allLanguages: Language[]) {\n        if (data === undefined) {\n            return;\n        }\n        // Find if there are languages\n        config.languageOptions = loadLanguageOptions(data, allLanguages)\n        config.renderLanguagesOption = config.languageOptions.length > 0\n        // Find if there are ethnicities/tribes\n        config.renderEthnicityOption = Array.from(getEthnicities(data)).length > 0\n        idToIndiMap(data.chartData).forEach((indi) => {\n            indi.hideLanguages = config.languages === LanguagesArg.HIDE;\n            indi.hideEthnicity = config.ethnicity === EthnicityArg.HIDE;\n            indi.hideId = config.id === IdsArg.HIDE;\n            indi.hideSex = config.sex === SexArg.HIDE;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo, allLanguages?: Language[]) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                analyticsEvent('topola_gedcom_upload');\n                return uploadedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.GEDCOM_URL:\n                analyticsEvent('topola_url_load');\n                return gedcomUrlDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n        }\n    }\n\n    // Function to load languages from CSV\n    const loadAllLanguages = async () => {\n        const allLanguages = await CSVLoader.loadLanguages(\"data/languages.csv\") || [];\n        setAllLanguages(allLanguages);\n    };\n\n    // useEffect to load languages when pathname is '/view'\n    useEffect(() => {\n        loadAllLanguages();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        analyticsEvent(\"topola_landing\");\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add(\"bgLogo\");\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove(\"bgLogo\");\n        }\n\n        (async () => {\n            if (location.pathname !== \"/view\") {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location, allLanguages);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n            if (\n                state === AppState.INITIAL || isNewData(args.sourceSpec, args.selection)\n            ) {\n                setState(AppState.LOADING);\n                setSourceSpec(args.sourceSpec);\n                setStandalone(args.standalone);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    setData(data);\n                    setGedcomString(jsonToGedcom(data.gedcom))\n                    setSelection(args.selection !== undefined ? args.selection : startIndi(data));\n                    toggleDetails(args.config, data, allLanguages);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE\n            ) {\n                setChartType(args.chartType);\n                setState(AppState.SHOWING_CHART);\n                updateDisplay(args.selection !== undefined ? args.selection : startIndi(data));\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart. Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        try {\n            analyticsEvent(\"topola_download_pdf\");\n            const filename = getFilename(data?.gedcom)\n            await downloadPdf(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: \"error.failed_pdf\",\n                    defaultMessage: \"Failed to generate PDF file. Please try with a smaller diagram or download an SVG file.\",\n                })\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        try {\n            analyticsEvent(\"topola_download_png\");\n            const filename = getFilename(data?.gedcom)\n            await downloadPng(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: \"error.failed_png\",\n                    defaultMessage: \"Failed to generate PNG file. Please try with a smaller diagram or download an SVG file.\"\n                })\n            );\n        }\n    }\n\n    async function onDownloadSvg() {\n        analyticsEvent(\"topola_download_svg\");\n        const filename = getFilename(data?.gedcom)\n        await downloadSvg(filename);\n    }\n\n    async function onDownloadGedcom() {\n        analyticsEvent(\"topola_download_gedcom\");\n        const filename = getFilename(data?.gedcom)\n        await downloadGedcom(gedcomString as string, filename);\n    }\n\n    function onCenterView() {\n        onSelection(startIndi(data))\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({id: \"tab.info\", defaultMessage: \"Info\"}),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: \"tab.settings\",\n                            defaultMessage: \"Settings\",\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data, allLanguages);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            selectedLanguage={config.selectedLanguage}\n                            hideLanguages={config.languages}\n                            hideEthnicity={config.ethnicity}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        showingChart={\n                            history.location.pathname === \"/view\" &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                            onDownloadGedcom,\n                            onCenterView,\n                        }}\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={\"/view\"}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_es from './translations/es.json';\nimport messages_pl from './translations/pl.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n    de: messages_de,\n    fr: messages_fr,\n    it: messages_it,\n    es: messages_es,\n    pl: messages_pl\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n    ReactDOM.render(\n        <p>Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.</p>,\n        document.querySelector('#root'),\n    );\n} else {\n    ReactDOM.render(\n        <IntlProvider locale={language} messages={messages[language]}>\n            <MediaContextProvider>\n                <style>{mediaStyles}</style>\n                <Router>\n                    <Route component={App}/>\n                </Router>\n            </MediaContextProvider>\n        </IntlProvider>,\n        document.querySelector('#root'),\n    );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from '../lib/topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n    ['abt', 'about'],\n    ['cal', 'calculated'],\n    ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n    const hasDay = date.day !== undefined;\n    const hasMonth = date.month !== undefined;\n    const hasYear = date.year !== undefined;\n    if (!hasDay && !hasMonth && !hasYear) {\n        return date.text || '';\n    }\n    const dateObject = toDateObject(date);\n    const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n    const formatOptions: Intl.DateTimeFormatOptions = {\n        day: hasDay ? 'numeric' : undefined,\n        month: hasMonth ? 'long' : undefined,\n        year: hasYear ? 'numeric' : undefined,\n    };\n    const translatedDate = new Intl.DateTimeFormat(\n        intl.locale,\n        formatOptions,\n    ).format(dateObject);\n\n    return [translatedQualifier, translatedDate]\n        .filter((dateElement) => dateElement)\n        .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to;\n    const translatedFromDate = fromDate && formatDate(fromDate, intl);\n    const translatedToDate = toDate && formatDate(toDate, intl);\n    if (translatedFromDate && translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.between',\n                defaultMessage: 'between {from} and {to}',\n            },\n            {from: translatedFromDate, to: translatedToDate},\n        );\n    }\n    if (translatedFromDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.after',\n                defaultMessage: 'after {from}',\n            },\n            {from: translatedFromDate},\n        );\n    }\n    if (translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.before',\n                defaultMessage: 'before {to}',\n            },\n            {to: translatedToDate},\n        );\n    }\n    return '';\n}\n\nexport function formatDateQualifier(\n    qualifier: string | undefined,\n    intl: IntlShape,\n): string {\n    const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n    return (\n        (lowerCaseQualifier &&\n            intl.formatMessage({\n                id: `date.${lowerCaseQualifier}`,\n                defaultMessage:\n                    DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n            })) ||\n        ''\n    );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n    intl: IntlShape,\n): string {\n    if (!dateOrRange) {\n        return '';\n    }\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, intl);\n    }\n    if (dateOrRange.dateRange) {\n        return formatDateRage(dateOrRange.dateRange, intl);\n    }\n    return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n    return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n    date1: TopolaDate | undefined,\n    date2: TopolaDate | undefined,\n): number {\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n        return 0;\n    }\n    if (date1.year !== date2.year) {\n        return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n        return 0;\n    }\n    if (date1.month !== date2.month) {\n        return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n        return date1.month - date2.month;\n    }\n    return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n    firstDateOrRange: DateOrRange | undefined,\n    secondDateOrRange: DateOrRange | undefined,\n): number {\n    const date1 =\n        firstDateOrRange &&\n        (firstDateOrRange.date ||\n            (firstDateOrRange.dateRange &&\n                (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n    const date2 =\n        secondDateOrRange &&\n        (secondDateOrRange.date ||\n            (secondDateOrRange.dateRange &&\n                (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n    return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n    range1: DateRange,\n    range2: DateRange,\n): boolean {\n    return (\n        compareTopolaDates(range1.from, range2.to) <= 0 &&\n        compareTopolaDates(range1.to, range2.from) >= 0\n    );\n}\n\nexport function isValidDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n): boolean {\n    // invalid when range is closed and start is before end\n    if (isDateRangeClosed(dateOrRange?.dateRange)) {\n        return (\n            compareTopolaDates(\n                dateOrRange?.dateRange?.from,\n                dateOrRange?.dateRange?.to,\n            ) <= 0\n        );\n    }\n    //valid when there is exact date or date range has start or end defined\n    return !!(\n        dateOrRange?.date ||\n        dateOrRange?.dateRange?.from ||\n        dateOrRange?.dateRange?.to\n    );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n    return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n    return new Date(\n        date.year !== undefined ? date.year! : 0,\n        date.month !== undefined ? date.month! - 1 : 0,\n        date.day !== undefined ? date.day! : 1,\n    );\n}\n","import {convertGedcom, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\nimport {Language} from \"../languages/languages-loader\";\n\nexport interface UploadSourceSpec {\n    source: DataSourceEnum.UPLOADED;\n    gedcom: string;\n    allLanguages: Language[];\n    hash: string;\n    images?: Map<string, string>;\n}\n\nexport interface UrlSourceSpec {\n    source: DataSourceEnum.GEDCOM_URL;\n    url: string;\n    allLanguages: Language[];\n    handleCors: boolean;\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(data: JsonGedcomData, selection?: IndiInfo): IndiInfo {\n    // If ID is not given, or it doesn't exist in the data, use the first ID in the data.\n    const id = selection && data.indis.some((i) => i.id === selection.id)\n        ? selection.id\n        : data.indis[0].id;\n    return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n    gedcom: string,\n    cacheId: string,\n    allLanguages: Language[],\n    images?: Map<string, string>\n): TopolaData {\n    const data = convertGedcom(gedcom, allLanguages, images || new Map());\n    const serializedData = JSON.stringify(data);\n    try {\n        sessionStorage.setItem(cacheId, serializedData);\n    } catch (e) {\n        console.warn('Failed to store data in session storage: ' + e);\n    }\n    return data;\n}\n\nasync function loadGedzip(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n    const entries = zip.getEntries();\n    let gedcom = undefined;\n    const images = new Map<string, string>();\n    for (const entry of entries) {\n        if (entry.entryName.endsWith('.ged')) {\n            if (gedcom) {\n                console.warn('Multiple GEDCOM files found in zip archive.');\n            } else {\n                gedcom = entry.getData().toString();\n            }\n        } else {\n            // Save image for later.\n            images.set(\n                entry.entryName,\n                URL.createObjectURL(new Blob([entry.getData()])),\n            );\n        }\n    }\n    if (!gedcom) {\n        throw new Error('GEDCOM file not found in zip archive.');\n    }\n    return {gedcom, images};\n}\n\nexport async function loadFile(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const fileHeader = await blob.slice(0, 2).text();\n    if (fileHeader === 'PK') {\n        return loadGedzip(blob);\n    }\n    return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n    url: string,\n    handleCors: boolean,\n    allLanguages: Language[]\n) {\n    try {\n        const cachedData = sessionStorage.getItem(url);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n\n    // handle GoogleDrive files\n    const driveUrlMatch = url.match(\n        /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n    );\n    if (driveUrlMatch) {\n        url = `https://drive.google.com/uc?id=${driveUrlMatch[1]}&export=download`;\n    }\n\n    const urlToFetch = handleCors ? 'https://universal-cors-proxy.glitch.me/' + encodeURIComponent(url) : url;\n    const response = await fetch(urlToFetch);\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/zip\")) {\n        const data = await response.blob();\n        const {gedcom, images} = await loadFile(data)\n        return prepareData(gedcom, url, allLanguages, images);\n    } else if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json();\n        return prepareData(data.contents, url, allLanguages, new Map());\n    } else if (contentType && (contentType.includes(\"text/plain\") || contentType.includes(\"text/html\"))) {\n        let data = await response.text();\n        while (data.charCodeAt(0) > 127) {\n            data = data.slice(1);\n        }\n        return prepareData(data, url, allLanguages, new Map());\n    }\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n    hash: string,\n    gedcom?: string,\n    allLanguages?: Language[],\n    images?: Map<string, string>\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n    if ((!gedcom) || (!allLanguages)) {\n        throw new TopolaError('ERROR_LOADING_UPLOADED_FILE',\n            'Error loading data. Please upload your file again.',\n        );\n    }\n    return prepareData(gedcom, hash, allLanguages, images);\n}\n\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<UploadSourceSpec>,\n        oldSource: SourceSelection<UploadSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.hash !== oldSource.spec.hash;\n    }\n\n    async loadData(source: SourceSelection<UploadSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadGedcom(\n                source.spec.hash,\n                source.spec.gedcom,\n                source.spec.allLanguages,\n                source.spec.images,\n            );\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n    isNewData(newSource: SourceSelection<UrlSourceSpec>, oldSource: SourceSelection<UrlSourceSpec>, data?: TopolaData) {\n        return newSource.spec.url !== oldSource.spec.url;\n    }\n    async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadFromUrl(source.spec.url, source.spec.handleCors, source.spec.allLanguages);\n        } catch (error) {\n            throw error;\n        }\n    }\n}"],"sourceRoot":""}