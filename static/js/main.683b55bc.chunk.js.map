{"version":3,"sources":["lib/topola/dist/chart-util.js","util/error.ts","lib/topola/dist/ancestor-chart.js","lib/topola/dist/id-generator.js","lib/topola/dist/descendant-chart.js","util/gedcom_util.ts","lib/topola/dist/composite-renderer.js","lib/topola/dist/data.js","lib/topola/dist/date-format.js","lib/topola/dist/index.js","lib/topola/dist/api.js","lib/topola/dist/detailed-renderer.js","lib/topola/dist/gedcom.js","lib/topola/dist/hourglass-chart.js","lib/topola/dist/relatives-chart.js","lib/topola/dist/simple-api.js","datasource/data_source.ts","util/analytics.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/convert_tables.tsx","model/validate_csv.ts","model/individual.ts","model/family.ts","util/convert_csv.ts","menu/convert_menu.tsx","menu/search_index.ts","menu/top_bar.tsx","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","config.tsx","chart.tsx","model/languages-loader.ts","app.tsx","index.tsx","util/date_util.ts","datasource/load_data.ts"],"names":["Object","defineProperty","exports","value","ChartUtil","getChartInfoWithoutMargin","getChartInfo","linkId","V_SPACING","H_SPACING","d3_selection_1","require","d3_flextree_1","d3_array_1","HIDE_TIME_MS","MOVE_TIME_MS","node","parent","id","_a","data","generation","child","additionalMarriage","nodes","x0","min","d","x","width","y0","y","height","size","max","origin","options","this","prototype","linkHorizontal","s","sAnchor","renderer","getFamilyAnchor","dAnchor","spouseParentNodeId","getSpouseAnchor","getIndiAnchor","sx","sy","_b","dx","dy","midX","linkVertical","midY","linkAdditionalMarriage","nodeIndex","children","findIndex","n","siblingNode","updateSvgDimensions","chartInfo","group","select","svgSelector","animate","transition","delay","duration","attr","layOutChart","root","layoutOptions","_this","svg","empty","append","text","getCss","each","depth","flipVertically","baseGeneration","updateNodes","descendants","vSizePerDepth","Map","maxVSize","horizontal","get","set","vSize","vSpacing","undefined","hSpacing","flextree","nodeSize","maxChildSize_1","maxChildSize","spacing","treemap","forEach","renderChart","getSvgForRendering","nodeAnimation","renderNodes","linkAnimation","renderLinks","Promise","all","resolve","boundNodes","selectAll","nodeEnter","enter","transitionsPending","exit","transitionDone","merge","style","on","startIndi","render","remove","link","links","filter","boundLinks","path","insert","markHiddenRelatives","gedcomData","displayedIndiIDs","sort","a","b","parseInt","slice","map","length","markHiddenAncestorsForIndi","markHiddenDescendantsForIndi","f","fams","fam","Array","from","values","json","includes","fatherID","husb","motherID","wife","hiddenRelatives","c","childId","TopolaError","code","message","args","Error","__assign","assign","t","i","arguments","p","hasOwnProperty","call","apply","AncestorChart","getAncestorsTree","chart_util_1","d3_hierarchy_1","id_generator_1","ancestorChartOptions","startIndiFamilies","getIndi","getFamiliesAsSpouse","startFam","getFam","getMother","swapStartSpouses","ancestorsRoot","createHierarchy","pop","util","famc","parents","stack","idGenerator","IdGenerator","getFamilyAsChild","getId","push","parentId","family","indi","indiParentNodeId","entry","getFather","father","mother","spouse","stratify","animationPromise","info","ids","has","num","DescendantChart","layOutDescendants","DUMMY_ROOT_NODE_ID","removeDummyNode","allNodes","descendantsRoot","getNodes","famIds","famId","indiId","getSpouse","getFamNode","dummyNode_1","_loop_1","this_1","getChildren","childNodes","pointerToId","pointer","substring","idToIndiMap","indis","idToFamMap","prepareGedcom","entries","head","find","tag","other","strcmp","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","compareDates","birth","birthDatesComparator","newFams","newChildren","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","title","startsWith","filterImage","convertGedcom","allLanguages","parseGedcom","gedcomEntriesToJson","chartData","getName","person","names","subEntry","name","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","jsonToGedcom","processNode","level","line","record","trim","getFamPositionHorizontal","getFamPositionVertical","CompositeRenderer","getPreferredFamSize","setPreferredIndiSize","getPreferredIndiSize","indiVSizePerDepth","maxIndiVSize","getIndiVSize","getFamVSize","getVSize","hSize","indiHSize","getHSize","x_1","famYOffset","famXOffset","indiWidth","spouseWidth","familyWidth","indiHeight","spouseHeight","familyHeight","JsonDataProvider","JsonIndiDetails","isEgo","getFirstName","firstName","getLastName","lastName","toUpperCase","getBirthDate","getMaidenName","maidenName","getNumberOfChildren","numberOfChildren","getNumberOfMarriages","numberOfMarriages","getBirthPlace","place","getDeathDate","death","getDeathPlace","isConfirmedDeath","confirmed","getSex","sex","getLanguages","languages","getLanguagesLabel","abbreviations","lang","abbreviation","join","getEthnicity","ethnicity","getTribe","tribe","getImageUrl","getImages","getNotes","notes","getEvents","events","showLanguages","hideLanguages","showEthnicity","hideEthnicity","showId","hideId","showSex","hideSex","JsonFamDetails","getMarriageDate","getMarriagePlace","formatDateOrRange","formatDate","MONTHS_EN","QUALIFIERS_I18N","shortMonthCache","getShortMonth","month","locale","Intl","DateTimeFormat","cacheKey","format","Date","getQualifier","qualifier","language","split","languageMap","formatDateOnly","day","year","date","dateOrRange","dateRange","to","__createBinding","create","o","m","k","k2","enumerable","__exportStar","ChartColors","__extends","extendStatics","setPrototypeOf","__proto__","TypeError","String","__","constructor","DetailedRenderer","getLength","_1","date_format_1","composite_renderer_1","DETAILS_HEIGHT","textLengthCache","textClass","g","getComputedTextLength","SEX_SYMBOLS","_super","getColoringClass","colors","NO_COLOR","COLOR_BY_GENERATION","COLOR_BY_SEX","COLOR_BY_ETHNICITY","COLOR_BY_NR_LANGUAGES","COLOR_BY_LANGUAGE","getIndiDetails","detailsList","birthDate","birthPlace","deathDate","deathPlace","symbol","listIndex","details","ethnicityHeight","languagesHeight","idAndSexHeight","maxDetailsWidth","detail","getFamDetails","marriageDate","marriagePlace","indisToStroke","update","indiUpdate","xOffset","yOffset","indiEnter","renderIndi","familyEnter","familyUpdate","getFamTransform","renderFamily","xhr","XMLHttpRequest","open","send","status","responseText","statusText","error","console","selection","getSexClass","ethnicityCss","getEthnicityClass","buildEthnicityMap","egoEthnicity","classNum","keys","e","log","getSelectedStroke","getLanguagesClass","selectedLanguageId","Math","resetCss","clear","indiHrefFunc","indiCallback","event","background","selectedLanguage","getClipId","getDetailsWidth","languages_height_start","ethnicity_height_start","maxDetails","v","details_height_start","_loop_2","lineGroup","sexSymbol","border","famHrefFunc","famCallback","gedcomToJson","getDate","parse_gedcom_1","findTag","findTags","extractName","arr","MONTHS","parseDate","parts","lastPart","fullText","firstPart","Number","gedcomDate","date_1","createNotes","notesTag","reduce","concat","createEvent","typeTag","dateTag","placeTag","type","createFam","husbTag","wifeTag","objects","ego","nameTags","isMaiden","nameTag","main","maiden","nchiTag","nmrTag","sexTag","gedcomLanguages","l","ethnicityTag","tribeTag","famcTag","objeTags","realObjeTag","file","createIndi","gedcomContents","parse","HourglassChart","ancestor_chart_1","descendant_chart_1","ancestorNodes","descendantNodes","__spreadArray","il","j","RelativesChart","FilterChildFam","index","indexOf","splice","FilterChildData","layOutAncestorDescendants","focusedNode","ancestorData","eachAfter","descendantOptions","parentHeight","childNode","parentData","left","middle","thisNode","middleX","parentNode","nodeData","indiParent","spouseParent","nodeX","nodeY","nodeWidth","nodeHeight","spouseTreeHeight","dx_1","dy_1","indiTreeHeight","dx_2","dy_2","ancestorOptions","ancestorDescentants","createChart","data_1","SimpleChartHandle","initialRender","renderOptions","chartOptions","indiUrl","famUrl","createChartOptions","chartType","updateSvgSize","setData","DataSourceEnum","analyticsEvent","action","window","gtag","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","defaultMessage","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","closeIcon","Icon","color","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","properties","target","eventSources","sources","intl","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","Tab","Pane","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","sub","familyEntry","spouseReference","familySubEntry","eventPlace","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","resolveDate","eventNotes","toEvent","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","eventEntry","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","getMultilineDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","reject","PARENT_READY","postMessage","READY","GEDCOM","loadGedcom","addEventListener","onMessage","getI18nMessage","formatMessage","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","IndividualsTableExample","headerColor","Table","TableHeader","TableRow","TableHeaderCell","TableBody","TableCell","disabled","RelationshipsTableExample","FamiliesTableExample","IndividualsLanguagesTableExample","Papa","columnsValidation","valuesValidation","validateCSV","parsedData","header","skipEmptyLines","errors","rows","requiredColumns","headers","missingColumns","col","checkColumns","cellErrors","row","column","checkMissingValues","indiIdErrors","famIdErrors","langIdErrors","isNaN","checkIdFormat","Sex","Graph","shortestPath","Individual","params","givenName","surname","nickname","birthYear","familySpouses","familyChild","relationships","indID","fatherId","motherId","hasNode","addNode","addEdge","current","minValue","singleSourceLength","capitalize","famID","str","word","charAt","Family","husband","marriaged","divorced","csvToGedcom","languagesContents","individualsContent","relationshipsContent","familiesContent","individualsLanguagesContent","egoIndiId","individuals","parseIndividuals","parseRelationships","families","parseFamilies","mapFamiliesChildren","mapIndividualsSpouses","parseLanguages","individualsLanguages","parseIndividualsLanguages","mapIndividualsLanguages","createGedcomString","parseCSV","personId","langIds","individual","ind","langId","egoIndi","lowestEgoIndi","egoGeneration","_i","prev","createHeader","indiRecords","asGedcom","famRecords","createTail","tail","egoId","egoGen","fetch","headerFile","headerTemplate","toLocaleDateString","replaced","egoSection","repoSection","uid","uuidv4","repo","char","tailFile","tailTemplate","acc","key","initialHeaderColors","ConvertCSVMenu","dialogOpen","setDialogOpen","inputFiles","setInputFiles","headerColors","setHeaderColors","setEgoIndiId","setErrors","history","useHistory","closeDialog","handleUpload","files","validFilenames","validateFilenames","fileReadPromises","reader","FileReader","readAsText","onload","fileContent","validFile","onerror","then","results","validFiles","newHeaderColors","changeHeaderColors","egoTag","document","querySelector","parentElement","setProperty","convert2gedcom","individualsFile","relationshipsFile","familiesFile","individualsLanguagesFile","readFileContents","languagesFile","gedcomString","gedcomFile","Blob","loadFile","imageFileNames","hash","md5","state","Form","onSubmit","float","marginBottom","Input","every","labelPosition","icon","placeholder","onChange","_e","accept","multiple","Actions","Button","secondary","primary","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","initMultiLingualLunrWithoutTrimmer","field","boost","spouseLastName","husbId","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","pipelineFunctions","searchPipelineFunctions","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","searchPipeline","query","ScreenSize","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","debouncedHandleSearch","debounce","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","onResultSelect","onSelection","noResultsMessage","selectFirstResult","isImageFileName","lower","UploadMenu","filesArray","URL","createObjectURL","htmlFor","UrlMenu","setUrl","inputRef","handleLoad","focus","href","TopBar","FileMenus","screenSize","menuOpen","setMenuOpen","cooldown","toggleMenu","setTimeout","standalone","LARGE","SMALL","ViewMenus","currentView","changeView","ChartMenus","setCurrentView","showingChart","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","Divider","onDownloadGedcom","view","onResetView","greaterThanOrEqual","inverted","at","LanguagesArg","EthnicityArg","IdsArg","SexArg","DEFAULT_CONFIG","HIDE","SHOW","renderLanguagesOption","renderEthnicityOption","languageOptions","COLOR_ARG","COLOR_ARG_INVERSE","LANGUAGES_ARG","LANGUAGES_ARG_INVERSE","ETHNICITY_ARG","ETHNICITY_ARG_INVERSE","ID_ARG","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","config","languagesEnabled","setLanguagesEnabled","ethnicityEnabled","setEthnicityEnabled","idsEnabled","setIdsEnabled","sexEnabled","setSexEnabled","Field","Checkbox","radio","checked","tagName","toggle","newState","ChartType","zoomed","scale","transform","offsetX","clientWidth","offsetY","clientHeight","scrollLeft","scrollTop","scrolled","zoomTransform","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","response","warn","inlineImages","getElementsByTagName","loadImage","drawImageOnCanvas","canvas","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","getAttribute","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","downloadSvg","contents","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","downloadGedcom","getFilename","obj","lastIndexOf","getChartType","Hourglass","Relatives","chartColors","TopolaChartColors","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","resetPosition","freezeAnimation","innerHTML","zoomOutFactor","extent","scaleExtent","translateExtent","scrollTopTween","interpolateNumber","scrollLeftTween","svgTransition","tween","Chart","chartWrapper","prevProps","usePrevious","hideIds","CSVLoader","csvData","idIndex","nameIndex","isoIndex","title_fn","iso","AppState","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getEgoGen","getLowestId","lowest","loadLanguageOptions","Set","getGedcomLanguages","getArguments","getParamFromSearch","chartTypes","embedded","sourceSpec","GEDCOM_URL","handleCors","UPLOADED","EMBEDDED","parsedGen","showSidePanel","messages","de","messages_de","fr","messages_fr","it","messages_it","es","messages_es","pl","messages_pl","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setGedcomString","setFreezeAnimation","setConfig","setAllLanguages","toggleDetails","getEthnicities","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","embeddedDataSource","isNewData","newSourceSpec","newSelection","spec","loadData","loadAllLanguages","loadLanguages","updateUrl","gen","displayErrorPopup","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","exact","DATE_QUALIFIERS","hasDay","hasMonth","hasYear","dateObject","toDateObject","formatOptions","lowerCaseQualifier","formatDateQualifier","dateElement","fromDate","toDate","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","prepareData","cacheId","serializedData","JSON","stringify","sessionStorage","setItem","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","cachedData","getItem","driveUrlMatch","urlToFetch","encodeURIComponent","ok","contentType","charCodeAt"],"mappings":"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","file":"static/js/main.683b55bc.chunk.js","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.ChartUtil = exports.getChartInfoWithoutMargin = exports.getChartInfo = exports.linkId = exports.V_SPACING = exports.H_SPACING = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst d3_flextree_1 = require(\"d3-flextree\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\n\n/** Horizontal distance between boxes. */\nexports.H_SPACING = 15;\n/** Vertical distance between boxes. */\nexports.V_SPACING = 30;\n/** Margin around the whole drawing. */\nconst MARGIN = 15;\nconst HIDE_TIME_MS = 200;\nconst MOVE_TIME_MS = 500;\n\n/** Assigns an identifier to a link. */\nfunction linkId(node) {\n    if (!node.parent) {\n        return node.id + \":A\";\n    }\n    const _a = node.data.generation > node.parent.data.generation\n        ? [node.data, node.parent.data]\n        : [node.parent.data, node.data], child = _a[0], parent = _a[1];\n    if (child.additionalMarriage) {\n        return child.id + \":A\";\n    }\n    return parent.id + \":\" + child.id;\n}\nexports.linkId = linkId;\n\nfunction getChartInfo(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    }) - MARGIN;\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    }) - MARGIN;\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    }) + MARGIN;\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    }) + MARGIN;\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfo = getChartInfo;\n\nfunction getChartInfoWithoutMargin(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    });\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    });\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    });\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    });\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfoWithoutMargin = getChartInfoWithoutMargin;\n\n/** Utility class with common code for all chart types. */\nlet ChartUtil = /** @class */ (function () {\n\n    function ChartUtil(options) {\n        this.options = options;\n    }\n\n    /** Creates a path from parent to the child node (horizontal layout). */\n    ChartUtil.prototype.linkHorizontal = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midX = (s.x + s.data.width / 2 + d.x - d.data.width / 2) / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + midX + \" \" + sy + \",\\n              \" + midX + \" \" + dy + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    /** Creates a path from parent to the child node (vertical layout). */\n    ChartUtil.prototype.linkVertical = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midY = s.y + s.data.height / 2 + exports.V_SPACING / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + sx + \" \" + midY + \",\\n              \" + dx + \" \" + midY + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    ChartUtil.prototype.linkAdditionalMarriage = function (node) {\n        const nodeIndex = node.parent.children.findIndex(function (n) {\n            return n.data.id === node.data.id;\n        });\n        // Assert nodeIndex > 0.\n        const siblingNode = node.parent.children[nodeIndex - 1];\n        const sAnchor = this.options.renderer.getIndiAnchor(node.data);\n        const dAnchor = this.options.renderer.getIndiAnchor(siblingNode.data);\n        const _a = [node.x + sAnchor[0], node.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [siblingNode.x + dAnchor[0], siblingNode.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        return \"M \" + sx + \", \" + sy + \"\\n            L \" + dx + \", \" + dy;\n    };\n\n    ChartUtil.prototype.updateSvgDimensions = function (chartInfo) {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        const group = svg.select('g');\n        const transition = this.options.animate\n            ? group.transition().delay(HIDE_TIME_MS).duration(MOVE_TIME_MS)\n            : group;\n        transition.attr('transform', \"translate(\" + chartInfo.origin[0] + \", \" + chartInfo.origin[1] + \")\");\n    };\n\n    ChartUtil.prototype.layOutChart = function (root, layoutOptions) {\n        const _this = this;\n        if (layoutOptions === void 0) { layoutOptions = {}; }\n        // Add styles so that calculating text size is correct.\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('style').empty()) {\n            svg.append('style').text(this.options.renderer.getCss());\n        }\n        // Assign generation number.\n        root.each(function (node) {\n            node.data.generation =\n                node.depth * (layoutOptions.flipVertically ? -1 : 1) +\n                    (_this.options.baseGeneration || 0);\n        });\n        // Set preferred sizes.\n        this.options.renderer.updateNodes(root.descendants());\n        const vSizePerDepth = new Map();\n        root.each(function (node) {\n            const depth = node.depth;\n            const maxVSize = d3_array_1.max([\n                _this.options.horizontal ? node.data.width : node.data.height,\n                vSizePerDepth.get(depth),\n            ]);\n            vSizePerDepth.set(depth, maxVSize);\n        });\n        // Set sizes of whole nodes.\n        root.each(function (node) {\n            const vSize = vSizePerDepth.get(node.depth);\n            if (_this.options.horizontal) {\n                node.data.width = vSize;\n            }\n            else {\n                node.data.height = vSize;\n            }\n        });\n        const vSpacing = layoutOptions.vSpacing !== undefined ? layoutOptions.vSpacing : exports.V_SPACING;\n        const hSpacing = layoutOptions.hSpacing !== undefined ? layoutOptions.hSpacing : exports.H_SPACING;\n        // Assigns the x and y position for the nodes.\n        const treemap = d3_flextree_1.flextree()\n            .nodeSize(function (node) {\n                if (_this.options.horizontal) {\n                    const maxChildSize_1 = d3_array_1.max(node.children || [], function (n) {\n                        return n.data.width;\n                    }) || 0;\n                    return [\n                        node.data.height,\n                        (maxChildSize_1 + node.data.width) / 2 + vSpacing,\n                    ];\n                }\n                const maxChildSize = d3_array_1.max(node.children || [], function (n) {\n                    return n.data.height;\n                }) || 0;\n                return [\n                    node.data.width,\n                    (maxChildSize + node.data.height) / 2 + vSpacing,\n                ];\n            }).spacing(function () {\n                return hSpacing;\n            });\n        const nodes = treemap(root).descendants();\n        // Swap x-y coordinates for horizontal layout.\n        nodes.forEach(function (node) {\n            let _a;\n            if (layoutOptions.flipVertically) {\n                node.y = -node.y;\n            }\n            if (_this.options.horizontal) {\n                _a = [node.y, node.x];\n                node.x = _a[0];\n                node.y = _a[1];\n            }\n        });\n        return nodes;\n    };\n\n    ChartUtil.prototype.renderChart = function (nodes) {\n        const svg = this.getSvgForRendering();\n        const nodeAnimation = this.renderNodes(nodes, svg);\n        const linkAnimation = this.renderLinks(nodes, svg);\n        return Promise.all([\n            nodeAnimation,\n            linkAnimation,\n        ]);\n    };\n\n    ChartUtil.prototype.renderNodes = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const boundNodes = svg\n                .select('g')\n                .selectAll('g.node')\n                .data(nodes, function (d) {\n                    return d.id;\n                });\n            const nodeEnter = boundNodes.enter().append('g');\n            let transitionsPending = boundNodes.exit().size() + boundNodes.size() + nodeEnter.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            nodeEnter\n                .merge(boundNodes)\n                .attr('class', function (node) {\n                    return \"node generation\" + node.data.generation;\n                });\n            nodeEnter.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            if (_this.options.animate) {\n                nodeEnter\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            const updateTransition = _this.options.animate\n                ? boundNodes\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundNodes;\n            updateTransition.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            _this.options.renderer.options.startIndi = _this.options.startIndi\n            _this.options.renderer.render(nodeEnter, boundNodes);\n            if (_this.options.animate) {\n                boundNodes\n                    .exit()\n                    .transition()\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundNodes.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.renderLinks = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const link = function (parent, child) {\n                if (child.data.additionalMarriage) {\n                    return _this.linkAdditionalMarriage(child);\n                }\n                const flipVertically = parent.data.generation > child.data.generation;\n                if (_this.options.horizontal) {\n                    if (flipVertically) {\n                        return _this.linkHorizontal(child, parent);\n                    }\n                    return _this.linkHorizontal(parent, child);\n                }\n                if (flipVertically) {\n                    return _this.linkVertical(child, parent);\n                }\n                return _this.linkVertical(parent, child);\n            };\n            const links = nodes.filter(function (n) {\n                return !!n.parent || n.data.additionalMarriage;\n            });\n            const boundLinks = svg\n                .select('g')\n                .selectAll('path.link')\n                .data(links, linkId);\n            const path = boundLinks\n                .enter()\n                .insert('path', 'g')\n                .attr('class', function (node) {\n                    return node.data.additionalMarriage ? 'link additional-marriage' : 'link';\n                })\n                .attr('d', function (node) {\n                    return link(node.parent, node);\n                });\n            let transitionsPending = boundLinks.exit().size() + boundLinks.size() + path.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            const linkTransition = _this.options.animate\n                ? boundLinks\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundLinks;\n            linkTransition.attr('d', function (node) {\n                return link(node.parent, node);\n            });\n            if (_this.options.animate) {\n                path\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(2 * HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(0)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            if (_this.options.animate) {\n                boundLinks\n                    .exit()\n                    .transition()\n                    .duration(0)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundLinks.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.getSvgForRendering = function () {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('g').empty()) {\n            svg.append('g');\n        }\n        return svg;\n    };\n\n    ChartUtil.prototype.markHiddenRelatives = function (nodes, gedcomData) {\n        const displayedIndiIDs = nodes.sort((a, b) => {\n            const numA = parseInt(a.id.slice(1));\n            const numB = parseInt(b.id.slice(1));\n            return numA - numB;\n        }).map(function (n) { return n.id });\n\n        for (var n = 0; n < nodes.length; n++) {\n            this.markHiddenAncestorsForIndi(nodes[n], gedcomData, displayedIndiIDs);\n            this.markHiddenDescendantsForIndi(nodes[n], gedcomData, displayedIndiIDs);\n        }\n    }\n\n    ChartUtil.prototype.markHiddenAncestorsForIndi = function (node, gedcomData, displayedIndiIDs) {\n        // go through each family to find the parents of this indi\n        for (var f = 0; f < gedcomData.fams.size; f++) {\n            const fam = Array.from(gedcomData.fams.values())[f]\n            if (fam.json.children.length > 0) {\n                if (fam.json.children.includes(node.id)) {\n                    // parents found\n                    const fatherID = fam.json.husb\n                    const motherID = fam.json.wife\n                    if (!displayedIndiIDs.includes(fatherID) || !displayedIndiIDs.includes(motherID)) {\n                        node.hiddenRelatives = true\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    ChartUtil.prototype.markHiddenDescendantsForIndi = function (node, gedcomData, displayedIndiIDs) {\n        // go through each family to find the children\n        for (var f = 0; f < gedcomData.fams.size; f++) {\n            const fam = Array.from(gedcomData.fams.values())[f]\n            if (fam.json.husb === node.id) {  // || fam.json.wife === node.id mark only the father. Otherwise difficult to distinguish from women with missing parents\n                // family found\n                if (fam.json.children.length > 0) {\n                    for (var c = 0; c < fam.json.children.length; c++) {\n                        const childId = fam.json.children[c]\n                        if (!displayedIndiIDs.includes(childId)) {\n                            // some children are not displayed\n                            node.hiddenRelatives = true\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return ChartUtil;\n}());\nexports.ChartUtil = ChartUtil;\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n    constructor(\n        public readonly code: string,\n        message: string,\n        public readonly args: { [key: string]: string } = {},\n    ) {\n        super(message);\n    }\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AncestorChart = exports.getAncestorsTree = void 0;\nvar chart_util_1 = require(\"./chart-util\");\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar id_generator_1 = require(\"./id-generator\");\nfunction getAncestorsTree(options) {\n    var ancestorChartOptions = __assign({}, options);\n    var startIndiFamilies = options.startIndi\n        ? options.data.getIndi(options.startIndi).getFamiliesAsSpouse()\n        : [];\n    // If the start individual is set and this person has at least one spouse,\n    // start with the family instead.\n    if (startIndiFamilies.length) {\n        ancestorChartOptions.startFam = startIndiFamilies[0];\n        ancestorChartOptions.startIndi = undefined;\n        var fam = options.data.getFam(startIndiFamilies[0]);\n        if (fam.getMother() === options.startIndi) {\n            ancestorChartOptions.swapStartSpouses = true;\n        }\n    }\n    var ancestors = new AncestorChart(ancestorChartOptions);\n    var ancestorsRoot = ancestors.createHierarchy();\n    // Remove spouse's ancestors if there are multiple spouses\n    // to avoid showing ancestors of just one spouse.\n    if (startIndiFamilies.length > 1 &&\n        ancestorsRoot.children &&\n        ancestorsRoot.children.length > 1) {\n        ancestorsRoot.children.pop();\n        ancestorsRoot.data.spouseParentNodeId = undefined;\n    }\n    return ancestorsRoot;\n}\nexports.getAncestorsTree = getAncestorsTree;\n/** Renders an ancestors chart. */\nvar AncestorChart = /** @class */ (function () {\n    function AncestorChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    /** Creates a d3 hierarchy from the input data. */\n    AncestorChart.prototype.createHierarchy = function () {\n        let id;\n        let famc;\n        let indi;\n        var parents = [];\n        var stack = [];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        if (this.options.startIndi) {\n            indi = this.options.data.getIndi(this.options.startIndi);\n            famc = indi.getFamilyAsChild();\n            id = famc ? idGenerator.getId(famc) : undefined;\n            if (famc) {\n                stack.push({\n                    id: famc,\n                    parentId: this.options.startIndi,\n                    family: { id: famc },\n                });\n            }\n            parents.push({\n                id: this.options.startIndi,\n                indi: { id: this.options.startIndi },\n                indiParentNodeId: id,\n            });\n        }\n        else {\n            stack.push({\n                id: idGenerator.getId(this.options.startFam),\n                family: { id: this.options.startFam },\n            });\n        }\n        while (stack.length) {\n            var entry = stack.pop();\n            var fam = this.options.data.getFam(entry.family.id);\n            if (!fam) {\n                continue;\n            }\n            var _a = entry.family.id === this.options.startFam &&\n                this.options.swapStartSpouses\n                ? [fam.getMother(), fam.getFather()]\n                : [fam.getFather(), fam.getMother()], father = _a[0], mother = _a[1];\n            if (!father && !mother) {\n                continue;\n            }\n            if (mother) {\n                entry.spouse = { id: mother };\n                indi = this.options.data.getIndi(mother);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.spouseParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            if (father) {\n                entry.indi = { id: father };\n                indi = this.options.data.getIndi(father);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.indiParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            parents.push(entry);\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    AncestorChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = this.util.layOutChart(root, { flipVertically: true });\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return AncestorChart;\n}());\nexports.AncestorChart = AncestorChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdGenerator = void 0;\n/** Provides unique identifiers. */\nvar IdGenerator = /** @class */ (function () {\n    function IdGenerator() {\n        this.ids = new Map();\n    }\n    /**\n     * Returns the given identifier if it wasn't used before. Otherwise, appends\n     * a number to the given identifier to make it unique.\n     */\n    IdGenerator.prototype.getId = function (id) {\n        if (this.ids.has(id)) {\n            var num = this.ids.get(id);\n            this.ids.set(id, num + 1);\n            return id + \":\" + num;\n        }\n        this.ids.set(id, 1);\n        return id;\n    };\n    return IdGenerator;\n}());\nexports.IdGenerator = IdGenerator;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescendantChart = exports.layOutDescendants = exports.DUMMY_ROOT_NODE_ID = void 0;\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar chart_util_1 = require(\"./chart-util\");\nvar id_generator_1 = require(\"./id-generator\");\nexports.DUMMY_ROOT_NODE_ID = 'DUMMY_ROOT_NODE';\nfunction layOutDescendants(options, layoutOptions) {\n    if (layoutOptions === void 0) { layoutOptions = {}; }\n    var descendants = new DescendantChart(options);\n    var descendantsRoot = descendants.createHierarchy();\n    return removeDummyNode(new chart_util_1.ChartUtil(options).layOutChart(descendantsRoot, layoutOptions));\n}\nexports.layOutDescendants = layOutDescendants;\n/** Removes the dummy root node if it was added in createHierarchy(). */\nfunction removeDummyNode(allNodes) {\n    if (allNodes[0].id !== exports.DUMMY_ROOT_NODE_ID) {\n        return allNodes;\n    }\n    var nodes = allNodes.slice(1);\n    // Move first node to (0, 0) coordinates.\n    var dx = -nodes[0].x;\n    var dy = -nodes[0].y;\n    nodes.forEach(function (node) {\n        if (node.parent &&\n            node.parent.id === exports.DUMMY_ROOT_NODE_ID &&\n            !node.data.additionalMarriage) {\n            node.parent = null;\n        }\n        node.x += dx;\n        node.y += dy;\n        node.data.generation--;\n    });\n    return nodes;\n}\n/** Returns the spouse of the given individual in the given family. */\nfunction getSpouse(indiId, fam) {\n    if (fam.getFather() === indiId) {\n        return fam.getMother();\n    }\n    return fam.getFather();\n}\n/** Renders a descendants chart. */\nvar DescendantChart = /** @class */ (function () {\n    function DescendantChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    DescendantChart.prototype.getNodes = function (id) {\n        var _this = this;\n        var indi = this.options.data.getIndi(id);\n        var famIds = indi.getFamiliesAsSpouse();\n        if (!famIds.length) {\n            // Single person.\n            return [\n                {\n                    id: id,\n                    indi: {\n                        id: id,\n                    },\n                },\n            ];\n        }\n        // Marriages.\n        var nodes = famIds.map(function (famId) {\n            var entry = {\n                id: famId,\n                indi: {\n                    id: id,\n                },\n                family: {\n                    id: famId,\n                },\n            };\n            var fam = _this.options.data.getFam(famId);\n            var spouse = getSpouse(id, fam);\n            if (spouse) {\n                entry.spouse = { id: spouse };\n            }\n            return entry;\n        });\n        nodes.slice(1).forEach(function (node) {\n            node.additionalMarriage = true;\n        });\n        return nodes;\n    };\n    DescendantChart.prototype.getFamNode = function (famId) {\n        var node = { id: famId, family: { id: famId } };\n        var fam = this.options.data.getFam(famId);\n        var father = fam.getFather();\n        if (father) {\n            node.indi = { id: father };\n        }\n        var mother = fam.getMother();\n        if (mother) {\n            node.spouse = { id: mother };\n        }\n        return node;\n    };\n    /** Creates a d3 hierarchy from the input data. */\n    DescendantChart.prototype.createHierarchy = function () {\n        var _this = this;\n        var parents = [];\n        var nodes = this.options.startIndi\n            ? this.getNodes(this.options.startIndi)\n            : [this.getFamNode(this.options.startFam)];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        nodes.forEach(function (node) { return (node.id = idGenerator.getId(node.id)); });\n        // If there are multiple root nodes, i.e. the start individual has multiple\n        // marriages, create a dummy root node.\n        // After layout is complete, the dummy node will be removed.\n        if (nodes.length > 1) {\n            var dummyNode_1 = {\n                id: exports.DUMMY_ROOT_NODE_ID,\n                height: 1,\n                width: 1,\n            };\n            parents.push(dummyNode_1);\n            nodes.forEach(function (node) { return (node.parentId = dummyNode_1.id); });\n        }\n        parents.push.apply(parents, nodes);\n        var stack = [];\n        nodes.forEach(function (node) {\n            if (node.family) {\n                stack.push(node);\n            }\n        });\n        var _loop_1 = function () {\n            var entry = stack.pop();\n            var fam = this_1.options.data.getFam(entry.family.id);\n            var children = fam.getChildren();\n            children.forEach(function (childId) {\n                var childNodes = _this.getNodes(childId);\n                childNodes.forEach(function (node) {\n                    node.parentId = entry.id;\n                    if (node.family) {\n                        node.id = \"\" + idGenerator.getId(node.family.id);\n                        stack.push(node);\n                    }\n                });\n                parents.push.apply(parents, childNodes);\n            });\n        };\n        var this_1 = this;\n        while (stack.length) {\n            _loop_1();\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    DescendantChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = removeDummyNode(this.util.layOutChart(root));\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return DescendantChart;\n}());\nexports.DescendantChart = DescendantChart;\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {gedcomEntriesToJson, JsonFam, JsonGedcomData, JsonImage, JsonIndi} from '../lib/topola';\nimport {compareDates} from './date_util';\nimport {Language} from \".././model/languages-loader\";\n\nexport interface GedcomData {\n    /** The HEAD entry. */\n    head: GedcomEntry;\n    /** INDI entries mapped by id. */\n    indis: { [key: string]: GedcomEntry };\n    /** FAM entries mapped by id. */\n    fams: { [key: string]: GedcomEntry };\n    /** Other entries mapped by id, e.g. NOTE, SOUR. */\n    other: { [key: string]: GedcomEntry };\n}\n\nexport interface TopolaData {\n    chartData: JsonGedcomData;\n    gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n    return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n    const map = new Map<string, JsonIndi>();\n    data.indis.forEach((indi) => {\n        map.set(indi.id, indi);\n    });\n    return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n    const map = new Map<string, JsonFam>();\n    data.fams.forEach((fam) => {\n        map.set(fam.id, fam);\n    });\n    return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n    const head = entries.find((entry) => entry.tag === 'HEAD')!;\n    const indis: { [key: string]: GedcomEntry } = {};\n    const fams: { [key: string]: GedcomEntry } = {};\n    const other: { [key: string]: GedcomEntry } = {};\n    entries.forEach((entry) => {\n        if (entry.tag === 'INDI') {\n            indis[pointerToId(entry.pointer)] = entry;\n        } else if (entry.tag === 'FAM') {\n            fams[pointerToId(entry.pointer)] = entry;\n        } else if (entry.pointer) {\n            other[pointerToId(entry.pointer)] = entry;\n        }\n    });\n    return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n\n/** Birthdate comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n    const indiMap = idToIndiMap(gedcom);\n    return (indiId1: string, indiId2: string) => {\n        const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n        const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n        return (\n            compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n            strcmp(indiId1, indiId2)\n        );\n    };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n    const famMap = idToFamMap(gedcom);\n    return (famId1: string, famId2: string) => {\n        const fam1: JsonFam | undefined = famMap.get(famId1);\n        const fam2: JsonFam | undefined = famMap.get(famId2);\n        return (\n            compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n            strcmp(famId1, famId2)\n        );\n    };\n}\n\n/**\n * Sorts children by birthdate in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n    fam: JsonFam,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!fam.children) {\n        return fam;\n    }\n    const newChildren = fam.children.sort(comparator);\n    return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birthdate.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = birthDatesComparator(gedcom);\n    const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n    return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n    indi: JsonIndi,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!indi.fams) {\n        return indi;\n    }\n    const newFams = indi.fams.sort(comparator);\n    return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = marriageDatesComparator(gedcom);\n    const newIndis = gedcom.indis.map((indi) =>\n        sortIndiSpouses(indi, comparator),\n    );\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is returned.\n * Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    getterFunction: (gedcom: GedcomData) => { [key: string]: GedcomEntry },\n) {\n    if (entry.data) {\n        const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n        if (dereferenced) {\n            return dereferenced;\n        }\n    }\n    return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines.\n * Supports continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n    const result = [entry.data];\n    entry.tree.forEach((subentry) => {\n        if (subentry.tag === 'CONC' && subentry.data) {\n            const last = result.length - 1;\n            result[last] += subentry.data;\n        } else if (subentry.tag === 'CONT' && subentry.data) {\n            result.push(subentry.data);\n        }\n    });\n    return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n    return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n    const lowerName = fileName.toLowerCase();\n    return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n    if (!indi.images || indi.images.length === 0) {\n        return indi;\n    }\n    const newImages: JsonImage[] = [];\n    indi.images.forEach((image) => {\n        const filePath = image.url.replaceAll('\\\\', '/');\n        const fileName = filePath.match(/[^/]*$/)![0];\n        // If the image file has been loaded into memory, use it.\n        if (images.has(filePath)) {\n            newImages.push({url: images.get(filePath)!, title: image.title});\n        } else if (images.has(fileName)) {\n            newImages.push({url: images.get(fileName)!, title: image.title});\n        } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n            newImages.push(image);\n        }\n    });\n    return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n    gedcom: JsonGedcomData,\n    images: Map<string, string>,\n): JsonGedcomData {\n    const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birthdate\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param gedcom\n * @param images Map from file name to image URL. This is used to pass in uploaded images.\n * @param allLanguages\n */\nexport function convertGedcom(\n    gedcom: string,\n    allLanguages: Language[],\n    images: Map<string, string>\n): TopolaData {\n    const entries = parseGedcom(gedcom, allLanguages);\n    const json = gedcomEntriesToJson(entries, allLanguages);\n    if (\n        !json ||\n        !json.indis ||\n        !json.indis.length ||\n        !json.fams ||\n        !json.fams.length\n    ) {\n        throw new TopolaError('GEDCOM_READ_FAILED', 'Insufficient GEDCOM data');\n    }\n    return {\n        chartData: filterImages(normalizeGedcom(json), images),\n        gedcom: prepareGedcom(entries)\n    };\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n    const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n    const notMarriedName = names.find(\n        (subEntry) =>\n            subEntry.tree.filter(\n                (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n            ).length === 0,\n    );\n    const name = notMarriedName || names[0];\n    return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n    const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n    const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')?.data;\n    return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(objectEntry: GedcomEntry): GedcomEntry | undefined {\n    return objectEntry.tree.find(\n        (entry) =>\n            entry.tag === 'FILE' &&\n            entry.data.startsWith('http') &&\n            isImageFile(entry.data),\n    );\n}\n\n/**\n * Reverts a TopolaData object to a gedcom string.\n * This is needed to export to gedcom. The original string is not for given, it could have originally come via\n * file upload, but it could have come by other data sources (url, etc.)\n * @param gedcomData\n */\nexport function jsonToGedcom(gedcomData: GedcomData): string {\n    let gedcom = \"\";\n\n    function processNode(node: GedcomEntry, level: number): void {\n        let line = `${level} `;\n        if (node.pointer) line += `${node.pointer} `;\n        line += `${node.tag}`;\n        if (node.data) line += ` ${node.data}`;\n        gedcom += line + '\\n';\n        if (node.tree && node.tree.length > 0) {\n            node.tree.forEach(child => processNode(child, level + 1));\n        }\n    }\n\n    processNode(gedcomData.head, 0);\n    gedcom += '\\n';\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag === \"SUBM\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n        if (record.tag === \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    Object.values(gedcomData.indis).forEach(indi => {\n        processNode(indi, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.fams).forEach(fam => {\n        processNode(fam, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag !== \"SUBM\" && record.tag !== \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    gedcom += \"0 TRLR\";\n    return gedcom.trim();\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFamPositionHorizontal = exports.getFamPositionVertical = exports.CompositeRenderer = void 0;\n\nconst d3_array_1 = require(\"d3-array\");\n\n/**\n * Common code for tree nodes that are composed of individual and family boxes.\n */\nlet CompositeRenderer = /** @class */ (function () {\n\n    function CompositeRenderer(options) {\n        this.options = options;\n    }\n\n    CompositeRenderer.prototype.getPreferredFamSize = function (id) {\n        // No family box in the simple renderer.\n        return [0, 0];\n    };\n\n    CompositeRenderer.prototype.setPreferredIndiSize = function (indi) {\n        let _a;\n        if (!indi) {\n            return;\n        }\n        _a = this.getPreferredIndiSize(indi.id);\n        indi.width = _a[0];\n        indi.height = _a[1];\n    };\n\n    CompositeRenderer.prototype.updateNodes = function (nodes) {\n        const _this = this;\n        // Calculate individual vertical size per depth.\n        const indiVSizePerDepth = new Map();\n        nodes.forEach(function (node) {\n            let _a;\n            _this.setPreferredIndiSize(node.data.indi);\n            _this.setPreferredIndiSize(node.data.spouse);\n            const family = node.data.family;\n            if (family) {\n                _a = _this.getPreferredFamSize(family.id);\n                family.width = _a[0];\n                family.height = _a[1];\n            }\n            const depth = node.depth;\n            const maxIndiVSize = d3_array_1.max([\n                getIndiVSize(node.data, !!_this.options.horizontal),\n                indiVSizePerDepth.get(depth),\n            ]);\n            indiVSizePerDepth.set(depth, maxIndiVSize);\n        });\n        // Set same width for each depth.\n        nodes.forEach(function (node) {\n            let _a;\n            if (_this.options.horizontal) {\n                if (node.data.indi) {\n                    node.data.indi.width = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.width = indiVSizePerDepth.get(node.depth);\n                }\n            } else {\n                if (node.data.indi) {\n                    node.data.indi.height = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.height = indiVSizePerDepth.get(node.depth);\n                }\n            }\n            const vSize = getVSize(node.data, !!_this.options.horizontal);\n            const hSize = getHSize(node.data, !!_this.options.horizontal);\n            _a = _this.options.horizontal ? [vSize, hSize] : [hSize, vSize];\n            node.data.width = _a[0];\n            node.data.height = _a[1];\n        });\n    };\n\n    CompositeRenderer.prototype.getFamilyAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_1 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const famYOffset = node.family\n                ? d3_array_1.max([-getFamPositionHorizontal(node), 0])\n                : 0;\n            const y_1 = -(node.indi && node.spouse ? node.height / 2 - node.indi.height : 0) +\n                famYOffset;\n            return [x_1, y_1];\n        }\n        const famXOffset = node.family\n            ? d3_array_1.max([-getFamPositionVertical(node), 0])\n            : 0;\n        const x = -(node.indi && node.spouse ? node.width / 2 - node.indi.width : 0) +\n            famXOffset;\n        const y = -node.height / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getSpouseAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_2 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_2 = node.indi ? node.indi.height / 2 : 0;\n            return [x_2, y_2];\n        }\n        const x = node.indi ? node.indi.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getIndiAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_3 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_3 = node.spouse ? -node.spouse.height / 2 : 0;\n            return [x_3, y_3];\n        }\n        const x = node.spouse ? -node.spouse.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    return CompositeRenderer;\n}());\nexports.CompositeRenderer = CompositeRenderer;\n\n/**\n * Returns the relative position of the family box for the vertical layout.\n */\nfunction getFamPositionVertical(node) {\n    const indiWidth = node.indi ? node.indi.width : 0;\n    const spouseWidth = node.spouse ? node.spouse.width : 0;\n    const familyWidth = node.family.width;\n    if (!node.indi || !node.spouse || indiWidth + spouseWidth <= familyWidth) {\n        return (indiWidth + spouseWidth - familyWidth) / 2;\n    }\n    if (familyWidth / 2 >= spouseWidth) {\n        return indiWidth + spouseWidth - familyWidth;\n    }\n    if (familyWidth / 2 >= indiWidth) {\n        return 0;\n    }\n    return indiWidth - familyWidth / 2;\n}\nexports.getFamPositionVertical = getFamPositionVertical;\n\n/**\n * Returns the relative position of the family box for the horizontal layout.\n */\nfunction getFamPositionHorizontal(node) {\n    const indiHeight = node.indi ? node.indi.height : 0;\n    const spouseHeight = node.spouse ? node.spouse.height : 0;\n    const familyHeight = node.family.height;\n    if (!node.indi || !node.spouse) {\n        return (indiHeight + spouseHeight - familyHeight) / 2;\n    }\n    return indiHeight - familyHeight / 2;\n}\nexports.getFamPositionHorizontal = getFamPositionHorizontal;\n\n/** Returns the horizontal size. */\nfunction getHSize(node, horizontal) {\n    if (horizontal) {\n        return ((node.indi ? node.indi.height : 0) +\n            (node.spouse ? node.spouse.height : 0));\n    }\n    const indiHSize = (node.indi ? node.indi.width : 0) + (node.spouse ? node.spouse.width : 0);\n    return d3_array_1.max([indiHSize, node.family ? node.family.width : 0]);\n}\n\nfunction getFamVSize(node, horizontal) {\n    if (horizontal) {\n        return node.family ? node.family.width : 0;\n    }\n    return node.family ? node.family.height : 0;\n}\n\n/** Returns the vertical size of individual boxes. */\nfunction getIndiVSize(node, horizontal) {\n    if (horizontal) {\n        return d3_array_1.max([\n            node.indi ? node.indi.width : 0,\n            node.spouse ? node.spouse.width : 0,\n        ]);\n    }\n    return d3_array_1.max([\n        node.indi ? node.indi.height : 0,\n        node.spouse ? node.spouse.height : 0,\n    ]);\n}\n\n/** Returns the vertical size. */\nfunction getVSize(node, horizontal) {\n    return getIndiVSize(node, horizontal) + getFamVSize(node, horizontal);\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonDataProvider = void 0;\n/** Details of an individual based on Json input. */\nvar JsonIndiDetails = /** @class */ (function () {\n    function JsonIndiDetails(json) {\n        this.json = json;\n    }\n    JsonIndiDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonIndiDetails.prototype.isEgo = function () {\n        return this.json.isEgo;\n    };\n    JsonIndiDetails.prototype.getFamiliesAsSpouse = function () {\n        return this.json.fams || [];\n    };\n    JsonIndiDetails.prototype.getFamilyAsChild = function () {\n        return this.json.famc || null;\n    };\n    JsonIndiDetails.prototype.getFirstName = function () {\n        return this.json.firstName || null;\n    };\n    JsonIndiDetails.prototype.getLastName = function () {\n        // Check if this.json and this.json.lastName exist and are valid before calling toUpperCase()\n        if (this.json.lastName) {\n            return this.json.lastName.toUpperCase();\n        }\n        return null;\n    };\n    JsonIndiDetails.prototype.getBirthDate = function () {\n        return this.json.birth || null;\n    };\n    JsonIndiDetails.prototype.getMaidenName = function () {\n        return this.json.maidenName || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfChildren = function () {\n        return this.json.numberOfChildren || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfMarriages = function () {\n        return this.json.numberOfMarriages || null;\n    };\n    JsonIndiDetails.prototype.getBirthPlace = function () {\n        return (this.json.birth && this.json.birth.place) || null;\n    };\n    JsonIndiDetails.prototype.getDeathDate = function () {\n        return this.json.death || null;\n    };\n    JsonIndiDetails.prototype.getDeathPlace = function () {\n        return (this.json.death && this.json.death.place) || null;\n    };\n    JsonIndiDetails.prototype.isConfirmedDeath = function () {\n        return !!this.json.death && !!this.json.death.confirmed;\n    };\n    JsonIndiDetails.prototype.getSex = function () {\n        return this.json.sex || null;\n    };\n    JsonIndiDetails.prototype.getLanguages = function () {\n        return this.json.languages || [];\n    };\n    JsonIndiDetails.prototype.getLanguagesLabel = function () {\n        const abbreviations = this.json.languages.map(lang => lang.abbreviation);\n        return abbreviations.length > 0 ? `${abbreviations.join(', ')}` : null;\n    };\n    JsonIndiDetails.prototype.getEthnicity = function () {\n        return this.json.ethnicity || null;\n    };\n    JsonIndiDetails.prototype.getTribe = function () {\n        return this.json.tribe || null;\n    };\n    JsonIndiDetails.prototype.getImageUrl = function () {\n        return ((this.json.images &&\n            this.json.images.length > 0 &&\n            this.json.images[0].url) ||\n            null);\n    };\n    JsonIndiDetails.prototype.getImages = function () {\n        return this.json.images || [];\n    };\n    JsonIndiDetails.prototype.getNotes = function () {\n        return this.json.notes || [];\n    };\n    JsonIndiDetails.prototype.getEvents = function () {\n        return this.json.events || [];\n    };\n    JsonIndiDetails.prototype.showLanguages = function () {\n        return !this.json.hideLanguages;\n    };\n    JsonIndiDetails.prototype.showEthnicity = function () {\n        return !this.json.hideEthnicity;\n    };\n    JsonIndiDetails.prototype.showId = function () {\n        return !this.json.hideId;\n    };\n    JsonIndiDetails.prototype.showSex = function () {\n        return !this.json.hideSex;\n    };\n    return JsonIndiDetails;\n}());\n/** Details of a family based on Json input. */\nvar JsonFamDetails = /** @class */ (function () {\n    function JsonFamDetails(json) {\n        this.json = json;\n    }\n    JsonFamDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonFamDetails.prototype.getFather = function () {\n        return this.json.husb || null;\n    };\n    JsonFamDetails.prototype.getMother = function () {\n        return this.json.wife || null;\n    };\n    JsonFamDetails.prototype.getChildren = function () {\n        return this.json.children || [];\n    };\n    JsonFamDetails.prototype.getMarriageDate = function () {\n        return this.json.marriage || null;\n    };\n    JsonFamDetails.prototype.getMarriagePlace = function () {\n        return (this.json.marriage && this.json.marriage.place) || null;\n    };\n    return JsonFamDetails;\n}());\n/** Implementation of the DataProvider interface based on Json input. */\nvar JsonDataProvider = /** @class */ (function () {\n    function JsonDataProvider(json) {\n        var _this = this;\n        this.json = json;\n        this.indis = new Map();\n        this.fams = new Map();\n        json.indis.forEach(function (indi) {\n            return _this.indis.set(indi.id, new JsonIndiDetails(indi));\n        });\n        json.fams.forEach(function (fam) { return _this.fams.set(fam.id, new JsonFamDetails(fam)); });\n    }\n    JsonDataProvider.prototype.getIndi = function (id) {\n        return this.indis.get(id) || null;\n    };\n    JsonDataProvider.prototype.getFam = function (id) {\n        return this.fams.get(id) || null;\n    };\n    return JsonDataProvider;\n}());\nexports.JsonDataProvider = JsonDataProvider;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDateOrRange = exports.formatDate = void 0;\n/** Month in English is used as fallback if a requested translation is not found. */\nvar MONTHS_EN = new Map([\n    [1, 'Jan'],\n    [2, 'Feb'],\n    [3, 'Mar'],\n    [4, 'Apr'],\n    [5, 'May'],\n    [6, 'Jun'],\n    [7, 'Jul'],\n    [8, 'Aug'],\n    [9, 'Sep'],\n    [10, 'Oct'],\n    [11, 'Nov'],\n    [12, 'Dec'],\n]);\n/** Translations of the GEDCOM date qualifiers. */\nvar QUALIFIERS_I18N = new Map([\n    [\n        'cs',\n        new Map([\n            ['cal', 'vypočt.'],\n            ['abt', 'o'],\n            ['est', 'ocenil'],\n            ['before', 'před'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'de',\n        new Map([\n            ['cal', 'errech.'],\n            ['abt', 'etwa'],\n            ['est', 'geschät.'],\n            ['before', 'vor'],\n            ['after', 'nach'],\n        ]),\n    ],\n    [\n        'fr',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'vers'],\n            ['est', 'est.'],\n            ['before', 'avant'],\n            ['after', 'après'],\n        ]),\n    ],\n    [\n        'it',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'circa il'],\n            ['est', 'stim.'],\n            ['before', 'prima del'],\n            ['after', 'dopo del'],\n        ]),\n    ],\n    [\n        'pl',\n        new Map([\n            ['cal', 'wyl.'],\n            ['abt', 'ok.'],\n            ['est', 'szac.'],\n            ['before', 'przed'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'ru',\n        new Map([\n            ['cal', 'выч.'],\n            ['abt', 'ок.'],\n            ['est', 'оцен.'],\n            ['before', 'до'],\n            ['after', 'после'],\n        ]),\n    ],\n]);\nvar shortMonthCache = new Map();\nfunction getShortMonth(month, locale) {\n    if (!Intl || !Intl.DateTimeFormat) {\n        return MONTHS_EN.get(month);\n    }\n    var cacheKey = month + \"|\" + (locale || '');\n    if (shortMonthCache.has(cacheKey)) {\n        return shortMonthCache.get(cacheKey);\n    }\n    var result = new Intl.DateTimeFormat(locale, { month: 'short' }).format(new Date(2000, month - 1));\n    shortMonthCache.set(cacheKey, result);\n    return result;\n}\nfunction getQualifier(qualifier, locale) {\n    var language = locale && locale.split(/[-_]/)[0];\n    var languageMap = language && QUALIFIERS_I18N.get(language);\n    return languageMap ? languageMap.get(qualifier) : qualifier;\n}\n/**\n * Formats the date consisting of day, month and year.\n * All parts of the date are optional.\n */\nfunction formatDateOnly(day, month, year, locale) {\n    if (!day && !month && !year) {\n        return '';\n    }\n    // Fall back to formatting the date manually in case of\n    // - locale not provided\n    // - English (to avoid formatting like 'Oct 11, 2009')\n    // - Lack of i18n support in the browser\n    if (!Intl || !Intl.DateTimeFormat || !locale || locale === 'en') {\n        return [day, month && getShortMonth(month, locale), year].join(' ');\n    }\n    var format = {\n        day: day ? 'numeric' : undefined,\n        month: month ? 'short' : undefined,\n        year: year ? 'numeric' : undefined,\n    };\n    return new Intl.DateTimeFormat(locale, format).format(new Date(year !== null && year !== void 0 ? year : 2000, month ? month - 1 : 1, day !== null && day !== void 0 ? day : 1));\n}\n/** Simple date formatter. */\nfunction formatDate(date, locale) {\n    return [\n        date.qualifier && getQualifier(date.qualifier, locale),\n        formatDateOnly(date.day, date.month, date.year, locale),\n        date.text,\n    ].join(' ');\n}\nexports.formatDate = formatDate;\n/** Formats a DateOrRange object. */\nfunction formatDateOrRange(dateOrRange, locale) {\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, locale);\n    }\n    if (!dateOrRange.dateRange) {\n        return '';\n    }\n    var from = dateOrRange.dateRange.from && formatDate(dateOrRange.dateRange.from);\n    var to = dateOrRange.dateRange.to && formatDate(dateOrRange.dateRange.to);\n    if (from && to) {\n        return from + \" .. \" + to;\n    }\n    if (from) {\n        return getQualifier('after', locale) + \" \" + from;\n    }\n    if (to) {\n        return getQualifier('before', locale) + \" \" + to;\n    }\n    return '';\n}\nexports.formatDateOrRange = formatDateOrRange;\n","var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\n\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"array-flat-polyfill\");\n__exportStar(require(\"./ancestor-chart\"), exports);\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./chart-util\"), exports);\n__exportStar(require(\"./composite-renderer\"), exports);\n__exportStar(require(\"./data\"), exports);\n__exportStar(require(\"./date-format\"), exports);\n__exportStar(require(\"./descendant-chart\"), exports);\n__exportStar(require(\"./detailed-renderer\"), exports);\n__exportStar(require(\"./gedcom\"), exports);\n__exportStar(require(\"./hourglass-chart\"), exports);\n__exportStar(require(\"./relatives-chart\"), exports);\n__exportStar(require(\"./simple-api\"), exports);\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChartColors = void 0;\nlet ChartColors;\n(function (ChartColors) {\n    ChartColors[ChartColors[\"NO_COLOR\"] = 0] = \"NO_COLOR\";\n    ChartColors[ChartColors[\"COLOR_BY_GENERATION\"] = 1] = \"COLOR_BY_GENERATION\";\n    ChartColors[ChartColors[\"COLOR_BY_SEX\"] = 2] = \"COLOR_BY_SEX\";\n    ChartColors[ChartColors[\"COLOR_BY_ETHNICITY\"] = 3] = \"COLOR_BY_ETHNICITY\";\n    ChartColors[ChartColors[\"COLOR_BY_NR_LANGUAGES\"] = 4] = \"COLOR_BY_NR_LANGUAGES\";\n    ChartColors[ChartColors[\"COLOR_BY_LANGUAGE\"] = 5] = \"COLOR_BY_LANGUAGE\";\n})\n// eslint-disable-next-line\n(ChartColors = exports.ChartColors || (exports.ChartColors = {}));\n","var __extends = (this && this.__extends) || (function () {\n    let extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({__proto__: []} instanceof Array && function (d, b) {\n                d.__proto__ = b;\n            }) ||\n            function (d, b) {\n                for (const p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n            };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        if (b === null) {\n            d.prototype = Object.create(b);\n        } else {\n            __.prototype = b.prototype;  // Set the prototype of __ to b's prototype\n            d.prototype = new __();      // Create a new instance of __ to set as d's prototype\n        }\n    };\n})();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedRenderer = exports.getLength = void 0;\n\nvar chart_util_1 = require(\"./chart-util\");\nconst d3_selection_1 = require(\"d3-selection\");\nconst _1 = require(\"./index\");\nconst date_format_1 = require(\"./date-format\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\nconst composite_renderer_1 = require(\"./composite-renderer\");\nconst INDI_MIN_HEIGHT = 44;\nconst INDI_MIN_WIDTH = 64;\nconst FAM_MIN_HEIGHT = 10;\nconst FAM_MIN_WIDTH = 15;\nconst IMAGE_WIDTH = 70;\n\n/** Minimum box height when an image is present. */\nconst IMAGE_HEIGHT = 90;\nconst ETHNICITY_HEIGHT = 17;\nconst LANGUAGES_HEIGHT = 17;\nconst DETAILS_HEIGHT = 17;\nconst ANIMATION_DELAY_MS = 200;\nconst ANIMATION_DURATION_MS = 500;\nconst textLengthCache = new Map();\n\n/** Calculates the length of the given text in pixels when rendered. */\nfunction getLength(text, textClass) {\n    const cacheKey = text + '|' + textClass;\n    if (textLengthCache.has(cacheKey)) {\n        return textLengthCache.get(cacheKey);\n    }\n    const g = d3_selection_1.select(\"svg\").append('g').attr(\"class\", \"detailed node\");\n    const x = g.append(\"text\").attr(\"class\", textClass).text(text);\n    const length = x.node().getComputedTextLength();\n    g.remove();\n    textLengthCache.set(cacheKey, length);\n    return length;\n}\nexports.getLength = getLength;\n\nconst SEX_SYMBOLS = new Map([\n    ['F', '\\u2640'],\n    ['M', '\\u2642'],\n]);\n\n/**\n * Renders some details about a person such as date and place of birth\n * and death.\n */\nvar DetailedRenderer = /** @class */ (function (_super) {\n    __extends(DetailedRenderer, _super);\n\n    function DetailedRenderer(options) {\n        var _this = _super.call(this, options) || this;\n        _this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n        return _this;\n    }\n\n    DetailedRenderer.prototype.getColoringClass = function () {\n        switch (this.options.colors) {\n            case _1.ChartColors.NO_COLOR:\n                return \"nocolor\";\n            case _1.ChartColors.COLOR_BY_GENERATION:\n                return \"bygeneration\";\n            case _1.ChartColors.COLOR_BY_SEX:\n                return \"bysex\";\n            case _1.ChartColors.COLOR_BY_ETHNICITY:\n                return \"byethnicity\";\n            case _1.ChartColors.COLOR_BY_NR_LANGUAGES:\n                return \"bylanguages\";\n            case _1.ChartColors.COLOR_BY_LANGUAGE:\n                return \"bylanguages\";\n            default:\n                return \"bygeneration\";\n        }\n    };\n\n    /** Extracts lines of details for a person. */\n    DetailedRenderer.prototype.getIndiDetails = function (indi) {\n        const detailsList = [];\n        const birthDate = indi.getBirthDate() && date_format_1.formatDateOrRange(indi.getBirthDate(), this.options.locale);\n        const birthPlace = indi.getBirthPlace();\n        const deathDate = indi.getDeathDate() && date_format_1.formatDateOrRange(indi.getDeathDate(), this.options.locale);\n        const deathPlace = indi.getDeathPlace();\n        if (birthDate) {\n            detailsList.push({ symbol: '', text: birthDate });\n        }\n        if (birthPlace) {\n            detailsList.push({ symbol: '', text: birthPlace });\n        }\n        if (birthDate || birthPlace) {\n            detailsList[0].symbol = '*';\n        }\n        const listIndex = detailsList.length;\n        if (deathDate) {\n            detailsList.push({ symbol: '', text: deathDate });\n        }\n        if (deathPlace) {\n            detailsList.push({ symbol: '', text: deathPlace });\n        }\n        if (deathDate || deathPlace) {\n            detailsList[listIndex].symbol = '+';\n        }\n        else if (indi.isConfirmedDeath()) {\n            detailsList.push({ symbol: '+', text: '' });\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredIndiSize = function (id) {\n        // Height\n        const indi = this.options.data.getIndi(id);\n        const details = this.getIndiDetails(indi);\n        const ethnicityHeight = indi.showEthnicity() && indi.getEthnicity() != null ? ETHNICITY_HEIGHT : 0;\n        const languagesHeight = indi.showLanguages() && indi.getLanguages().length > 0 ? LANGUAGES_HEIGHT : 0;\n        const idAndSexHeight = indi.showId() || indi.showSex() ? DETAILS_HEIGHT : 0;\n        const height = d3_array_1.max([\n            INDI_MIN_HEIGHT + languagesHeight + ethnicityHeight + (details.length * DETAILS_HEIGHT) + idAndSexHeight,\n            indi.getImageUrl() ? IMAGE_HEIGHT : 0,\n        ]);\n        // Width\n        const maxDetailsWidth = d3_array_1.max(details.map(detail => getLength(detail.text, \"details\")));\n        const width = d3_array_1.max([\n            maxDetailsWidth + 22,\n            getLength(indi.getFirstName() || '', \"name\") + 8,\n            getLength(indi.getLastName() || '', \"name\") + 8,\n            indi.showLanguages() && indi.getLanguages().length > 0 ? (getLength(indi.getLanguagesLabel(), \"languages\") + 28) : 0,\n            indi.showEthnicity() && indi.getEthnicity() != null ? (getLength(indi.getEthnicity(), \"ethnicity\") + 28) : 0,\n            getLength(id, \"id\") + 32,\n            INDI_MIN_WIDTH,\n        ]) + (indi.getImageUrl() ? IMAGE_WIDTH : 0);\n        return [width, height];\n    };\n\n    /** Extracts lines of details for a family. */\n    DetailedRenderer.prototype.getFamDetails = function (fam) {\n        const detailsList = [];\n        const marriageDate = fam.getMarriageDate() &&\n            date_format_1.formatDateOrRange(fam.getMarriageDate(), this.options.locale);\n        const marriagePlace = fam.getMarriagePlace();\n        if (marriageDate) {\n            detailsList.push({ symbol: '', text: marriageDate });\n        }\n        if (marriagePlace) {\n            detailsList.push({ symbol: '', text: marriagePlace });\n        }\n        if (marriageDate || marriagePlace) {\n            detailsList[0].symbol = '\\u26AD';\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredFamSize = function (id) {\n        const fam = this.options.data.getFam(id);\n        const details = this.getFamDetails(fam);\n        const height = d3_array_1.max([10 + details.length * DETAILS_HEIGHT, FAM_MIN_HEIGHT]);\n        const maxDetailsWidth = d3_array_1.max(details.map(function (x) { return getLength(x.text, \"details\"); }));\n        const width = d3_array_1.max([maxDetailsWidth + 22, FAM_MIN_WIDTH]);\n        return [width, height];\n    };\n\n    let indisToStroke = []\n    DetailedRenderer.prototype.render = function (enter, update) {\n        const _this = this;\n        enter = enter.append('g').attr(\"class\", \"detailed\");\n        update = update.select('g');\n\n        indisToStroke = []\n        const indiUpdate = enter\n            .merge(update)\n            .selectAll(\"g.indi\")\n            .data(function (node) {\n                const result = [];\n                const famXOffset = !_this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionVertical(node.data), 0])\n                    : 0;\n                const famYOffset = _this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionHorizontal(node.data), 0])\n                    : 0;\n                if (node.data.indi) {\n                    indisToStroke.push(node.data.indi)\n                    node.data.indi.hiddenRelatives = node.data.hiddenRelatives;\n                    result.push({\n                        indi: node.data.indi,\n                        generation: node.data.generation,\n                        xOffset: famXOffset,\n                        yOffset: 0\n                    });\n                }\n                if (node.data.spouse) {\n                    indisToStroke.push(node.data.spouse)\n                    result.push({\n                        indi: node.data.spouse,\n                        generation: node.data.generation,\n                        xOffset: !_this.options.horizontal && node.data.indi ? node.data.indi.width + famXOffset : 0,\n                        yOffset: _this.options.horizontal && node.data.indi ? node.data.indi.height + famYOffset : 0\n                    });\n                }\n                return result;\n        }, function (data) { return data.indi.id; });\n\n        // dash the stroke of indis having non-visible relatives\n        this.util.markHiddenRelatives(indisToStroke, this.options.data)\n\n        const indiEnter = indiUpdate\n            .enter()\n            .append('g')\n            .attr(\"class\", \"indi\");\n        this.transition(indiEnter.merge(indiUpdate)).attr(\"transform\", function (node) {\n            return \"translate(\" + node.xOffset + \", \" + node.yOffset + \")\";\n        });\n        this.renderIndi(indiEnter, indiUpdate);\n\n        const familyEnter = enter.select(function (node) {\n            return node.data.family ? this : null;\n        }).append('g').attr(\"class\", \"family\");\n        const familyUpdate = update.select(function (node) {\n            return node.data.family ? this : null;\n        }).select(\"g.family\");\n        this.transition(familyEnter.merge(familyUpdate)).attr(\"transform\", function (node) {\n            return _this.getFamTransform(node.data);\n        });\n        this.renderFamily(familyEnter);\n    };\n\n    DetailedRenderer.prototype.getCss = function () {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"./styles/detailed-renderer.css\", false);\n        try {\n            xhr.send();\n            if (xhr.status === 200) {\n                const cssCode = xhr.responseText\n                return cssCode;\n            } else {\n                throw new Error(\"Failed to load CSS file:\" + xhr.statusText);\n            }\n        } catch (error) {\n            console.error(\"Error occurred while loading CSS:\", error);\n            return null;\n        }\n    };\n\n    DetailedRenderer.prototype.transition = function (selection) {\n        return this.options.animate\n            ? selection\n                .transition()\n                .delay(ANIMATION_DELAY_MS)\n                .duration(ANIMATION_DURATION_MS)\n            : selection;\n    };\n\n    DetailedRenderer.prototype.getFamTransform = function (node) {\n        if (this.options.horizontal) {\n            return \"translate(\"\n                + ((node.indi && node.indi.width) || node.spouse.width) + \", \"\n                + d3_array_1.max([composite_renderer_1.getFamPositionHorizontal(node), 0])\n                + \")\";\n        }\n        return \"translate(\"\n            + d3_array_1.max([composite_renderer_1.getFamPositionVertical(node), 0]) + \", \"\n            + ((node.indi && node.indi.height) || node.spouse.height)\n            + \")\";\n    };\n\n    DetailedRenderer.prototype.getSexClass = function (indiId) {\n        let _a;\n        const sex = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getSex();\n        switch (sex) {\n            case 'M':\n                return \"male\";\n            case 'F':\n                return \"female\";\n            default:\n                break;\n        }\n    };\n\n    const ethnicityCss = new Map();\n    DetailedRenderer.prototype.getEthnicityClass = function (indiId) {\n        if (ethnicityCss.size === 0) {\n            this.buildEthnicityMap()\n        }\n        let _a;\n        const ethnicity = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getEthnicity();\n        if (ethnicity) {\n            return ethnicityCss.get(ethnicity);\n        }\n        return ''  // Blank if no ethnicity\n    };\n\n    DetailedRenderer.prototype.buildEthnicityMap = function () {\n        try {\n            // Assign the ethnicity of the ego as eth0\n            if (!ethnicityCss.has(\"eth0\")) {\n                const egoEthnicity = Array.from(this.options.data.indis?.values() || []).find(indi => indi.isEgo())?.json.ethnicity\n                if (egoEthnicity) {\n                    ethnicityCss.set(egoEthnicity, \"ego\")\n                }\n            }\n            ethnicityCss.set(\"Blanco\", \"blanco\")\n            ethnicityCss.set(\"Afroamerican\", \"afroamerican\")\n            // Assign the ethnicities of the the rest individuals\n            Array.from(this.options.data.indis?.values() || [])\n                .filter(indi => indi.getEthnicity() != null)\n                .forEach(indi => {\n                    const ethnicity = indi.getEthnicity()\n                    if (!ethnicityCss.has(ethnicity)) {\n                        // Might be a tree with no ego individual. Then there is no eth0\n                        const classNum = Object.keys(ethnicityCss).find(k => ethnicityCss[k] === \"ego\") ? ethnicityCss.size : ethnicityCss.size + 1\n                        ethnicityCss.set(ethnicity, \"eth\" + classNum)\n                    }\n                    if (ethnicityCss.size > 14) {\n                        throw new Error(\"No CSS for more than 14 different ethnicities\")\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    DetailedRenderer.prototype.getSelectedStroke = function (indiId) {\n        if (this.options.startIndi && this.options.startIndi === indiId) {\n            return 'selected-stroke'\n        }\n    }\n\n    DetailedRenderer.prototype.getLanguagesClass = function (indiId, selectedLanguageId) {\n        let _a;\n        const languages = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getLanguages();\n        if (selectedLanguageId != null) {\n            // By specific language\n            const hasSelectedLanguage = languages.some(language => language.id === selectedLanguageId);\n            if (hasSelectedLanguage) {\n                return \"l\" + selectedLanguageId;\n            }\n        } else {\n            // By nr. languages\n            return languages.length > 0 ? 'n' + Math.min(languages.length, 7) : '';\n        }\n        return '' // Blank if no language\n    }\n\n    DetailedRenderer.prototype.resetCss = function () {\n        ethnicityCss.clear()\n        console.log(\"Cleared CSS maps\")\n    }\n\n    DetailedRenderer.prototype.renderIndi = function (enter, update) {\n        const _this = this;\n\n        if (this.options.indiHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr(\"href\", function (data) { return _this.options.indiHrefFunc(data.indi.id); });\n            update = update.select('a');\n        }\n\n        if (this.options.indiCallback) {\n            enter.on(\"click\", function (event, data) {\n                return _this.options.indiCallback({\n                    id: data.indi.id,\n                    generation: data.generation,\n                });\n            });\n        }\n\n        // Background\n        const background = enter\n            .append(\"rect\")\n            .attr(\"rx\", 5)\n            .attr(\"stroke-width\", 0)\n            .attr(\"class\", function (node) {\n                return \"background \"\n                    + _this.getColoringClass() + \" \"\n                    + _this.getSexClass(node.indi.id) + \" \"\n                    + _this.getEthnicityClass(node.indi.id) + \" \"\n                    + _this.getLanguagesClass(node.indi.id, _this.options.selectedLanguage) + \" \"\n\n            })\n            .merge(update.select(\"rect.background\"));\n\n        this.transition(background)\n            .attr(\"width\", function (node) { return node.indi.width; })\n            .attr(\"height\", function (node) { return node.indi.height; });\n\n        // Clip path\n        const getClipId = function (id) {\n            return \"clip-\" + id;\n        };\n        enter\n            .append(\"clipPath\")\n            .attr(\"id\", function (node) { return getClipId(node.indi.id); })\n            .append(\"rect\")\n            .attr(\"rx\", 5)\n            .merge(update.select(\"clipPath rect\"))\n            .attr(\"width\", function (node) { return node.indi.width; })\n            .attr(\"height\", function (node) { return node.indi.height; });\n        const getIndi = function (data) {\n            return _this.options.data.getIndi(data.indi.id);\n        };\n        const getDetailsWidth = function (data) {\n            return data.indi.width - (getIndi(data).getImageUrl() ? IMAGE_WIDTH : 0);\n        };\n\n        // Name\n        enter\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"class\", \"name\")\n            .attr(\"transform\", function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 17)\"; })\n            .text(function (node) { return getIndi(node).getFirstName(); });\n        enter\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"class\", \"name\")\n            .attr(\"transform\", function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 33)\"; })\n            .text(function (node) { return getIndi(node).getLastName(); })\n\n        // Languages\n        const languages = enter\n            .filter(function (node) {\n                return getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0\n            })\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"class\", \"languages\")\n            .text(function (node) {\n                return getIndi(node).getLanguagesLabel()\n            });\n        this.transition(languages).attr(\"transform\", function (node) {\n            // if the indi does not have languages to show, the height start does not apply\n            const languages_height_start =  getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0 ? 52 : null\n            return \"translate(\" + getDetailsWidth(node) / 2 + \", \" + languages_height_start + \")\";\n        });\n\n        // Ethnicity\n        const ethnicity = enter\n            .filter(function (node) {\n                return getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null\n            })\n            .append(\"text\")\n            .attr(\"class\", \"ethnicity\")\n            .text(function (node) {\n                return '¤ ' + getIndi(node).getEthnicity()\n            });\n        this.transition(ethnicity).attr(\"transform\", function (node) {\n            let ethnicity_height_start =  null\n            if (getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) {\n                ethnicity_height_start = 71\n            } else if (getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) {\n                ethnicity_height_start = 55\n            }\n            return \"translate(5, \" + ethnicity_height_start + \")\";\n        });\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const indi = getIndi(node);\n            const detailsList = _this.getIndiDetails(indi);\n            details.set(node.indi.id, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        function details_height_start(node) {\n            return 55\n                + ((getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) ? LANGUAGES_HEIGHT : 0)\n                + ((getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) ? ETHNICITY_HEIGHT : 0)\n        }\n\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.indi.id).length > i;\n            });\n\n            lineGroup\n                .append(\"text\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", function (node) {\n                    return \"translate(9, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].symbol;\n                });\n            lineGroup\n                .append(\"text\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", function (node) {\n                    return \"translate(15, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n\n        // Render id\n        const id = enter\n            .append(\"text\")\n            .attr(\"class\", \"id\")\n            .text(function (node) {\n                return (getIndi(node).showId() ? node.indi.id : '');\n            })\n            .merge(update.select(\"text.id\"));\n        this.transition(id).attr(\"transform\", function (node) { return \"translate(9, \" + (node.indi.height - 5) + \")\"; });\n\n        // Render sex\n        const sex = enter\n            .append(\"text\")\n            .attr(\"class\", \"details sex\")\n            .attr(\"text-anchor\", \"end\")\n            .text(function (node) {\n                const sexSymbol = SEX_SYMBOLS.get(getIndi(node).getSex() || '') || '';\n                return getIndi(node).showSex() ? sexSymbol : '';\n            })\n            .merge(update.select(\"text.sex\"));\n        this.transition(sex).attr(\"transform\", function (node) {\n            return \"translate(\" + (getDetailsWidth(node) - 5) + \", \" + (node.indi.height - 5) + \")\";\n        });\n\n        // Image\n        enter.filter(function (node) { return !!getIndi(node).getImageUrl(); })\n            .append(\"image\")\n            .attr(\"width\", IMAGE_WIDTH)\n            .attr(\"height\", function (node) { return node.indi.height; })\n            .attr(\"preserveAspectRatio\", \"xMidYMin\")\n            .attr(\"transform\", function (node) { return \"translate(\" + (node.indi.width - IMAGE_WIDTH) + \", 0)\"; })\n            .attr(\"clip-path\", function (node) { return \"url(#\" + getClipId(node.indi.id) + \")\"; })\n            .attr(\"href\", function (node) { return getIndi(node).getImageUrl(); });\n\n        // Border on top\n        const border = enter\n            .append(\"rect\")\n            .attr(\"rx\", 5)\n            .attr(\"fill-opacity\", 0)\n            .attr(\"class\", function (node) {\n                return _this.getSelectedStroke(node.indi.id);\n            })\n            .attr(\"stroke-dasharray\", function (node) {\n                if (node.indi.hiddenRelatives) {\n                    return \"5, 5\"\n                } else {\n                    return \"0, 0\"\n                }\n            })\n            .merge(update.select(\"rect.border\"));\n        this.transition(border)\n            .attr(\"width\", function (node) { return node.indi.width; })\n            .attr(\"height\", function (node) { return node.indi.height; });\n    };\n\n    DetailedRenderer.prototype.renderFamily = function (enter) {\n        const _this = this;\n\n        if (this.options.famHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr(\"href\", function (node) {\n                return _this.options.famHrefFunc(node.data.family.id);\n            });\n        }\n\n        if (this.options.famCallback) {\n            enter.on(\"click\", function (event, node) {\n                return _this.options.famCallback({\n                    id: node.data.family.id,\n                    generation: node.data.generation,\n                });\n            });\n        }\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const famId = node.data.family.id;\n            const fam = _this.options.data.getFam(famId);\n            const detailsList = _this.getFamDetails(fam);\n            details.set(famId, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        // Box\n        enter.filter(function (node) {\n                const detail = details.get(node.data.family.id);\n                return 0 < detail.length;\n        }).append(\"rect\")\n        .attr(\"class\", this.getColoringClass())\n        .attr(\"rx\", 5)\n        .attr(\"ry\", 5)\n        .attr(\"width\", function (node) { return node.data.family.width; })\n        .attr(\"height\", function (node) { return node.data.family.height; });\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.data.family.id).length > i;\n            });\n            lineGroup\n                .append(\"text\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", \"translate(9, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].symbol;\n                });\n            lineGroup\n                .append(\"text\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", \"translate(15, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n    };\n\n    return DetailedRenderer;\n}(composite_renderer_1.CompositeRenderer));\nexports.DetailedRenderer = DetailedRenderer;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.gedcomEntriesToJson = exports.gedcomToJson = exports.getDate = void 0;\nconst parse_gedcom_1 = require(\"parse-gedcom\");\n\n/** Returns the first entry with the given tag or undefined if not found. */\nfunction findTag(tree, tag) {\n    return tree.find(function (entry) { return entry.tag === tag; });\n}\n\n/** Returns all entries with the given tag. */\nfunction findTags(tree, tag) {\n    return tree.filter(function (entry) { return entry.tag === tag; });\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer) {\n    return pointer.substring(1, pointer.length - 1);\n}\n\n/** Extracts the first and last name from a GEDCOM name field. */\nfunction extractName(name) {\n    const arr = name.split('/');\n    if (arr.length === 1) {\n        return { firstName: arr[0].trim() };\n    }\n    return { firstName: arr[0].trim(), lastName: arr[1].trim() };\n}\n\n/** Maps month abbreviations used in GEDCOM to month numbers. */\nconst MONTHS = new Map([\n    ['jan', 1],\n    ['feb', 2],\n    ['mar', 3],\n    ['apr', 4],\n    ['may', 5],\n    ['jun', 6],\n    ['jul', 7],\n    ['aug', 8],\n    ['sep', 9],\n    ['oct', 10],\n    ['nov', 11],\n    ['dec', 12],\n]);\n\n/** Parses the GEDCOM date into the Date structure. */\nfunction parseDate(parts) {\n    let lastPart;\n    if (!parts || !parts.length) {\n        return undefined;\n    }\n    const result = {};\n    // Remove parentheses if they surround the text\n    if (parts[0].startsWith('(') && parts[parts.length - 1].endsWith(')')) {\n        parts[0] = parts[0].substring(1);\n        lastPart = parts[parts.length - 1];\n        parts[parts.length - 1] = lastPart.substring(0, lastPart.length - 1);\n    }\n    const fullText = parts.join(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart === 'cal' || firstPart === 'abt' || firstPart === 'est') {\n        result.qualifier = firstPart;\n        parts = parts.slice(1);\n    }\n    if (parts.length && parts[parts.length - 1].match(/^\\d{1,4}$/)) {\n        result.year = Number(parts[parts.length - 1]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        lastPart = parts[parts.length - 1].toLowerCase();\n        if (MONTHS.has(lastPart)) {\n            result.month = MONTHS.get(lastPart);\n            parts = parts.slice(0, parts.length - 1);\n        }\n    }\n    if (parts.length && parts[0].match(/^\\d\\d?$/)) {\n        result.day = Number(parts[0]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        // A part didn't get parsed. Return the whole text verbatim.\n        return { text: fullText };\n    }\n    return result;\n}\n\n/** Parses a GEDCOM date or date range. */\nfunction getDate(gedcomDate) {\n    const parts = gedcomDate.replace(/@.*@/, '').trim().split(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart.startsWith('bet')) {\n        const i = parts.findIndex(function (x) {\n            return x.toLowerCase() === 'and';\n        });\n        const from = parseDate(parts.slice(1, i));\n        const to = parseDate(parts.slice(i + 1));\n        return { dateRange: { from: from, to: to } };\n    }\n    if (firstPart.startsWith('bef') || firstPart.startsWith('aft')) {\n        const date_1 = parseDate(parts.slice(1));\n        if (firstPart.startsWith('bef')) {\n            return { dateRange: { to: date_1 } };\n        }\n        return { dateRange: { from: date_1 } };\n    }\n    const date = parseDate(parts);\n    if (date) {\n        return { date: date };\n    }\n    return undefined;\n}\nexports.getDate = getDate;\n\n/**\n * Tries to treat an input tag as NOTE and parse all lines of notes\n */\nfunction createNotes(notesTag) {\n    if (!notesTag || notesTag.tag !== 'NOTE')\n        return undefined;\n    return findTags(notesTag.tree, 'CONT')\n        .filter(function (x) { return x.data; })\n        .reduce(function (a, i) { return a.concat(i.data); }, [notesTag.data]);\n}\n\n/**\n * Creates a JsonEvent object from a GEDCOM entry.\n * Used for BIRT, DEAT and MARR tags.\n */\nfunction createEvent(entry) {\n    if (!entry) {\n        return undefined;\n    }\n    const typeTag = findTag(entry.tree, 'TYPE');\n    const dateTag = findTag(entry.tree, 'DATE');\n    const placeTag = findTag(entry.tree, 'PLAC');\n    const date = dateTag && dateTag.data && getDate(dateTag.data);\n    const place = placeTag && placeTag.data;\n    if (date || place) {\n        const result = date || {};\n        if (place) {\n            result.place = place;\n        }\n        result.confirmed = true;\n        result.type = typeTag ? typeTag.data : undefined;\n        result.notes = createNotes(findTag(entry.tree, 'NOTE'));\n        return result;\n    }\n    if (entry.data && entry.data.toLowerCase() === 'y') {\n        return { confirmed: true };\n    }\n    return undefined;\n}\n\n/** Creates a JsonIndi object from an INDI entry in GEDCOM. */\nfunction createIndi(entry, objects, ego, allLanguages) {\n    let firstName;\n    let lastName;\n    const id = pointerToId(entry.pointer);\n    const fams = findTags(entry.tree, 'FAMS').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const indi = {id: id, fams: fams};\n\n    // is Ego?\n    if (ego) {\n        indi.isEgo = pointerToId(ego.pointer) === id\n    }\n\n    // Name\n    const nameTags = findTags(entry.tree, 'NAME');\n    const isMaiden = function (nameTag) {\n        const type = findTag(nameTag.tree, 'TYPE');\n        return type !== undefined && type.data === 'maiden';\n    };\n    const main = nameTags.find(function (x) {\n        return !isMaiden(x);\n    });\n    const maiden = nameTags.find(isMaiden);\n    if (main) {\n        const _a = extractName(main.data);\n        firstName = _a.firstName;\n        lastName = _a.lastName;\n        if (firstName) {\n            indi.firstName = firstName;\n        }\n        if (lastName) {\n            indi.lastName = lastName;\n        }\n    }\n    if (maiden) {\n        let _b = extractName(maiden.data);\n        firstName = _b.firstName;\n        lastName = _b.lastName;\n        if (lastName) {\n            indi.maidenName = lastName;\n        }\n        if (firstName && !indi.firstName) {\n            indi.firstName = firstName;\n        }\n    }\n    // Number of children\n    const nchiTag = findTag(entry.tree, 'NCHI');\n    if (nchiTag) {\n        indi.numberOfChildren = +nchiTag.data;\n    }\n    // Number of marriages\n    const nmrTag = findTag(entry.tree, 'NMR');\n    if (nmrTag) {\n        indi.numberOfMarriages = +nmrTag.data;\n    }\n    // Sex\n    const sexTag = findTag(entry.tree, 'SEX');\n    if (sexTag) {\n        indi.sex = sexTag.data;\n    }\n    // Languages\n    const languageTags = findTags(entry.tree, 'LANG')\n    if (languageTags) {\n        const gedcomLanguages = findTags(entry.tree, 'LANG').map(lang => lang.data)\n        indi.languages = allLanguages.filter(l => gedcomLanguages.includes(l.name));\n    }\n    // Ethnicity\n    const ethnicityTag = findTag(entry.tree, '_ETHN');\n    if (ethnicityTag) {\n        indi.ethnicity = ethnicityTag.data;\n    }\n    // Tribe\n    const tribeTag = findTag(entry.tree, '_TRIB');\n    if (tribeTag) {\n        indi.tribe = tribeTag.data;\n    }\n    // Family with parents\n    const famcTag = findTag(entry.tree, 'FAMC');\n    if (famcTag) {\n        indi.famc = pointerToId(famcTag.data);\n    }\n    // Image URL\n    const objeTags = findTags(entry.tree, 'OBJE');\n    if (objeTags.length > 0) {\n        // Dereference OBJECT if needed\n        const getFileTag = function (tag) {\n            const realObjeTag = tag.data ? objects.get(pointerToId(tag.data)) : tag;\n            if (!realObjeTag)\n                return undefined;\n            const file = findTag(realObjeTag.tree, 'FILE');\n            const title = findTag(realObjeTag.tree, 'TITL');\n            if (!file)\n                return undefined;\n            return {\n                url: file.data,\n                title: title && title.data,\n            };\n        };\n        indi.images = objeTags\n            .map(getFileTag)\n            .filter(function (x) { return x !== undefined; });\n    }\n    // Birthdate and place\n    const birth = createEvent(findTag(entry.tree, 'BIRT'));\n    if (birth) {\n        indi.birth = birth;\n    }\n    // Death date and place\n    const death = createEvent(findTag(entry.tree, 'DEAT'));\n    if (death) {\n        indi.death = death;\n    }\n    // Notes\n    indi.notes = createNotes(findTag(entry.tree, 'NOTE'));\n    // Events\n    indi.events = findTags(entry.tree, 'EVEN')\n        .map(createEvent)\n        .filter(function (x) { return x !== null; });\n    return indi;\n}\n\n/** Creates a JsonFam object from an FAM entry in GEDCOM. */\nfunction createFam(entry) {\n    const id = pointerToId(entry.pointer);\n    const children = findTags(entry.tree, 'CHIL').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const fam = {id: id, children: children};\n    // Husband.\n    const husbTag = findTag(entry.tree, 'HUSB');\n    if (husbTag) {\n        fam.husb = pointerToId(husbTag.data);\n    }\n    // Wife.\n    const wifeTag = findTag(entry.tree, 'WIFE');\n    if (wifeTag) {\n        fam.wife = pointerToId(wifeTag.data);\n    }\n    // Marriage\n    const marriage = createEvent(findTag(entry.tree, 'MARR'));\n    if (marriage) {\n        fam.marriage = marriage;\n    }\n    return fam;\n}\n\n/** Creates a map from ID to entry from an array of entries. */\nfunction createMap(entries) {\n    return new Map(entries.map(function (entry) { return [pointerToId(entry.pointer), entry]; }));\n}\n\n/** Parses a GEDCOM file into a JsonGedcomData structure. */\nfunction gedcomToJson(gedcomContents, allLanguages) {\n    return gedcomEntriesToJson(parse_gedcom_1.parse(gedcomContents, allLanguages));\n}\nexports.gedcomToJson = gedcomToJson;\n\n/** Converts parsed GEDCOM entries into a JsonGedcomData structure. */\nfunction gedcomEntriesToJson(gedcom, allLanguages) {\n    const objects = createMap(findTags(gedcom, 'OBJE'));\n    const ego = findTags(gedcom, 'EGO')\n    const indis = findTags(gedcom, 'INDI').map(function (entry) {\n        return createIndi(entry, objects, ego.length > 0 ? ego[0] : undefined, allLanguages);\n    });\n    const fams = findTags(gedcom, 'FAM').map(createFam);\n    return { indis: indis, fams: fams };\n}\nexports.gedcomEntriesToJson = gedcomEntriesToJson;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.HourglassChart = void 0;\n\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar chart_util_1 = require(\"./chart-util\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\n\n/**\n * Renders an hourglass chart. It consists of an ancestor chart and\n * a descendant chart for a family.\n */\nvar HourglassChart = /** @class */ (function () {\n    function HourglassChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n\n    HourglassChart.prototype.render = function () {\n        const ancestorsRoot = ancestor_chart_1.getAncestorsTree(this.options);\n        const ancestorNodes = this.util.layOutChart(ancestorsRoot, { flipVertically: true });\n        const descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // slice(1) removes the duplicated start node.\n        const nodes = ancestorNodes.slice(1).concat(descendantNodes);\n        const animationPromise = this.util.renderChart(nodes);\n        const info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return HourglassChart;\n}());\nexports.HourglassChart = HourglassChart;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelativesChart = void 0;\n\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar id_generator_1 = require(\"./id-generator\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\nvar d3_array_1 = require(\"d3-array\");\nvar chart_util_1 = require(\"./chart-util\");\n\n/** A view of a family that hides one child individual. */\nvar FilterChildFam = /** @class */ (function () {\n    function FilterChildFam(fam, childId) {\n        this.fam = fam;\n        this.childId = childId;\n    }\n    FilterChildFam.prototype.getId = function () {\n        return this.fam.getId();\n    };\n    FilterChildFam.prototype.getFather = function () {\n        return this.fam.getFather();\n    };\n    FilterChildFam.prototype.getMother = function () {\n        return this.fam.getMother();\n    };\n    FilterChildFam.prototype.getChildren = function () {\n        var children = __spreadArray([], this.fam.getChildren());\n        var index = children.indexOf(this.childId);\n        if (index !== -1) {\n            children.splice(index, 1);\n        }\n        return children;\n    };\n    return FilterChildFam;\n}());\n/** Data provider proxy that filters out a specific child individual. */\nvar FilterChildData = /** @class */ (function () {\n    function FilterChildData(data, childId) {\n        this.data = data;\n        this.childId = childId;\n    }\n    FilterChildData.prototype.getIndi = function (id) {\n        return this.data.getIndi(id);\n    };\n    FilterChildData.prototype.getFam = function (id) {\n        return new FilterChildFam(this.data.getFam(id), this.childId);\n    };\n    return FilterChildData;\n}());\n/** Chart layout showing all relatives of a person. */\nvar RelativesChart = /** @class */ (function () {\n    function RelativesChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n        this.options.idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n    }\n\n    RelativesChart.prototype.layOutAncestorDescendants = function (ancestorsRoot, focusedNode) {\n        // let ancestorDescentants: Array<HierarchyPointNode<TreeNode>> = [];\n        var _this = this;\n        var ancestorData = new Map();\n        ancestorsRoot.eachAfter(function (node) {\n            if (!node.parent) {\n                return;\n            }\n            var descendantOptions = __assign({}, _this.options);\n            descendantOptions.startFam = node.data.family.id;\n            descendantOptions.startIndi = undefined;\n            var child = node.id === node.parent.data.spouseParentNodeId\n                ? node.parent.data.spouse.id\n                : node.parent.data.indi.id;\n            descendantOptions.data = new FilterChildData(descendantOptions.data, child);\n            descendantOptions.baseGeneration =\n                (_this.options.baseGeneration || 0) - node.depth;\n            var descendantNodes = descendant_chart_1.layOutDescendants(descendantOptions);\n            // The id could be modified because of duplicates. This can happen when\n            // drawing one family in multiple places of the chart).\n            node.data.id = descendantNodes[0].id;\n            var chartInfo = chart_util_1.getChartInfoWithoutMargin(descendantNodes);\n            var parentData = (node.children || []).map(function (childNode) {\n                return ancestorData.get(childNode.data.id);\n            });\n            var parentHeight = parentData\n                .map(function (data) { return data.height; })\n                .reduce(function (a, b) { return a + b + chart_util_1.V_SPACING; }, 0);\n            var data = {\n                descendantNodes: descendantNodes,\n                width: chartInfo.size[0],\n                height: chartInfo.size[1] + parentHeight,\n                x: chartInfo.origin[0],\n                y: chartInfo.origin[1] + parentHeight,\n            };\n            ancestorData.set(node.data.id, data);\n        });\n        ancestorsRoot.each(function (node) {\n            if (!node.parent) {\n                return;\n            }\n            var data = ancestorData.get(node.data.id);\n            var parentData = ancestorData.get(node.parent.data.id);\n            data.left =\n                parentData && !parentData.middle\n                    ? parentData.left\n                    : node.parent.data.indiParentNodeId === node.id;\n            data.middle =\n                (!parentData || parentData.middle) &&\n                node.parent.children.length === 1;\n        });\n        ancestorsRoot.each(function (node) {\n            var data = ancestorData.get(node.data.id);\n            var thisNode = data ? data.descendantNodes[0] : focusedNode;\n            (node.children || []).forEach(function (child) {\n                var childNode = ancestorData.get(child.data.id).descendantNodes[0];\n                childNode.parent = thisNode;\n            });\n            if (node.data.indiParentNodeId && node.children) {\n                thisNode.data.indiParentNodeId = node.children.find(function (childNode) { return childNode.id === node.data.indiParentNodeId; }).data.id;\n            }\n            if (node.data.spouseParentNodeId && node.children) {\n                thisNode.data.spouseParentNodeId = node.children.find(function (childNode) { return childNode.id === node.data.spouseParentNodeId; }).data.id;\n            }\n        });\n        ancestorsRoot.each(function (node) {\n            let middleX;\n            let parentData;\n            let parentNode;\n            let data;\n            var nodeData = ancestorData.get(node.data.id);\n            // Lay out the nodes produced by laying out descendants of ancestors\n            // instead of the ancestor nodes from ancestorsRoot.\n            var thisNode = nodeData ? nodeData.descendantNodes[0] : focusedNode;\n            var indiParent = node.children &&\n                node.children.find(function (child) { return child.id === node.data.indiParentNodeId; });\n            var spouseParent = node.children &&\n                node.children.find(function (child) { return child.id === node.data.spouseParentNodeId; });\n            var nodeX = thisNode.x;\n            var nodeY = thisNode.y;\n            var nodeWidth = thisNode.data.width;\n            var nodeHeight = thisNode.data.height;\n            var indiWidth = thisNode.data.indi ? thisNode.data.indi.width : 0;\n            var spouseWidth = thisNode.data.spouse\n                ? thisNode.data.spouse.width\n                : 0;\n            // Lay out the individual's ancestors and their descendants.\n            if (indiParent) {\n                data = ancestorData.get(indiParent.data.id);\n                parentNode = data.descendantNodes[0];\n                parentData = parentNode.data;\n                var spouseTreeHeight = spouseParent\n                    ? ancestorData.get(spouseParent.data.id).height + chart_util_1.V_SPACING\n                    : 0;\n                var dx_1 = nodeX +\n                    data.x -\n                    nodeWidth / 2 +\n                    indiWidth / 2 +\n                    (data.left ? -data.width - chart_util_1.H_SPACING : chart_util_1.H_SPACING);\n                var dy_1 = nodeY +\n                    data.y -\n                    nodeHeight / 2 -\n                    data.height +\n                    (data.left ? -chart_util_1.V_SPACING : -spouseTreeHeight - chart_util_1.V_SPACING);\n                // Move all nodes by (dx, dy). The ancestor node,\n                // ie. data.descendantNodes[0] is now at (0, 0).\n                data.descendantNodes.forEach(function (node) {\n                    node.x += dx_1;\n                    node.y += dy_1;\n                });\n                // Set the ancestor's horizontal position independently.\n                middleX = indiWidth / 2 -\n                    nodeWidth / 2 +\n                    parentData.width / 2 -\n                    (parentData.indi\n                        ? parentData.indi.width\n                        : parentData.spouse.width);\n                if (data.middle) {\n                    parentNode.x = 0;\n                }\n                else if (!nodeData || nodeData.middle) {\n                    parentNode.x =\n                        -nodeWidth / 2 - parentData.width / 2 + indiWidth - chart_util_1.H_SPACING / 2;\n                }\n                else if (data.left) {\n                    parentNode.x =\n                        nodeX +\n                        d3_array_1.min([\n                            nodeWidth / 2 -\n                            parentData.width / 2 -\n                            spouseWidth / 2 -\n                            chart_util_1.H_SPACING,\n                            middleX,\n                        ]);\n                }\n                else {\n                    parentNode.x =\n                        nodeX + d3_array_1.max([parentData.width / 2 - nodeWidth / 2, middleX]);\n                }\n            }\n            // Lay out the spouse's ancestors and their descendants.\n            if (spouseParent) {\n                data = ancestorData.get(spouseParent.data.id);\n                parentNode = data.descendantNodes[0];\n                parentData = parentNode.data;\n                const indiTreeHeight = indiParent\n                    ? ancestorData.get(indiParent.data.id).height + chart_util_1.V_SPACING\n                    : 0;\n                const dx_2 = nodeX +\n                    data.x +\n                    nodeWidth / 2 -\n                    spouseWidth / 2 +\n                    (data.left ? -data.width - chart_util_1.H_SPACING : chart_util_1.H_SPACING);\n                const dy_2 = nodeY +\n                    data.y -\n                    nodeHeight / 2 -\n                    data.height +\n                    (data.left ? -indiTreeHeight - chart_util_1.V_SPACING : -chart_util_1.V_SPACING);\n                // Move all nodes by (dx, dy). The ancestor node,\n                // ie. data.descendantNodes[0] is now at (0, 0).\n                data.descendantNodes.forEach(function (node) {\n                    node.x += dx_2;\n                    node.y += dy_2;\n                });\n                // Set the ancestor's horizontal position independently.\n                middleX = nodeWidth / 2 -\n                    spouseWidth / 2 +\n                    parentData.width / 2 -\n                    (parentData.indi\n                        ? parentData.indi.width\n                        : parentData.spouse.width);\n                if (data.middle) {\n                    parentNode.x = 0;\n                }\n                else if (!nodeData || nodeData.middle) {\n                    parentNode.x =\n                        nodeWidth / 2 + parentData.width / 2 - spouseWidth + chart_util_1.H_SPACING / 2;\n                }\n                else if (data.left) {\n                    parentNode.x =\n                        nodeX + d3_array_1.min([nodeWidth / 2 - parentData.width / 2, middleX]);\n                }\n                else {\n                    parentNode.x =\n                        nodeX +\n                        d3_array_1.max([\n                            parentData.width / 2 - nodeWidth / 2 + indiWidth / 2 + chart_util_1.H_SPACING,\n                            middleX,\n                        ]);\n                }\n            }\n        });\n        return Array.from(ancestorData.values())\n            .map(function (data) { return data.descendantNodes; })\n            .reduce(function (a, b) { return a.concat(b); }, []);\n    };\n\n    RelativesChart.prototype.render = function () {\n        var descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // Don't use common id generator because these nodes will not be drawn.\n        var ancestorOptions = Object.assign({}, this.options, {\n            idGenerator: undefined,\n        });\n        var ancestorsRoot = ancestor_chart_1.getAncestorsTree(ancestorOptions);\n        var ancestorDescentants = this.layOutAncestorDescendants(ancestorsRoot, descendantNodes[0]);\n        var nodes = descendantNodes.concat(ancestorDescentants);\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return RelativesChart;\n}());\nexports.RelativesChart = RelativesChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChart = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst data_1 = require(\"./data\");\nconst DEFAULT_SVG_SELECTOR = 'svg';\n\nfunction createChartOptions(chartOptions, renderOptions, options) {\n    const data = new data_1.JsonDataProvider(chartOptions.json);\n    const indiHrefFunc = chartOptions.indiUrl ? function (id) {\n            return chartOptions.indiUrl.replace(`${id}`, id);\n        } : undefined;\n    const famHrefFunc = chartOptions.famUrl ? function (id) {\n            return chartOptions.famUrl.replace(`${id}`, id);\n        } : undefined;\n    // If startIndi nor startFam is provided, select the first indi in the data.\n    if (!renderOptions.startIndi && !renderOptions.startFam) {\n        renderOptions.startIndi = chartOptions.json.indis[0].id;\n    }\n    const animate = !options.initialRender && chartOptions.animate;\n    return {\n        data: data,\n        renderer: new chartOptions.renderer({\n            data: data,\n            indiHrefFunc: indiHrefFunc,\n            famHrefFunc: famHrefFunc,\n            indiCallback: chartOptions.indiCallback,\n            famCallback: chartOptions.famCallback,\n            horizontal: chartOptions.horizontal,\n            colors: chartOptions.colors,\n            selectedLanguage: chartOptions.selectedLanguage,\n            animate: animate,\n            locale: chartOptions.locale,\n        }),\n        startIndi: renderOptions.startIndi,\n        startFam: renderOptions.startFam,\n        svgSelector: chartOptions.svgSelector || DEFAULT_SVG_SELECTOR,\n        horizontal: chartOptions.horizontal,\n        baseGeneration: renderOptions.baseGeneration,\n        animate: animate,\n    };\n}\n\nconst SimpleChartHandle = /** @class */ (function () {\n\n    function SimpleChartHandle(options) {\n        this.options = options;\n        this.initialRender = true;\n    }\n\n    SimpleChartHandle.prototype.render = function (renderOptions) {\n        if (renderOptions === void 0) {\n            renderOptions = {};\n        }\n        const chartOptions = createChartOptions(this.options, renderOptions, {\n            initialRender: this.initialRender\n        });\n        // Reset CSS maps\n        if (this.initialRender) {\n            chartOptions.renderer.resetCss();\n        }\n        this.initialRender = false;\n        const chart = new this.options.chartType(chartOptions);\n        const info = chart.render();\n        if (this.options.updateSvgSize !== false) {\n            d3_selection_1.select(chartOptions.svgSelector)\n                .attr('width', info.size[0])\n                .attr('height', info.size[1]);\n        }\n        return info;\n    };\n    /**\n     * Updates the chart input data.\n     * This is useful when the data is dynamically loaded and a different subset\n     * of data will be displayed.\n     */\n    SimpleChartHandle.prototype.setData = function (json) {\n        this.options.json = json;\n    };\n    return SimpleChartHandle;\n}());\n\nfunction createChart(options) {\n    return new SimpleChartHandle(options);\n}\nexports.createChart = createChart;\n","import {IndiInfo} from '../lib/topola';\nimport {TopolaData} from '../util/gedcom_util';\nimport {Language} from \".././model/languages-loader\";\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n    UPLOADED,\n    GEDCOM_URL,\n    EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n    spec: SourceSpecT;\n    selection?: IndiInfo;\n    allLanguages?: Language[];\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n    /**\n     * Returns true if the application is now loading a completely new data set\n     * and the existing one should be wiped.\n     */\n    isNewData(\n        newSource: SourceSelection<SourceSpecT>,\n        oldSource: SourceSelection<SourceSpecT>,\n        data?: TopolaData,\n    ): boolean;\n\n    /** Loads data from the data source. */\n    loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n    ['ADOP', 'Adoption'],\n    ['BAPM', 'Baptism'],\n    ['BIRT', 'Birth'],\n    ['BURI', 'Burial'],\n    ['CENS', 'Census'],\n    ['CHR', 'Christening'],\n    ['CREM', 'Cremation'],\n    ['DEAT', 'Death'],\n    ['EDUC', 'Education'],\n    ['EMAIL', 'E-mail'],\n    ['EMIG', 'Emigration'],\n    ['EVEN', 'Event'],\n    ['FACT', 'Fact'],\n    ['IMMI', 'Immigration'],\n    ['MARR', 'Marriage'],\n    ['MARS', 'Marriage settlement'],\n    ['ETHN', 'Ethnic'],\n    ['TRIB', 'Clan'],\n    ['LANG', 'Language'],\n    ['DIV', 'Divorce'],\n    ['MILT', 'Military services'],\n    ['NATU', 'Naturalization'],\n    ['OCCU', 'Occupation'],\n    ['TITL', 'Title'],\n    ['WWW', 'WWW'],\n    ['birth', 'Birth name'],\n    ['married', 'Married name'],\n    ['maiden', 'Maiden name'],\n    ['immigrant', 'Immigrant name'],\n    ['aka', 'Also known as'],\n]);\n\ninterface Props {\n    tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n    const normalizedTag = props.tag.replace(/_/g, '');\n    return (\n        <FormattedMessage\n            id={`gedcom.${normalizedTag}`}\n            defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n        />\n    );\n}\n","import {\n    Container,\n    Icon,\n    Image,\n    Label,\n    Message,\n    Modal,\n    Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n    const [imageOpen, setImageOpen] = useState(false);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageFailed, setImageFailed] = useState(false);\n    const [imageSrc, setImageSrc] = useState('');\n\n    if (imageLoaded && imageSrc !== props.url) {\n        setImageLoaded(false);\n    }\n    return (\n        <>\n            <Image\n                className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n                onClick={() => setImageOpen(true)}\n                onLoad={() => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(false);\n                }}\n                onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(true);\n                    e.currentTarget.alt = '';\n                }}\n                src={props.url}\n                alt={props.title || props.filename}\n                centered={true}\n            />\n            <Placeholder className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}>\n                <Placeholder.Image square/>\n            </Placeholder>\n            {imageFailed && (\n                <Container fluid textAlign=\"center\">\n                    <Message negative compact>\n                        <Message.Header>\n                            <FormattedMessage\n                                id=\"error.failed_to_load_image\"\n                                defaultMessage={'Failed to load image file'}\n                            />\n                        </Message.Header>\n                    </Message>\n                </Container>\n            )}\n            <Modal\n                basic\n                size=\"large\"\n                closeIcon={<Icon name=\"close\" color=\"red\"/>}\n                open={imageOpen}\n                onClose={() => setImageOpen(false)}\n                onOpen={() => setImageOpen(true)}\n                centered={false}\n            >\n                <Modal.Header>{props.title}</Modal.Header>\n                <Modal.Content image>\n                    <Image\n                        className=\"modal-image\"\n                        src={props.url}\n                        alt={props.title || props.filename}\n                        label={<Label attached=\"bottom\" content={props.filename}/>}\n                        wrapped\n                    />\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n    lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n    return (\n        <>\n            {props.lines.map((line, index) => (\n                <div key={index}>\n                    <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n                    <br/>\n                </div>\n            ))}\n        </>\n    );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Icon, Item, List, Menu, MenuItemProps, Popup, Tab,} from 'semantic-ui-react';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from '../lib/topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport interface Source {\n    title?: string;\n    author?: string;\n    page?: string;\n    date?: DateOrRange;\n    publicationInfo?: string;\n}\n\ninterface Props {\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n    return (\n        !!images &&\n        images.map((image, index) => (\n            <List key={index}>\n                <List.Item>\n                    <WrappedImage\n                        url={image.url}\n                        filename={image.filename}\n                        title={image.title}\n                    />\n                </List.Item>\n            </List>\n        ))\n    );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n    return (\n        !!notes?.length &&\n        notes.map((note, index) => (\n            <div key={index}>\n                <MultilineText\n                    lines={note.map((line, index) => (\n                        <i key={index}>{line}</i>\n                    ))}\n                />\n            </div>\n        ))\n    );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n    return (\n        !!sources?.length && (\n            <List>\n                {sources.map((source, index) => (\n                    <List.Item key={index}>\n                        <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\"/>\n                        <List.Content>\n                            <List.Header>\n                                <Linkify properties={{target: '_blank'}}>\n                                    {[source.author, source.title, source.publicationInfo]\n                                        .filter((sourceElement) => sourceElement)\n                                        .join(', ')}\n                                </Linkify>\n                            </List.Header>\n                            <List.Description>\n                                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                                {source.date\n                                    ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                                    : null}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n                ))}\n            </List>\n        )\n    );\n}\n\nexport function EventExtras(props: Props) {\n    const intl = useIntl();\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [indi, setIndi] = useState('');\n\n    if (!indi || indi !== props.indi) {\n        setActiveIndex(-1);\n        setIndi(props.indi);\n    }\n\n    function handleTabOnClick(\n        event: React.MouseEvent<HTMLAnchorElement>,\n        menuItemProps: MenuItemProps,\n    ) {\n        menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n            ? setActiveIndex(menuItemProps.index)\n            : setActiveIndex(-1);\n    }\n\n    const imageTab = props.images?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"camera\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n    };\n\n    const noteTab = props.notes?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"sticky note outline\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n    };\n\n    const sourceTab = props.sources?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"quote right\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n    };\n\n    const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n        tab ? [tab] : [],\n    );\n\n    if (panes.length) {\n        return (\n            <Item.Description>\n                <Tab\n                    className=\"event-extras\"\n                    activeIndex={activeIndex}\n                    renderActiveOnly={true}\n                    menu={{\n                        tabular: true,\n                        attached: true,\n                        compact: true,\n                        borderless: true,\n                    }}\n                    panes={panes}\n                />\n            </Item.Description>\n        );\n    }\n    return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry,\n    getName,\n    pointerToId,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\nimport {DateOrRange, getDate} from '../lib/topola';\n\nfunction PersonLink(props: { person: GedcomEntry }) {\n    const location = useLocation();\n    const name = getName(props.person);\n    const search = queryString.parse(location.search);\n    search['indi'] = pointerToId(props.person.pointer);\n    return (\n        <Item.Meta>\n            <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n                {name ? (name) : (<FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>)}\n            </Link>\n        </Item.Meta>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n    entries: GedcomEntry[];\n}\n\ninterface EventData {\n    type: string;\n    date?: DateOrRange;\n    personLink?: GedcomEntry;\n    place?: string[];\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nconst EVENT_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'FAMS',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'MARS', 'DIV'];\n\nfunction EventHeader(props: { event: EventData }) {\n    const intl = useIntl();\n    return (\n        <div className=\"event-header\">\n            <Header as=\"span\" size=\"small\">\n                <TranslatedTag tag={props.event.type}/>\n            </Header>\n            {props.event.date ? (\n                <Header as=\"span\" textAlign=\"right\" sub>\n                    {formatDateOrRange(props.event.date, intl)}\n                </Header>\n            ) : null}\n        </div>\n    );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n    const spouseReference = familyEntry.tree\n        .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n        .find((familySubEntry) => !familySubEntry.data.includes(indi));\n    if (!spouseReference) {\n        return undefined;\n    }\n    return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n    const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n    return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n    return entry.tree\n        .filter((subEntry) => 'OBJE' === subEntry.tag)\n        .map((objectEntry) =>\n            dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n        )\n        .map((objectEntry) => getImageFileEntry(objectEntry))\n        .flatMap((imageFileEntry) =>\n            imageFileEntry ? [\n                    {\n                        url: imageFileEntry?.data || '',\n                        filename: getFileName(imageFileEntry) || '',\n                    },\n                ] : [],\n        );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n    return entry.tree\n        .filter((subEntry) => 'SOUR' === subEntry.tag)\n        .map((sourceEntryReference) => {\n            const sourceEntry = dereference(sourceEntryReference, gedcom, (gedcom) => gedcom.other);\n            const title = sourceEntry.tree.find((subEntry) => 'TITL' === subEntry.tag);\n            const abbr = sourceEntry.tree.find((subEntry) => 'ABBR' === subEntry.tag);\n            const author = sourceEntry.tree.find((subEntry) => 'AUTH' === subEntry.tag);\n            const publicationInfo = sourceEntry.tree.find((subEntry) => 'PUBL' === subEntry.tag);\n            const page = sourceEntryReference.tree.find((subEntry) => 'PAGE' === subEntry.tag);\n            const sourceData = sourceEntryReference.tree.find((subEntry) => 'DATA' === subEntry.tag);\n            const date = sourceData ? resolveDate(sourceData) : undefined;\n            return {\n                title: title?.data || abbr?.data,\n                author: author?.data,\n                page: page?.data,\n                date: date ? getDate(date.data) : undefined,\n                publicationInfo: publicationInfo?.data,\n            };\n        });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n    return entry.tree\n        .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n        .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n        .map((note) => getData(note));\n}\n\nfunction toEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    return entry.tag === 'FAMS' ? toFamilyEvents(entry, gedcom, indi) : toIndiEvent(entry, gedcom, indi);\n}\n\nfunction toIndiEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const date = resolveDate(entry) || null;\n    return [\n        {\n            date: date ? getDate(date.data) : undefined,\n            type: entry.tag,\n            place: eventPlace(entry),\n            images: eventImages(entry, gedcom),\n            notes: eventNotes(entry, gedcom),\n            sources: eventSources(entry, gedcom),\n            indi: indi,\n        },\n    ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n    return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n    return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n        family.tree.filter((entry) => entry.tag === tag),\n    ).map((familyMarriageEvent) => {\n        const date = resolveDate(familyMarriageEvent) || null;\n        return {\n            date: date ? getDate(date.data) : undefined,\n            type: familyMarriageEvent.tag,\n            personLink: getSpouse(indi, family, gedcom),\n            place: eventPlace(familyMarriageEvent),\n            images: eventImages(familyMarriageEvent, gedcom),\n            notes: eventNotes(familyMarriageEvent, gedcom),\n            sources: eventSources(familyMarriageEvent, gedcom),\n            indi: indi,\n        };\n    });\n}\n\nfunction Event(props: { event: EventData }) {\n    return (\n        <Item>\n            <Item.Content>\n                <EventHeader event={props.event}/>\n                {!!props.event.personLink && (<PersonLink person={props.event.personLink}/>)}\n                {!!props.event.place && (<Item.Description>{props.event.place}</Item.Description>)}\n                <EventExtras\n                    images={props.event.images}\n                    notes={props.event.notes}\n                    sources={props.event.sources}\n                    indi={props.event.indi}\n                />\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport function Events(props: Props) {\n    const events = flatMap(EVENT_TAGS, (tag) =>\n        props.entries\n            .filter((entry) => entry.tag === tag)\n            .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi))\n            .flatMap((events) => events)\n            .sort((event1, event2) => compareDates(event1.date, event2.date)),\n    );\n    if (events.length) {\n        return (\n            <>\n                {events.map((event, index) => (\n                    <Event event={event} key={index}/>\n                ))}\n            </>\n        );\n    }\n    return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n    'NAME',\n    'SEX',\n    'FAMC',\n    'FAMS',\n    'NOTE',\n    'SOUR',\n    'LANG',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n    const lines = [];\n    if (entry.data) {\n        lines.push(...getData(entry));\n    }\n    entry.tree\n        .filter((subentry) => subentry.tag === 'NOTE')\n        .forEach((note) =>\n            getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n        );\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <>\n            <Header sub>\n                <TranslatedTag tag={entry.tag}/>\n            </Header>\n            <span>\n                <MultilineText lines={lines}/>\n            </span>\n        </>\n    );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n    const imageFileEntry = getImageFileEntry(objectEntry);\n    return imageFileEntry ? (\n        <div className=\"person-image\">\n            <WrappedImage\n                url={imageFileEntry.data}\n                filename={getFileName(imageFileEntry) || ''}\n            />\n        </div>\n    ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n    return (\n        <MultilineText\n            lines={getData(entry).map((line, index) => (\n                <i key={index}>{line}</i>\n            ))}\n        />\n    );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n    const fullName = entry.data.replaceAll('/', '');\n    const nameType = entry.tree.find(\n        (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n    )?.data;\n    return (\n        <>\n            <Header as=\"span\" size=\"large\">\n                {fullName ? (\n                    fullName\n                ) : (\n                    <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>\n                )}\n            </Header>\n            {fullName && nameType && (\n                <Item.Meta>\n                    <TranslatedTag tag={nameType}/>\n                </Item.Meta>\n            )}\n        </>\n    );\n}\n\nfunction getDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n    return flatMap(tags, (tag) =>\n        entries\n            .filter((entry) => entry.tag === tag)\n            .map((entry) => detailsFunction(entry)),\n    )\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n    return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n    return entries\n        .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n        .filter(hasData)\n        .map((entry) => dataDetails(entry))\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\nfunction getMultilineDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    title: [string, string],\n) {\n    const lines= entries\n        .filter((entry) => tags.includes(entry.tag))\n        .filter(hasData)\n        .map((element) => element.data)\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <Item key=\"languages\">\n            <Item.Content>\n                <Header as=\"span\">\n                    <FormattedMessage id={title[0]} defaultMessage={title[1]}/>\n                </Header>\n                <span>\n                    <MultilineText lines={lines}/>\n                </span>\n            </Item.Content>\n        </Item>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n}\n\nexport function Details(props: Props) {\n    const entries = props.gedcom.indis[props.indi].tree;\n    const entriesWithData = entries\n        .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n        .filter(hasData);\n\n    return (\n        <div className=\"details\">\n            <Item.Group divided>\n                {getDetails(entries, ['NAME'], nameDetails)}\n                {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n                <Events gedcom={props.gedcom} entries={entries} indi={props.indi}/>\n                {getMultilineDetails(entriesWithData, ['LANG'], ['gedcom.languages', 'Languages'])}\n                {getOtherDetails(entriesWithData)}\n                {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n            </Item.Group>\n        </div>\n    );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\nimport {Language} from \".././model/languages-loader\";\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n    GEDCOM = 'gedcom',\n    READY = 'ready',\n    PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n    message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n    message: EmbeddedMessageType.GEDCOM;\n    gedcom?: string;\n    allLanguages?: Language[]\n}\n\nexport interface EmbeddedSourceSpec {\n    source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<EmbeddedSourceSpec>,\n        oldSource: SourceSelection<EmbeddedSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        // Never reload data.\n        return false;\n    }\n\n    private async onMessage(\n        message: EmbeddedMessage,\n        resolve: (value: TopolaData) => void,\n        reject: (reason: any) => void,\n    ) {\n        if (message.message === EmbeddedMessageType.PARENT_READY) {\n            // Parent didn't receive the first 'ready' message, so we need to send it again.\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n        } else if (message.message === EmbeddedMessageType.GEDCOM) {\n            const gedcom = (message as GedcomMessage).gedcom;\n            const allLanguages = (message as GedcomMessage).allLanguages;\n            if (!gedcom || !allLanguages) {\n                return;\n            }\n            try {\n                const data = await loadGedcom('', gedcom, allLanguages);\n                resolve(data);\n            } catch (error) {\n                reject(error);\n            }\n        }\n    }\n\n    async loadData(source: SourceSelection<EmbeddedSourceSpec>): Promise<TopolaData> {\n        // Notify the parent window that we are ready.\n        return new Promise<TopolaData>((resolve, reject) => {\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n            window.addEventListener('message', (data) =>\n                this.onMessage(data.data, resolve, reject),\n            );\n        });\n    }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n    if (!(error instanceof TopolaError)) {\n        return error.message;\n    }\n    return intl.formatMessage(\n        {\n            id: `error.${error.code}`,\n            defaultMessage: error.message,\n        },\n        error.args,\n    );\n}\n","import {\n    Menu,\n    Dropdown,\n    MenuItemProps,\n    DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n    Menu,\n    Dropdown\n}\n\ninterface Props {\n    menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n    const newProps = {...props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n        <>\n            {props.menuType === MenuType.Menu? (\n                <Menu.Item {...newProps}>{props.children}</Menu.Item>\n            ) : (\n                <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n            )}\n        </>\n    );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n    breakpoints: {\n        small: 320,\n        large: 768,\n    },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import {SemanticCOLORS, Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableRow} from \"semantic-ui-react\";\n\nexport function IndividualsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell>name</TableHeaderCell>\n                    <TableHeaderCell>surname</TableHeaderCell>\n                    <TableHeaderCell>nickname</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>sex *</TableHeaderCell>\n                    <TableHeaderCell >YOB</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>ethnic *</TableHeaderCell>\n                    <TableHeaderCell>clan</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Jane</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>F</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled>Some comments</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled>Johnny</TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled>1983</TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function RelationshipsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell>father_id</TableHeaderCell>\n                    <TableHeaderCell>mother_id</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>I200</TableCell>\n                    <TableCell disabled>I201</TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function FamiliesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>husband_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>wife_id *</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>F200</TableCell>\n                    <TableCell>I200</TableCell>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Common Law settlement</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function IndividualsLanguagesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>language_id *</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>3</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}","const Papa = require(\"papaparse\");\n\nexport const columnsValidation = {\n    \"1_individuals.csv\": [\"id\", \"name\", \"surname\", \"nickname\", \"sex\", \"YOB\", \"ethnic\", \"clan\", \"notes\"],\n    \"2_relationships.csv\": [\"person_id\", \"father_id\", \"mother_id\", \"notes\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport const valuesValidation = {\n    \"1_individuals.csv\": [\"id\", \"sex\"],\n    \"2_relationships.csv\": [\"person_id\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport function validateFilenames(files: File[], validFilenames: string[]): boolean {\n    for (const file of files) {\n        const filename = file.name;\n        if (!validFilenames.includes(filename)) {\n            console.error(`Invalid filename: ${filename}`);\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function validateCSV(filename: string, content: string) {\n    const parsedData = Papa.parse(content, { header: true, skipEmptyLines: true });\n    if (parsedData.errors.length) {\n        console.error(\"CSV loading errors:\", parsedData.errors);\n        return false;\n    }\n    const rows = parsedData.data as Record<string, string>[];\n    return checkColumns(filename, rows, columnsValidation[filename])\n        && checkMissingValues(filename, rows, valuesValidation[filename])\n        && checkIdFormat(filename, rows, valuesValidation[filename]);\n}\n\nexport function checkColumns(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const headers = Object.keys(rows[0]);\n    // Check for missing columns\n    const missingColumns = requiredColumns.filter(col => !headers.includes(col));\n    if (missingColumns.length) {\n        const error = `${filename}: the following required columns are missing: ${missingColumns.join(\", \")}`\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\nexport function checkMissingValues(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const cellErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Checks empty\n            if (!row[column] || row[column].trim() === \"\") {\n                cellErrors.push(`${filename}: row ${index + 1} is missing a value in column: ${column}`);\n            }\n        });\n    });\n    if (cellErrors.length > 0) {\n        console.error(`File ${filename} had ${cellErrors.length} missing values`)\n    }\n    return cellErrors.length <= 0\n}\n\nexport function checkIdFormat(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const indiIdErrors: string[] = [];\n    const famIdErrors: string[] = [];\n    const langIdErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Check id format\n            switch(filename) {\n                case \"1_individuals.csv\":\n                    if (column === \"id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"2_relationships.csv\":\n                    if ([\"person_id\", \"father_id\", \"mother_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"3_families.csv\":\n                    if (column === \"id\" && !row[column].startsWith('F')) {\n                        famIdErrors.push(`${filename}: row ${index + 1} is not a valid family ID`);\n                        console.log(`${filename}: '${column}' must start with 'F'`)\n                    }\n                    if ([\"husband_id\", \"wife_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"4_individuals_languages.csv\":\n                    if (column === \"person_id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    if (column === \"language_id\" && isNaN(Number(row[column]))) {\n                        langIdErrors.push(`${filename}: row ${index + 1} is not a valid language ID`);\n                        console.log(`${filename}: '${column}' must be a number`)\n                    }\n                    break;\n            }\n        });\n    });\n    return indiIdErrors.length <= 0 && famIdErrors.length <= 0 && langIdErrors.length <= 0\n}\n\n","const Graph = require(\"graphology\");\nconst shortestPath = require(\"graphology-shortest-path\");\n\nexport enum Sex {\n    M = \"M\",\n    F = \"F\"\n}\n\nexport class Individual {\n    id: string | null = null;\n    sex: Sex | null = null;\n    givenName?: string;\n    surname?: string;\n    nickname?: string;\n    birthYear?: number;\n    ethnicity?: string;\n    tribe?: string;\n    familySpouses: string[] = [];\n    languages: string[] = [];\n    familyChild?: string;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        sex: Sex;\n        givenName?: string;\n        surname?: string;\n        nickname?: string;\n        birthYear?: number;\n        ethnicity?: string;\n        tribe?: string;\n        familySpouses?: string[];\n        languages?: string[];\n        familyChild?: string;\n        notes?: string;\n    }) {\n        Object.assign(this, params);\n    }\n\n    get name(): string | null {\n        if (this.givenName || this.surname || this.nickname) {\n            let name = \"\";\n            if (this.givenName) name += this.givenName;\n            if (this.nickname) name += ` \"${this.nickname}\"`;\n            if (this.surname) name += ` /${this.surname}/`;\n            return name;\n        }\n        return null;\n    }\n\n    generation(relationships: Record<string, [string | null, string | null]>): string {\n        const g = new Graph({ type: \"directed\" });\n        // Add all nodes\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (!g.hasNode(indID)) {\n                g.addNode(indID);\n            }\n            if (!g.hasNode(fatherId)) {\n                g.addNode(fatherId);\n            }\n            if (!g.hasNode(motherId)) {\n                g.addNode(motherId);\n            }\n        }\n        // Add all edges\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (fatherId) g.addEdge(fatherId, indID);\n            if (motherId) g.addEdge(motherId, indID);\n        }\n        // @ts-ignore\n        const source = g.nodes().reduce((min, current) => {\n            const minValue = parseInt(min.slice(1), 10);\n            const currentValue = parseInt(current.slice(1), 10);\n            return currentValue < minValue ? current : min;\n        });\n        // @ts-ignore\n        return shortestPath.singleSourceLength(g, source)[this.id]  // root MUST have the lowest ID!\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ INDI\\n`;\n\n        if (this.name) gedcom += `1 NAME ${this.name}\\n`;\n        if (this.givenName) gedcom += `2 GIVN ${this.givenName}\\n`;\n        if (this.surname) gedcom += `2 SURN ${this.surname}\\n`;\n        if (this.nickname) gedcom += `2 NICK ${this.nickname}\\n`;\n        gedcom += `1 SEX ${this.sex}\\n`;\n        if (this.birthYear) {\n            gedcom += `1 BIRT\\n`;\n            gedcom += `2 DATE ${this.birthYear}\\n`;\n        }\n        if (this.ethnicity) gedcom += `1 _ETHN ${this.capitalize(this.ethnicity)}\\n`;\n        if (this.tribe) gedcom += `1 _TRIB ${this.capitalize(this.tribe)}\\n`;\n        for (const language of this.languages) {\n            gedcom += `1 LANG ${this.capitalize(language)}\\n`;\n        }\n        for (const famID of this.familySpouses) {\n            gedcom += `1 FAMS @${famID}@\\n`;\n        }\n        if (this.familyChild) gedcom += `1 FAMC @${this.familyChild}@\\n`;\n        if (this.notes) gedcom += `1 NOTE ${this.notes}\\n`;\n\n        return gedcom;\n    }\n\n    private capitalize(str: string): string {\n        return str\n            .toLowerCase()\n            .split(/[-\\s]/)\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join((str.includes('-') ? '-' : ' '));\n    }\n}\n","export class Family {\n    id: string;\n    husband: string;\n    wife: string;\n    marriaged: boolean = false;\n    children: string[] = [];\n    divorced?: boolean = false;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        husband: string;\n        wife: string;\n        marriaged?: boolean;\n        children?: string[];\n        divorced?: boolean;\n        notes?: string;\n    }) {\n        this.id = params.id;\n        this.husband = params.husband;\n        this.wife = params.wife;\n        this.marriaged = params.marriaged ?? false;\n        this.children = params.children ?? [];\n        this.divorced = params.divorced ?? false;\n        this.notes = params.notes;\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ FAM\\n`;\n        gedcom += `1 HUSB @${this.husband}@\\n`;\n        gedcom += `1 WIFE @${this.wife}@\\n`;\n        if (this.marriaged) {\n            gedcom += `1 MARR\\n`;\n        } else {\n            gedcom += `1 MARS\\n`;\n            gedcom += `2 TYPE \"Common Law\"\\n`;\n        }\n        for (const childId of this.children) {\n            gedcom += `1 CHIL @${childId}@\\n`;\n        }\n        if (this.divorced) {\n            gedcom += `1 DIV\\n`;\n        }\n        if (this.notes) {\n            gedcom += `1 NOTE ${this.notes}\\n`;\n        }\n        return gedcom;\n    }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport {Individual, Sex} from \".././model/individual\";\nimport {Language} from \".././model/languages-loader\";\nimport {Family} from \".././model/family\";\n\ntype Relationships = Record<string, [string, string]>;\n\nexport async function csvToGedcom(\n    languagesContents: string,\n    individualsContent: string,\n    relationshipsContent: string,\n    familiesContent: string,\n    individualsLanguagesContent: string | null,\n    egoIndiId: string | null\n) {\n    try {\n        const individuals = parseIndividuals(individualsContent);\n        const relationships = parseRelationships(relationshipsContent);\n        const families = parseFamilies(familiesContent);\n        mapFamiliesChildren(relationships, families, individuals);\n        mapIndividualsSpouses(families, individuals);\n        if (languagesContents && individualsLanguagesContent) {\n            const languages = parseLanguages(languagesContents);\n            const individualsLanguages = parseIndividualsLanguages(individualsLanguagesContent);\n            mapIndividualsLanguages(individuals, individualsLanguages, languages);\n        }\n        return await createGedcomString(individuals, relationships, families, egoIndiId);\n    } catch (e) {\n        throw e;\n    }\n}\n\nfunction parseIndividuals(individualsContent: string): Individual[] {\n    const rows = parseCSV(individualsContent);\n    return rows.map(row => new Individual({\n        id: row[\"id\"],\n        sex: row[\"sex\"] as Sex,\n        givenName: row[\"name\"] || undefined,\n        surname: row[\"surname\"] || undefined,\n        nickname: row[\"nickname\"] || undefined,\n        birthYear: row[\"YOB\"] ? parseInt(row[\"YOB\"], 10) : undefined,\n        ethnicity: row[\"ethnic\"] || undefined,\n        tribe: row[\"clan\"] || undefined,\n        familySpouses: [],\n        languages: [],\n        notes: row[\"notes\"] || undefined\n    }));\n\n}\n\nfunction parseLanguages(languagesContents: string): Language[] {\n    const rows = parseCSV(languagesContents);\n    return rows.map(row => ({\n        id: row[\"id\"],\n        name: row[\"name\"]\n    }));\n}\n\nfunction parseIndividualsLanguages(individualsLanguagesContent: string): Record<string, string[]> {\n    const rows = parseCSV(individualsLanguagesContent);\n    const individualsLanguages: Record<string, string[]> = {};\n    rows.forEach(row => {\n        const personId = row[\"person_id\"];\n        if (!individualsLanguages[personId]) {\n            individualsLanguages[personId] = [];\n        }\n        individualsLanguages[personId].push(row[\"language_id\"]);\n    });\n    return individualsLanguages;\n}\n\nfunction parseRelationships(relationshipsContent: string): Relationships {\n    const rows = parseCSV(relationshipsContent);\n    const relationships: Relationships = {};\n    rows.forEach(row => {\n        if (row[\"father_id\"] && row[\"mother_id\"]) {\n            relationships[row[\"person_id\"]] = [row[\"father_id\"], row[\"mother_id\"]];\n        }\n    });\n    return relationships;\n}\n\nfunction parseFamilies(familiesContent: string): Family[] {\n    const rows = parseCSV(familiesContent);\n    return rows.map(row => new Family({\n        id: row[\"id\"],\n        husband: row[\"husband_id\"],\n        wife: row[\"wife_id\"],\n        children: [],\n        notes: row[\"notes\"] || undefined\n    }));\n}\n\nfunction mapIndividualsLanguages(\n    individuals: Individual[],\n    individualsLanguages: Record<string, string[]>,\n    languages: Language[]\n): void {\n    Object.entries(individualsLanguages).forEach(([personId, langIds]) => {\n        const individual = individuals.find(ind => ind.id === personId);\n        if (!individual)\n            throw new Error(`Individual not found: ${personId}`);\n        langIds.forEach(langId => {\n            const language = languages.find(lang => lang.id === langId);\n            if (!language)\n                throw new Error(`Language not found: ${langId}`);\n            individual.languages.push(language.name);\n        });\n    });\n}\n\nfunction mapFamiliesChildren(\n    relationships: Relationships,\n    families: Family[],\n    individuals: Individual[]\n): void {\n    Object.entries(relationships).forEach(([childId, [fatherId, motherId]]) => {\n        const family = families.find(fam => fam.husband === fatherId && fam.wife === motherId);\n        if (!family)\n            throw new Error(`Family not found: ${childId} (${fatherId}, ${motherId})`);\n        family.children.push(childId);\n        const individual = individuals.find(ind => ind.id === childId);\n        if (!individual)\n            throw new Error(`Individual not found: ${childId}`);\n        individual.familyChild = family.id;\n    });\n}\n\nfunction mapIndividualsSpouses(families: Family[], individuals: Individual[]): void {\n    families.forEach(family => {\n        const husband = individuals.find(ind => ind.id === family.husband);\n        if (!husband)\n            throw new Error(`Husband not found: ${family.husband}`);\n        husband.familySpouses.push(family.id);\n        const wife = individuals.find(ind => ind.id === family.wife);\n        if (!wife)\n            throw new Error(`Wife not found: ${family.wife}`);\n        wife.familySpouses.push(family.id);\n    });\n}\n\nasync function createGedcomString(\n    individuals: Individual[],\n    relationships: Relationships,\n    families: Family[],\n    egoIndiId: string | null\n) {\n    let egoIndi = null\n    let lowestEgoIndi = null\n    let egoGeneration = null\n    let filename = null\n\n    if (egoIndiId) {\n        try {\n            egoIndi = individuals.filter(_i => _i.id === egoIndiId);\n            // @ts-ignore\n            lowestEgoIndi = egoIndi.reduce((prev, current) => (prev.id < current.id ? prev : current));\n            egoGeneration = lowestEgoIndi.generation(relationships)\n            filename = `${lowestEgoIndi.givenName?.toLowerCase()}_${lowestEgoIndi.surname?.toLowerCase()}`\n            if (!lowestEgoIndi || !egoGeneration)\n                throw new Error()\n        } catch(e) {\n            throw new Error(`Ego individual not found: ${egoIndiId}`);\n        }\n    }\n    const header = await createHeader(\n        filename,\n        lowestEgoIndi ? lowestEgoIndi.id : null,\n        egoGeneration ? egoGeneration : null\n    );\n    const indiRecords = individuals.map(indi => indi.asGedcom()).join(\"\\n\");\n    const famRecords = families.map(fam => fam.asGedcom()).join(\"\\n\");\n    const tail = await createTail(filename);\n\n    return [header, indiRecords, famRecords, tail].join(\"\\n\")\n}\n\nasync function createHeader(filename: string | null, egoId: string | null, egoGen: string | null) {\n    const headerFile = await fetch(\"data/header.ged\");\n    const headerTemplate = await headerFile.text();\n    const date = new Date().toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n    let replaced = headerTemplate\n        .replace(/{file}/g, filename ? filename: \"genealogy.ged\")\n        .replace(/{date}/g, date)\n        .replace(/{subm}/g, 'drexa1@hotmail.com')\n    if (egoId && egoGen) {\n        const egoSection = `\\n0 @${egoId}@ EGO\\n1 GEN ${egoGen}\\n`;\n        replaced += egoSection;\n    }\n    return replaced\n}\n\nasync function createTail(filename: string | null) {\n    let repoSection = \"\"\n    const uid = uuidv4().toUpperCase();\n    if (filename) {\n        const repo = `The ${filename\n            .replace(/_/g, ' ')\n            .toLowerCase()\n            .replace(/\\b\\w/g, (char) => char.toUpperCase())} family`;\n        repoSection += `0 @R0@ REPO\\n1 _UID ${uid}\\n1 NAME ${repo}\\n`\n    }\n    const tailFile = await fetch(\"data/tail.ged\");\n    const tailTemplate = await tailFile.text();\n    return repoSection + tailTemplate\n}\n\n// CSV parser utility\nfunction parseCSV(data: string): Record<string, string>[] {\n    const [header, ...rows] = data.split(\"\\n\").filter(line => line.trim() !== \"\");\n    const keys = header.split(\",\");\n    return rows.map(row => {\n        const values = row.split(\",\");\n        return keys.reduce((acc, key, index) => {\n            acc[key.trim()] = values[index].trim();\n            return acc;\n        }, {} as Record<string, string>);\n    });\n}\n","import {MenuItem, MenuType} from \"./menu_item\";\nimport {Button, Icon, SemanticCOLORS, Input, Form, Header, Label, Modal, Message} from \"semantic-ui-react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {SyntheticEvent, useEffect, useState} from \"react\";\nimport * as queryString from \"query-string\";\nimport {useHistory} from \"react-router\";\nimport {loadFile} from \"../datasource/load_data\";\nimport md5 from \"md5\";\nimport {\n    FamiliesTableExample,\n    IndividualsLanguagesTableExample,\n    IndividualsTableExample,\n    RelationshipsTableExample\n} from \"./convert_tables\";\nimport {\n    columnsValidation,\n    validateCSV,\n    validateFilenames\n} from \".././model/validate_csv\";\nimport {csvToGedcom} from \"../util/convert_csv\";\nimport {analyticsEvent} from \"../util/analytics\";\n\ninterface Props {\n    menuType: MenuType\n}\n\nexport const initialHeaderColors: Record<string, SemanticCOLORS> = {\n    \"1_individuals.csv\": \"yellow\",\n    \"2_relationships.csv\": \"yellow\",\n    \"3_families.csv\": \"yellow\",\n    \"4_individuals_languages.csv\": \"blue\"\n}\n\n/** Displays and handles the \"Convert CSV's\" menu. */\nexport function ConvertCSVMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const[inputFiles, setInputFiles] = useState<File[]>([])\n    const[headerColors, setHeaderColors] = useState<Record<string, SemanticCOLORS>>(initialHeaderColors)\n    const [egoIndiId, setEgoIndiId] = useState<string | null>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const history = useHistory()\n\n    function closeDialog() {\n        setInputFiles([])\n        setErrors([])\n        setHeaderColors(initialHeaderColors)\n        setDialogOpen(false)\n    }\n\n    function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        setErrors([])\n        const files = (event.target as HTMLInputElement).files;\n        // Validate number of files\n        if (!files) {\n            return\n        }\n        // Validate file names\n        if (!validateFilenames(Array.from(files), Object.keys(columnsValidation))) {\n            return\n        }\n        // Validate schemas\n        const fileReadPromises = Array.from(files).map(file => {\n            return new Promise<File | null>((resolve) => {\n                const reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n                reader.onload = () => {\n                    const fileContent = reader.result as string;\n                    const validFile = validateCSV(file.name, fileContent);\n                    if (validFile) {\n                        resolve(file);\n                    } else {\n                        resolve(null);\n                    }\n                };\n                reader.onerror = () => {\n                    console.error(\"Error reading file:\", file.name);\n                    setErrors([\"Error reading file:\" + file.name])\n                    resolve(null); // Resolve as null to exclude invalid files\n                };\n            });\n        });\n        // Wait for all file validations to complete\n        Promise.all(fileReadPromises).then(results => {\n            const validFiles = results.filter((file): file is File => file !== null);\n            const invalidFiles = Array.from(files)\n                .filter((file: File) => !validFiles.some(validFile => validFile.name === file.name))\n                .map(file => `'${file.name}'`)\n                .join(\", \");\n            if (invalidFiles) {\n                setErrors([\"Files had errors. You can check them in the browser console\"])\n            }\n            setHeaderColors(changeHeaderColors(files, validFiles));\n            setInputFiles(validFiles)\n            // Validate number of files\n            if (!validFiles || validFiles.length < 3 || validFiles.length > 4) {\n                console.error(\"Required files missing...\")\n                return\n            }\n            // All validations passed, highlight Ego input\n            const egoInput = document.querySelector(\"#egoIndi\") as HTMLDivElement;\n            // @ts-ignore\n            const egoTag = egoInput.parentElement.querySelector(\".ui.label.label\") as HTMLDivElement;\n            if (egoTag) {\n                egoTag.style.setProperty(\"background-color\", \"orange\");\n                egoTag.style.setProperty(\"color\", \"white\");\n            }\n            // (event.target as HTMLInputElement).value = ''; // Reset the file input\n        });\n    }\n\n    function changeHeaderColors(files: FileList, validFiles: File[]) {\n        const newHeaderColors = { ...initialHeaderColors };\n        Array.from(files).forEach(file => {\n            if (newHeaderColors.hasOwnProperty(file.name)) {\n                newHeaderColors[file.name] = validFiles.includes(file) ? \"green\" : \"red\";\n            }\n        });\n        return newHeaderColors;\n    }\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    async function convert2gedcom() {\n        try {\n            const individualsFile = inputFiles.find(file => file.name === \"1_individuals.csv\");\n            const relationshipsFile = inputFiles.find(file => file.name === \"2_relationships.csv\");\n            const familiesFile = inputFiles.find(file => file.name === \"3_families.csv\");\n            const individualsLanguagesFile = inputFiles.find(file => file.name === \"4_individuals_languages.csv\");\n\n            const [individualsContent, relationshipsContent, familiesContent] = await Promise.all([\n                readFileContents(individualsFile!),\n                readFileContents(relationshipsFile!),\n                readFileContents(familiesFile!),\n            ])\n            const individualsLanguagesContent = individualsLanguagesFile ? await readFileContents(individualsLanguagesFile) : null;\n\n            const languagesFile = await fetch(\"data/languages.csv\");\n            const languagesContents = await languagesFile.text();\n\n            const gedcomString = await csvToGedcom(\n                languagesContents,\n                individualsContent,\n                relationshipsContent,\n                familiesContent,\n                individualsLanguagesContent,\n                egoIndiId\n            )\n            const gedcomFile = new Blob([gedcomString])\n            const {gedcom, images} = await loadFile(gedcomFile);\n\n            // Hash GEDCOM contents with uploaded image file names.\n            const imageFileNames = Array.from(images.keys()).sort().join('|');\n            const hash = md5(md5(gedcom) + imageFileNames);\n\n            const search = queryString.parse(window.location.search);\n            const historyPush = search.file === hash ? history.replace : history.push;\n\n            historyPush({\n                pathname: '/view',\n                search: queryString.stringify({file: hash}),\n                state: {data: gedcom, images}\n            });\n            // Finally\n            analyticsEvent('topola_convert_csv');\n            closeDialog()\n        } catch (e) {\n            console.error(e);\n            setErrors([e.message])\n        }\n    }\n\n    const readFileContents = (file: File): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                resolve(reader.result as string);\n            }\n            reader.onerror = (error) => reject(error);\n            reader.readAsText(file, \"UTF-8\");\n        });\n    };\n\n    function convertCSVModal() {\n        return (\n            <Modal open={dialogOpen} onClose={closeDialog} centered={true}>\n                <Header>\n                    <Icon name=\"sitemap\"/>\n                    <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV files to GEDCOM\"/>\n                </Header>\n                <Modal.Content>\n                    <Message negative className={errors.length === 0 ? \"hidden\" : undefined}>\n                        <p>{errors}</p>\n                    </Message>\n                    <Form onSubmit={() => convert2gedcom()}>\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"1_individuals.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>1_individuals.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"2_relationships.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>2_relationships.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"3_families.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>3_families.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"4_individuals_languages.csv\") ? \"green\" : undefined}\n                            style={{float: \"right\"}}>\n                            <Icon name=\"file text\"/>4_individuals_languages.csv\n                        </Label>}\n\n                        <IndividualsTableExample headerColor={headerColors[\"1_individuals.csv\"]}/>\n                        <RelationshipsTableExample headerColor={headerColors[\"2_relationships.csv\"]}/>\n                        <FamiliesTableExample headerColor={headerColors[\"3_families.csv\"]}/>\n                        <IndividualsLanguagesTableExample headerColor={headerColors[\"4_individuals_languages.csv\"]}/>\n\n                        <div style={{textAlign: \"center\", marginBottom: 10}}>\n                            <Input id=\"egoIndi\"\n                                   disabled={\n                                       ![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                                           inputFiles.some((file: File) => file.name === fileName)\n                                       )\n                                    }\n                                   fluid\n                                   size=\"small\"\n                                   label=\"Ego ID\"\n                                   labelPosition=\"left\"\n                                   icon=\"user\"\n                                   placeholder=\"I000\"\n                                   onChange={(_e, { value }) => setEgoIndiId(value)}\n                            />\n                        </div>\n\n                        <input type=\"file\"\n                               accept=\".csv\"\n                               id=\"fileInput\"\n                               multiple\n                               onChange={(e) => handleUpload(e)}\n                        />\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => {\n                        closeDialog()\n                    }}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary\n                        disabled={![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                            inputFiles.some((file: File) => file.name === fileName)\n                        )}\n                        onClick={() => convert2gedcom()}>\n                            <FormattedMessage id=\"load_from_gedcom.generate\" defaultMessage=\"Generate\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"file excel\"/>\n                <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV's\"/>\n            </MenuItem>\n            {convertCSVModal()}\n        </>\n    );\n}","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from '../lib/topola';\n\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n    id: string;\n    indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n    search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n    return input\n        .toLocaleLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n    if (a.score !== b.score) {\n        return b.score - a.score;\n    }\n    return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n    indi: JsonIndi,\n    indiMap: Map<String, JsonIndi>,\n    famMap: Map<string, JsonFam>,\n): string {\n    return (indi.fams || [])\n        .map((famId) => famMap.get(famId))\n        .map((fam) => fam && fam.husb)\n        .map((husbId) => husbId && indiMap.get(husbId))\n        .map((husband) => husband && husband.lastName)\n        .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n    private index: lunr.Index | undefined;\n    private indiMap: Map<string, JsonIndi>;\n    private famMap: Map<string, JsonFam>;\n\n    constructor(data: JsonGedcomData) {\n        this.indiMap = idToIndiMap(data);\n        this.famMap = idToFamMap(data);\n    }\n\n    initialize() {\n        const self = this;\n        this.index = lunr(function () {\n            //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n            self.initMultiLingualLunrWithoutTrimmer(this, [\n                'de',\n                'en',\n                'fr',\n                'it',\n                'ru',\n            ]);\n            this.ref('id');\n            this.field('id');\n            this.field('name', {boost: 10});\n            this.field('normalizedName', {boost: 8});\n            this.field('spouseLastName', {boost: 2});\n            this.field('normalizedSpouseLastName', {boost: 2});\n\n            self.indiMap.forEach((indi) => {\n                const name = [indi.firstName, indi.lastName].join(' ');\n                const spouseLastName = getHusbandLastName(\n                    indi,\n                    self.indiMap,\n                    self.famMap,\n                );\n                this.add({\n                    id: indi.id,\n                    name,\n                    normalizedName: normalize(name),\n                    spouseLastName,\n                    normalizedSpouseLastName: normalize(spouseLastName),\n                });\n            });\n        });\n    }\n\n    private initMultiLingualLunrWithoutTrimmer(\n        lunrInstance: any,\n        languages: string[],\n    ): void {\n        let wordCharacters = '';\n        const pipelineFunctions: PipelineFunction[] = [];\n        const searchPipelineFunctions: PipelineFunction[] = [];\n        languages.forEach((language) => {\n            if (language === 'en') {\n                wordCharacters += '\\\\w';\n                pipelineFunctions.unshift(lunr.stopWordFilter);\n                pipelineFunctions.push(lunr.stemmer);\n                searchPipelineFunctions.push(lunr.stemmer);\n            } else {\n                wordCharacters += lunr[language].wordCharacters;\n                if (lunr[language].stopWordFilter) {\n                    pipelineFunctions.unshift(lunr[language].stopWordFilter);\n                }\n                if (lunr[language].stemmer) {\n                    pipelineFunctions.push(lunr[language].stemmer);\n                    searchPipelineFunctions.push(lunr[language].stemmer);\n                }\n            }\n        });\n        lunrInstance.pipeline.reset();\n        lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n        if (lunrInstance.searchPipeline) {\n            lunrInstance.searchPipeline.reset();\n            lunrInstance.searchPipeline.add.apply(\n                lunrInstance.searchPipeline,\n                searchPipelineFunctions,\n            );\n        }\n    }\n\n    public search(input: string): SearchResult[] {\n        const query = input\n            .split(' ')\n            .filter((s) => !!s)\n            .map((s) => `${s} ${s}*`)\n            .join(' ');\n        const results = this.index!.search(query);\n        return results\n            .sort(compare)\n            .slice(0, MAX_RESULTS)\n            .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n    }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n    const index = new LunrSearchIndex(data);\n    index.initialize();\n    return index;\n}\n","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {useRef, useState} from \"react\";\nimport {ConvertCSVMenu} from \"./convert_menu\";\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n    onDownloadGedcom: () => void;\n    onResetView: () => void;\n}\n\ninterface Props {\n    showingChart: boolean;\n    data?: JsonGedcomData;\n    standalone: boolean;\n    eventHandlers: EventHandlers;\n}\n\nexport function TopBar(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    function FileMenus(screenSize: ScreenSize) {\n        const [menuOpen, setMenuOpen] = useState(false);\n        const cooldown = useRef(false);\n\n        // Debug handler\n        const toggleMenu = (state: boolean) => {\n            if (!state) {\n                cooldown.current = true;\n                setMenuOpen(false);\n                setTimeout(() => {\n                    cooldown.current = false;\n                }, 150);\n            } else if (!cooldown.current) {\n                setMenuOpen(true);\n            }\n        };\n\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <Dropdown\n                        onOpen={() => toggleMenu(true)}\n                        onClose={() => toggleMenu(false)}\n                        open={menuOpen}\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\">\n                        <Dropdown.Menu onClick={() => toggleMenu(false)}>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                            <ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        {/*<ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />*/}\n                    </>\n                );\n        }\n    }\n\n    interface ViewMenusProps {\n        currentView: string;\n        changeView: (view: string) => void;\n    }\n    function ViewMenus({ currentView, changeView }: ViewMenusProps) {\n        return (\n            <>\n                {currentView !== \"hourglass\" && (\n                    <Dropdown.Item onClick={() => changeView(\"hourglass\")}>\n                        <Icon name=\"hourglass\" />\n                        <FormattedMessage id=\"menu.hourglass\" defaultMessage=\"Hourglass\"/>\n                    </Dropdown.Item>\n                )}\n                {currentView !== \"relatives\" && (\n                    <Dropdown.Item onClick={() => changeView(\"relatives\")}>\n                        <Icon name=\"users\" />\n                        <FormattedMessage id=\"menu.relatives\" defaultMessage=\"All relatives\"/>\n                    </Dropdown.Item>\n                )}\n            </>\n        );\n    }\n\n    function ChartMenus(screenSize: ScreenSize) {\n        const [currentView, setCurrentView] = useState(\"hourglass\");\n        const changeView = (view: string) => {\n            setCurrentView(view);\n            const search = queryString.parse(location.search);\n            if (search.view !== view) {\n                search.view = view;\n                location.search = queryString.stringify(search);\n                history.push(location);\n            }\n        };\n\n        if (!props.showingChart) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\"/>\n                                </div>\n                            }\n                            className=\"item\">\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Divider/>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                    <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    {currentView === \"hourglass\" ? (\n                                        <>\n                                            <Icon name=\"hourglass\"/>\n                                            <FormattedMessage id=\"menu.hourglass\" defaultMessage=\"Hourglass\"/>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <Icon name=\"users\"/>\n                                            <FormattedMessage id=\"menu.relatives\" defaultMessage=\"All relatives\"/>\n                                        </>\n                                    )}\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>\n                                <ViewMenus currentView={currentView} changeView={changeView} />\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Menu.Item onClick={props.eventHandlers.onResetView}>\n                            <Icon name=\"target\" />\n                            <FormattedMessage id=\"menu.view.reset\" defaultMessage=\"Reset view\" />\n                        </Menu.Item>\n\n                        <Menu.Menu position=\"right\">\n                            <SearchBar\n                                data={props.data!}\n                                onSelection={props.eventHandlers.onSelection}\n                                {...props}\n                            />\n                        </Menu.Menu>\n                    </>\n                );\n            case ScreenSize.SMALL:\n                if (!props.showingChart) {\n                    return (\n                        <>\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </>\n                    );\n                } else {\n                    return (\n                        <>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Menu.Item onClick={props.eventHandlers.onResetView}>\n                                <Icon name=\"eye\" />\n                                <FormattedMessage id=\"menu.view.reset\" defaultMessage=\"Reset view\" />\n                            </Menu.Item>\n                        </>\n                    );\n                }\n        }\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {FileMenus(ScreenSize.LARGE)}\n                {ChartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {FileMenus(ScreenSize.SMALL)}\n                        {ChartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu as={Media} greaterThanOrEqual=\"large\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {desktopMenus()}\n            </Menu>\n            <Menu as={Media} at=\"small\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData, JsonIndi} from '../lib/topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n    const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n    if (result.id.length > 8) {\n        return name;\n    }\n    return (\n        <>\n            {name} <i>({result.id})</i>\n        </>\n    );\n}\n\ninterface Props {\n    /** Data used for the search index. */\n    data: JsonGedcomData;\n    onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n    const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n    const [searchString, setSearchString] = useState('');\n    const searchIndex = useRef<SearchIndex>();\n    const intl = useIntl();\n\n    function getDescriptionLine(indi: JsonIndi) {\n        const birthDate = formatDateOrRange(indi.birth, intl);\n        const deathDate = formatDateOrRange(indi.death, intl);\n        if (!deathDate) {\n            return birthDate;\n        }\n        return `${birthDate} – ${deathDate}`;\n    }\n\n    /** Produces an object that is displayed in the Semantic UI Search results. */\n    function displaySearchResult(result: SearchResult): SearchResultProps {\n        return {\n            id: result.id,\n            key: result.id,\n            title: getNameLine(result),\n            description: getDescriptionLine(result.indi),\n        } as SearchResultProps;\n    }\n\n    /** On search input change. */\n    function handleSearch(input: string | undefined) {\n        if (!input) {\n            return;\n        }\n        const results = searchIndex\n            .current!.search(input)\n            .map((result) => displaySearchResult(result));\n        setSearchResults(results);\n    }\n\n    const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n    /** On search result selected. */\n    function handleResultSelect(id: string) {\n        props.onSelection({id, generation: 0});\n        setSearchString('');\n    }\n\n    /** On search string changed. */\n    function onChange(value: string) {\n        debouncedHandleSearch.current(value);\n        setSearchString(value);\n    }\n\n    // Initialize the search index.\n    useEffect(() => {\n        searchIndex.current = buildSearchIndex(props.data);\n    }, [props.data]);\n\n    return (\n        <Search\n            onSearchChange={(_, data) => onChange(data.value!)}\n            onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n            results={searchResults}\n            noResultsMessage={intl.formatMessage({\n                id: 'menu.search.no_results',\n                defaultMessage: 'No results found',\n            })}\n            placeholder={intl.formatMessage({\n                id: 'menu.search.placeholder',\n                defaultMessage: 'Search for people',\n            })}\n            selectFirstResult={true}\n            value={searchString}\n            id=\"search\"\n        />\n    );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n    const lower = fileName.toLowerCase();\n    return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        const filesArray = Array.from(files);\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n        const gedcomFile =\n            filesArray.length === 1\n                ? filesArray[0]\n                : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n                filesArray[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Convert uploaded images to object URLs.\n        filesArray\n            .filter((file) => file.name !== gedcomFile.name && isImageFileName(file.name))\n            .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images}\n        });\n    }\n\n    const content = (\n        <>\n            <Icon name=\"folder open\"/>\n            <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\"/>\n        </>\n    );\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <label htmlFor=\"fileInput\">\n                    <Menu.Item as=\"a\">{content}</Menu.Item>\n                </label>\n            ) : (\n                <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                    {content}\n                </Dropdown.Item>\n            )}\n            <input className=\"hidden\"\n                type=\"file\"\n                accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n                id=\"fileInput\"\n                multiple\n                onChange={handleUpload}\n            />\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [url, setUrl] = useState('');\n    const inputRef = useRef<Input>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (dialogOpen) {\n            setUrl('');\n            inputRef.current!.focus();\n        }\n    }, [dialogOpen]);\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    function handleLoad() {\n        setDialogOpen(false);\n        if (url) {\n            history.push({\n                pathname: '/view',\n                search: queryString.stringify({url})\n            });\n        }\n    }\n\n    function loadFromUrlModal() {\n        return (\n            <Modal open={dialogOpen} onClose={() => setDialogOpen(false)} centered={false}>\n                <Header>\n                    <Icon name=\"cloud download\"/>\n                    <FormattedMessage id=\"load_from_url.title\" defaultMessage=\"Load from URL\"/>\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={handleLoad}>\n                        <Input\n                            placeholder=\"https://\"\n                            fluid\n                            value={url}\n                            onChange={(_, data) => setUrl(data.value)}\n                            ref={inputRef}\n                        />\n                        <p>\n                            <FormattedMessage\n                                id=\"load_from_url.comment\"\n                                defaultMessage={\n                                    'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                                }\n                                values={{\n                                    link: (\n                                        <a href=\"https://corsproxy.io/\">corsproxy.io</a>\n                                    ),\n                                }}\n                            />\n                        </p>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary onClick={handleLoad}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"cloud download\"/>\n                <FormattedMessage id=\"menu.load_from_url\" defaultMessage=\"Load from URL\"/>\n            </MenuItem>\n            {loadFromUrlModal()}\n        </>\n    );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\nimport {Language} from \"./model/languages-loader\";\nimport {useState} from \"react\";\n\nexport enum ChartColors {\n    NO_COLOR,\n    COLOR_BY_SEX,\n    COLOR_BY_GENERATION,\n    COLOR_BY_ETHNICITY,\n    COLOR_BY_NR_LANGUAGES = 4,\n    COLOR_BY_LANGUAGE = 5,\n}\n\nexport enum LanguagesArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum EthnicityArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum IdsArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum SexArg {\n    HIDE,\n    SHOW,\n}\n\nexport interface Config {\n    color: ChartColors;\n    languages: LanguagesArg;\n    ethnicity: EthnicityArg;\n    id: IdsArg;\n    sex: SexArg;\n    renderLanguagesOption: boolean\n    renderEthnicityOption: boolean\n    languageOptions: Language[],\n    selectedLanguage: string | null\n}\n\nexport const DEFAULT_CONFIG: Config = {\n    color: ChartColors.COLOR_BY_GENERATION,\n    languages: LanguagesArg.HIDE,\n    ethnicity: EthnicityArg.HIDE,\n    id: IdsArg.SHOW,\n    sex: SexArg.SHOW,\n    renderLanguagesOption: false,\n    renderEthnicityOption: false,\n    languageOptions: [],\n    selectedLanguage: null,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n    ['n', ChartColors.NO_COLOR],\n    ['g', ChartColors.COLOR_BY_GENERATION],\n    ['s', ChartColors.COLOR_BY_SEX],\n    ['e', ChartColors.COLOR_BY_ETHNICITY],\n    ['nl', ChartColors.COLOR_BY_NR_LANGUAGES],\n    ['l', ChartColors.COLOR_BY_LANGUAGE],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst LANGUAGES_ARG = new Map<string, LanguagesArg>([\n    ['h', LanguagesArg.HIDE],\n    ['s', LanguagesArg.SHOW],\n]);\nconst LANGUAGES_ARG_INVERSE = new Map<LanguagesArg, string>();\nLANGUAGES_ARG.forEach((v, k) => LANGUAGES_ARG_INVERSE.set(v, k));\n\nconst ETHNICITY_ARG = new Map<string, EthnicityArg>([\n    ['h', EthnicityArg.HIDE],\n    ['s', EthnicityArg.SHOW],\n]);\nconst ETHNICITY_ARG_INVERSE = new Map<EthnicityArg, string>();\nETHNICITY_ARG.forEach((v, k) => ETHNICITY_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, IdsArg>([\n    ['h', IdsArg.HIDE],\n    ['s', IdsArg.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<IdsArg, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, SexArg>([\n    ['h', SexArg.HIDE],\n    ['s', SexArg.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<SexArg, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n    const getParam = (name: string) => {\n        return typeof args[name] === 'string' || typeof args[name] === 'number' ? args[name] : undefined;\n    };\n    return {\n        color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n        languages: LANGUAGES_ARG.get(getParam('l') ?? '') ?? DEFAULT_CONFIG.languages,\n        selectedLanguage: getParam('n') ?? DEFAULT_CONFIG.selectedLanguage,\n        ethnicity: ETHNICITY_ARG.get(getParam('e') ?? '') ?? DEFAULT_CONFIG.ethnicity,\n        id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n        sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n        renderEthnicityOption: DEFAULT_CONFIG.renderEthnicityOption,\n        renderLanguagesOption: DEFAULT_CONFIG.renderLanguagesOption,\n        languageOptions: DEFAULT_CONFIG.languageOptions\n    };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n    return {\n        c: COLOR_ARG_INVERSE.get(config.color),\n        l: LANGUAGES_ARG_INVERSE.get(config.languages),\n        e: ETHNICITY_ARG_INVERSE.get(config.ethnicity),\n        i: ID_ARG_INVERSE.get(config.id),\n        s: SEX_ARG_INVERSE.get(config.sex),\n        n: config.selectedLanguage\n    };\n}\n\nexport function ConfigPanel(props: {config: Config; onChange: (config: Config) => void}) {\n    const [languagesEnabled, setLanguagesEnabled] = useState(props.config.languages === LanguagesArg.SHOW);\n    const [ethnicityEnabled, setEthnicityEnabled] = useState(props.config.ethnicity === EthnicityArg.SHOW);\n    const [idsEnabled, setIdsEnabled] = useState(props.config.id === IdsArg.SHOW);\n    const [sexEnabled, setSexEnabled] = useState(props.config.sex === SexArg.SHOW);\n\n    const toggleLanguages = (newState: LanguagesArg) => {\n        setLanguagesEnabled(!languagesEnabled);\n        props.onChange({...props.config, languages: newState});\n    };\n    const toggleEthnicity = (newState: EthnicityArg) => {\n        setEthnicityEnabled(!ethnicityEnabled);\n        props.onChange({...props.config, ethnicity: newState});\n    };\n    const toggleIds = (newState: IdsArg) => {\n        setIdsEnabled(!idsEnabled);\n        props.onChange({...props.config, id: newState});\n    };\n    const toggleSex = (newState: SexArg) => {\n        setSexEnabled(!sexEnabled);\n        props.onChange({...props.config, sex: newState});\n    };\n\n    const languageOptions = [];\n    for (let i = 0; i < props.config.languageOptions.length; i++) {\n        const language = props.config.languageOptions[i];\n        languageOptions.push(\n            <Form.Field key={i} className={!props.config.renderLanguagesOption ? 'hidden' : 'no-margin suboption'}>\n                <Checkbox\n                    radio\n                    label={language.name + \" (\" + language.abbreviation + \")\"}\n                    name=\"checkboxRadioGroup\"\n                    value={i}\n                    checked={props.config.selectedLanguage === language.id}\n                    onClick={\n                        () => {\n                            props.onChange({\n                                ...props.config,\n                                selectedLanguage: language.id,\n                                color: ChartColors.COLOR_BY_LANGUAGE,\n                                languages: LanguagesArg.SHOW,\n                            });\n                            setLanguagesEnabled(true);\n                        }\n                    }\n                />\n            </Form.Field>\n        );\n    }\n    return (\n        <Form className=\"details no-border-bottom\">\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Header sub style={{ \"margin-bottom\": \"14px\" }}>\n                            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\"/>\n                        </Header>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"none\"\n                                checked={props.config.color === ChartColors.NO_COLOR}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.NO_COLOR,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"generation\"\n                                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_GENERATION,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by gender\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"gender\"\n                                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_SEX,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_ETHNICITY\" defaultMessage=\"by ethnicity\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"ethnicity\"\n                                checked={props.config.color === ChartColors.COLOR_BY_ETHNICITY}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_ETHNICITY,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.SHOW,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(true);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_LANGUAGES\" defaultMessage=\"by no. languages\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"languages\"\n                                checked={props.config.color === ChartColors.COLOR_BY_NR_LANGUAGES}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_NR_LANGUAGES,\n                                            languages: LanguagesArg.SHOW,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(true);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        {languageOptions}\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"languages\"\n                                  checked={languagesEnabled}\n                                  onClick={() => toggleLanguages(languagesEnabled ? LanguagesArg.HIDE : LanguagesArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {languagesEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.languages\" defaultMessage=\"languages\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ethnicity\"\n                                  checked={ethnicityEnabled}\n                                  onClick={() => toggleEthnicity(ethnicityEnabled ? EthnicityArg.HIDE : EthnicityArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {ethnicityEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ethnicity\" defaultMessage=\"ethnicity\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ids\"\n                                  checked={idsEnabled}\n                                  onClick={() => toggleIds(idsEnabled ? IdsArg.HIDE : IdsArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {idsEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"sex\"\n                                  checked={sexEnabled}\n                                  onClick={() => toggleSex(sexEnabled ? SexArg.HIDE : SexArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {sexEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.sex\" defaultMessage=\"sex\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n            <div style={{textAlign: \"center\"}}>\n                <Form.Button primary onClick={\n                    () => {\n                        props.onChange(DEFAULT_CONFIG);\n                        setEthnicityEnabled(false);\n                        setLanguagesEnabled(false);\n                        setIdsEnabled(true);\n                        setSexEnabled(true);\n                    }\n                }>\n                    <FormattedMessage id=\"config.reset\" defaultMessage=\"Reset\"/>\n                </Form.Button>\n            </div>\n        </Form>\n\n);\n}\n","import {ChartColors, LanguagesArg, EthnicityArg, IdsArg, SexArg} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {D3ZoomEvent, zoom, ZoomBehavior, ZoomedElementBaseType, zoomTransform,} from 'd3-zoom';\nimport {\n    ChartColors as TopolaChartColors,\n    ChartHandle,\n    createChart,\n    DetailedRenderer,\n    HourglassChart,\n    RelativesChart,\n    IndiInfo,\n    JsonGedcomData,\n} from './lib/topola';\nimport {GedcomData} from \"./util/gedcom_util\";\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n * @param event\n */\nfunction zoomed(\n    size: [number, number],\n    event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = event.transform.k;\n    const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    select(\"#chartSvg\")\n        .attr(\"width\", size[0] * scale)\n        .attr(\"height\", size[1] * scale)\n        .attr(\"transform\", `translate(${offsetX}, ${offsetY})`);\n    select(\"#chart\").attr(\"transform\", `scale(${scale})`);\n    parent.scrollLeft = -event.transform.x;\n    parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const x = parent.scrollLeft + parent.clientWidth / 2;\n    const y = parent.scrollTop + parent.clientHeight / 2;\n    const scale = zoomTransform(parent).k;\n    select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise<string>((resolve) => {\n        reader.onload = (e) => resolve((e.target as FileReader).result as string);\n    });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n    const href = image.href.baseVal;\n    if (!href) {\n        return;\n    }\n    try {\n        const response = await fetch(href);\n        const blob = await response.blob();\n        image.href.baseVal = await loadAsDataUrl(blob);\n    } catch (e) {\n        console.warn(\"Failed to load image:\", e);\n    }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n    const images = Array.from(svg.getElementsByTagName('image'));\n    await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    return new Promise<HTMLImageElement>((resolve) => {\n        image.addEventListener(\"load\", () => resolve(image));\n    });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n    const canvas = document.createElement(\"canvas\");\n    // Scale image for better quality.\n    canvas.width = image.width * 2;\n    canvas.height = image.height * 2;\n    const ctx = canvas.getContext(\"2d\")!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob) {\n                resolve(blob);\n            } else {\n                reject();\n            }\n        }, type);\n    });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n    const svg = document.getElementById(\"chartSvg\")!.cloneNode(true) as Element;\n    svg.removeAttribute(\"transform\");\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\"width\", String(Number(svg.getAttribute(\"width\")) / scale));\n    svg.setAttribute(\n        \"height\",\n        String(Number(svg.getAttribute(\"height\")) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute(\"transform\");\n    return svg;\n}\n\nasync function getSvgContentsWithInlinedImages() {\n    const svg = getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n}\n\nexport async function downloadSvg(filename: string | undefined) {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    saveAs(blob, filename ? filename + \".svg\" : \"genealogy.svg\");\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng(filename: string | undefined) {\n    const canvas = await drawOnCanvas();\n    const blob = await canvasToBlob(canvas, \"image/png\");\n    saveAs(blob, filename ? filename + \".png\" : \"genealogy.png\");\n}\n\nexport async function downloadPdf(filename: string | undefined) {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import(\"jspdf\");\n    const canvas = await drawOnCanvas();\n    const doc = new jspdf({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: \"pt\",\n        format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, \"PNG\", 0, 0, canvas.width, canvas.height, \"NONE\");\n    doc.save(filename ? filename + \".pdf\" : \"genealogy.pdf\");\n}\n\nexport async function downloadGedcom(gedcom: string, filename: string | undefined) {\n    const blob = new Blob([gedcom], {type: \"text/plain\"});\n    saveAs(blob, filename ? filename + \".ged\" : \"genealogy.ged\");\n}\n\ninterface GedcomTreeItem {\n    tag: string;\n    data: string;\n}\nexport function getFilename(gedcom: GedcomData | undefined) {\n    const filename = Object.entries(gedcom?.head || {})\n        .filter((k) => k[0] === \"tree\")\n        .map(_ => _[1])\n        .map(obj => obj.find((sub: GedcomTreeItem) => sub.tag === 'FILE'))\n        .map(file => file?.data)[0];\n    return !filename ? null : filename.substring(0, filename.lastIndexOf('.')) || filename; // Remove file extension (if any)\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n    Hourglass,\n    Relatives\n}\n\nfunction getChartType(chartType: ChartType) {\n    switch (chartType) {\n        case ChartType.Hourglass:\n            return HourglassChart;\n        case ChartType.Relatives:\n            return RelativesChart;\n        default:\n            return HourglassChart;\n    }\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n    [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n    [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n    [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n    [ChartColors.COLOR_BY_ETHNICITY, TopolaChartColors.COLOR_BY_ETHNICITY],\n    [ChartColors.COLOR_BY_NR_LANGUAGES, TopolaChartColors.COLOR_BY_NR_LANGUAGES],\n    [ChartColors.COLOR_BY_LANGUAGE, TopolaChartColors.COLOR_BY_LANGUAGE]\n]);\n\nexport interface ChartProps {\n    data: JsonGedcomData;\n    selection: IndiInfo;\n    chartType: ChartType;\n    onSelection: (indiInfo: IndiInfo) => void;\n    freezeAnimation?: boolean;\n    colors?: ChartColors;\n    selectedLanguage?: string | null;\n    hideLanguages?: LanguagesArg;\n    hideEthnicity?: EthnicityArg;\n    hideIds?: IdsArg;\n    hideSex?: SexArg;\n}\n\nclass ChartWrapper {\n    private chart?: ChartHandle;\n    /** Animation is in progress. */\n    private animating = false;\n    /** Rendering is required after the current animation finishes. */\n    private rerenderRequired = false;\n    /** The d3 zoom behavior object. */\n    private zoomBehavior?: ZoomBehavior<Element, any>;\n    /** Props that will be used for re-rendering. */\n    private rerenderProps?: ChartProps;\n    private rerenderResetPosition?: boolean;\n\n    zoom(factor: number) {\n        const parent = select(\"#svgContainer\") as Selection<Element, any, any, any>;\n        this.zoomBehavior!.scaleBy(parent, factor);\n    }\n\n    /**\n     * Renders the chart or performs a transition animation to a new state.\n     * If indiInfo is not given, it means that it is the initial render and no animation is performed.\n     */\n    renderChart(\n        props: ChartProps,\n        intl: IntlShape,\n        args: { initialRender: boolean; resetPosition: boolean } = {\n            initialRender: false,\n            resetPosition: false,\n        },\n    ) {\n        // Wait for animation to finish if animation is in progress.\n        if (!args.initialRender && this.animating) {\n            this.rerenderRequired = true;\n            this.rerenderProps = props;\n            this.rerenderResetPosition = args.resetPosition;\n            return;\n        }\n\n        // Freeze changing selection after initial rendering.\n        if (!args.initialRender && props.freezeAnimation) {\n            return;\n        }\n\n        if (args.initialRender) {\n            (select(\"#chart\").node() as HTMLElement).innerHTML = '';\n            this.chart = createChart({\n                json: props.data,\n                chartType: getChartType(props.chartType),\n                renderer: DetailedRenderer,\n                svgSelector: \"#chart\",\n                indiCallback: (info) => props.onSelection(info),\n                colors: chartColors.get(props.colors!),\n                selectedLanguage: props.selectedLanguage,\n                animate: true,\n                updateSvgSize: false,\n                locale: intl.locale,\n            });\n        } else {\n            this.chart!.setData(props.data);\n        }\n\n        const chartInfo = this.chart!.render({\n            startIndi: props.selection.id,\n            baseGeneration: props.selection.generation,\n        });\n\n        const svg = select(\"#chartSvg\");\n        const parent = select(\"#svgContainer\").node() as Element;\n        const scale = zoomTransform(parent).k;\n        const zoomOutFactor = min([\n            1,\n            scale,\n            parent.clientWidth / chartInfo.size[0],\n            parent.clientHeight / chartInfo.size[1],\n        ])!;\n        const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n        this.zoomBehavior = zoom()\n            .scaleExtent(extent)\n            .translateExtent([[0, 0], chartInfo.size])\n            .on(\"zoom\", (event) => zoomed(chartInfo.size, event));\n        select(parent).on(\"scroll\", scrolled).call(this.zoomBehavior);\n\n        const scrollTopTween = (scrollTop: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollTop, scrollTop);\n                return (t: number) => parent.scrollTop = i(t);\n            }\n        };\n        const scrollLeftTween = (scrollLeft: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n                return (t: number) => parent.scrollLeft = i(t);\n            }\n        };\n\n        const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n        const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n        const offsetX = max([0, (parent.clientWidth - chartInfo.size[0] * scale) / 2]);\n        const offsetY = max([0, (parent.clientHeight - chartInfo.size[1] * scale) / 2]);\n        const svgTransition = svg.transition().delay(200).duration(500);\n        const transition = args.initialRender ? svg : svgTransition;\n        transition.attr(\"transform\", `translate(${offsetX}, ${offsetY})`)\n                  .attr(\"width\", chartInfo.size[0] * scale)\n                  .attr(\"height\", chartInfo.size[1] * scale);\n        if (args.resetPosition) {\n            if (args.initialRender) {\n                parent.scrollLeft = -dx;\n                parent.scrollTop = -dy;\n            } else {\n                svgTransition.tween(\"scrollLeft\", scrollLeftTween(-dx)).tween(\"scrollTop\", scrollTopTween(-dy));\n            }\n        }\n\n        this.animating = true;\n        // After the animation is finished, re-render the chart if required.\n        chartInfo.animationPromise.then(() => {\n            this.animating = false;\n            if (this.rerenderRequired) {\n                this.rerenderRequired = false;\n                // Use `this.rerenderProps` instead of the props in scope because\n                // the props may have been updated in the meantime.\n                this.renderChart(this.rerenderProps!, intl, {\n                    initialRender: false,\n                    resetPosition: !!this.rerenderResetPosition,\n                });\n            }\n        });\n    }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n    const chartWrapper = useRef(new ChartWrapper());\n    const prevProps = usePrevious(props);\n    const intl = useIntl();\n\n    useEffect(() => {\n        if (prevProps) {\n            const initialRender =\n                props.chartType !== prevProps?.chartType\n                || props.colors !== prevProps?.colors\n                || props.selectedLanguage !== prevProps?.selectedLanguage\n                || props.hideLanguages !== prevProps?.hideLanguages\n                || props.hideEthnicity !== prevProps?.hideEthnicity\n                || props.hideIds !== prevProps?.hideIds\n                || props.hideSex !== prevProps?.hideSex\n                //|| props.selection !== prevProps?.selection;\n            const resetPosition =\n                props.chartType !== prevProps?.chartType\n                || props.data !== prevProps.data\n                || props.selection !== prevProps.selection;\n            // non-first render\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender,\n                resetPosition,\n            });\n        } else {\n            // first render\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender: true,\n                resetPosition: true,\n            });\n        }\n    });\n\n    return (\n        <div id=\"svgContainer\">\n            <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n                <button className=\"zoom-in\" onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}>+</button>\n                <button className=\"zoom-out\" onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}>−</button>\n            </Media>\n            <svg id=\"chartSvg\">\n                <g id=\"chart\"/>\n            </svg>\n        </div>\n    );\n}\n","export interface Language {\n    id: string;\n    name: string;\n    iso?: string | null;\n    abbreviation?: string;\n}\n\nexport default class CSVLoader {\n    // Singleton\n    private static csvData: Language[] | null = null;\n\n    static async loadLanguages(filePath: string) {\n        if (CSVLoader.csvData) {\n            return CSVLoader.csvData;\n        }\n        try {\n            const data = await fetch(filePath);\n            const text = await data.text();\n\n            const rows = text.trim().split('\\n');\n            const headers = rows[0].split(',');\n\n            const idIndex = headers.indexOf('id');\n            const nameIndex = headers.indexOf('name');\n            const isoIndex = headers.indexOf('ISO 639-3');\n\n            CSVLoader.csvData = rows.slice(1).map(row => {\n                const values = row.split(',');\n                return {\n                    id: values[idIndex],\n                    name: CSVLoader.title_fn(values[nameIndex]),\n                    iso: values[isoIndex],\n                    abbreviation: values[isoIndex].toUpperCase() || (values[nameIndex].slice(0, 3).toUpperCase() + '*')\n                } as Language;\n            });\n            return CSVLoader.csvData;\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n\n    private static title_fn = (str: string) =>\n        str.split(/[-_\\s]/) // Split by hyphen, underscore, or space\n           .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n           .join('-');\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from './lib/topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {GedcomData, idToIndiMap, jsonToGedcom, TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n    Chart,\n    ChartType,\n    downloadGedcom,\n    downloadPdf,\n    downloadPng,\n    downloadSvg,\n    getFilename\n} from './chart';\nimport {\n    GedcomUrlDataSource,\n    getSelection,\n    UploadedDataSource,\n    UploadSourceSpec,\n    UrlSourceSpec\n} from './datasource/load_data';\nimport CSVLoader, {Language} from \"././model/languages-loader\";\nimport {\n    argsToConfig,\n    Config,\n    ConfigPanel,\n    configToArgs,\n    DEFAULT_CONFIG,\n    EthnicityArg,\n    IdsArg,\n    LanguagesArg,\n    SexArg\n} from './config';\nimport SidePanel from \"./util/side_panel\";\n\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE\n}\n\ntype DataSourceSpec = UrlSourceSpec | UploadSourceSpec | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\nfunction startIndi(data: TopolaData | undefined) {\n    const egoGen = getEgoGen(data)\n    return {\n        id: getLowestId(data) || 'I0',  // lowest ID on the chart, focus at the root, not at the EGO\n        generation: egoGen !== undefined ? -parseInt(egoGen, 10) : 0\n    };\n}\n\nfunction getEgoGen(data: TopolaData | undefined) {\n    return getEgoRecord(data?.gedcom)\n        .map(([_, value]) => value.tree.find(sub => sub.tag === \"GEN\")?.data)\n        .find(data => data !== undefined);\n}\n\nexport function getEgoRecord(gedcom: GedcomData | undefined) {\n    return Object.entries(gedcom?.other || {}).filter(([_, value]) => value.tag === \"EGO\")\n}\n\nfunction getLowestId(data: TopolaData | undefined) {\n    return data?.chartData?.indis?.reduce((lowest, current) =>\n            current.id.startsWith('I') && parseInt(current.id.slice(1), 10) < parseInt(lowest.id.slice(1), 10)\n            ? current\n            : lowest,\n        data?.chartData?.indis?.[0]\n    )?.id;\n}\n\nfunction loadLanguageOptions(data: TopolaData | undefined, allLanguages: Language[]) {\n    const gedcomLanguages = Array.from(getGedcomLanguages(data));\n    return allLanguages.filter((l: Language) => gedcomLanguages.includes(l.name)).sort();\n}\n\nfunction getGedcomLanguages(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"LANG\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\nfunction getEthnicities(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"_ETHN\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded data.\n */\nfunction getArguments(location: H.Location<any>, allLanguages: Language[]): Arguments {\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n    const view = getParam(\"view\");\n    const chartTypes = new Map<string | undefined, ChartType>([\n        [\"relatives\", ChartType.Relatives]\n    ]);\n    const hash = getParam(\"file\");\n    const url = getParam(\"url\");\n    const embedded = getParam(\"embedded\") === \"true\"; // False by default.\n    let sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n            allLanguages: allLanguages\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            allLanguages: allLanguages,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            allLanguages: allLanguages,\n            handleCors: getParam(\"handleCors\") !== \"false\", // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam(\"indi\");\n    const parsedGen = Number(getParam(\"gen\"));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined\n\n    return {\n        sourceSpec,\n        selection,\n        chartType: chartTypes.get(view) || ChartType.Hourglass,\n        showSidePanel: getParam(\"sidePanel\") !== \"false\", // True by default.\n        standalone: getParam(\"standalone\") !== \"false\" && !embedded && !staticUrl,\n        freezeAnimation: getParam(\"freeze\") === \"true\", // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    const [gedcomString, setGedcomString] = useState<String>()\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n    /** All languages. */\n    const [allLanguages, setAllLanguages] = useState<Language[]>([]);\n\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (!selection || selection.id !== newSelection.id || selection!.generation !== newSelection.generation) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined, allLanguages: Language[]) {\n        if (data === undefined) {\n            return;\n        }\n        // Find if there are languages\n        config.languageOptions = loadLanguageOptions(data, allLanguages)\n        config.renderLanguagesOption = config.languageOptions.length > 0\n        // Find if there are ethnicities/tribes\n        config.renderEthnicityOption = Array.from(getEthnicities(data)).length > 0\n        idToIndiMap(data.chartData).forEach((indi) => {\n            indi.hideLanguages = config.languages === LanguagesArg.HIDE;\n            indi.hideEthnicity = config.ethnicity === EthnicityArg.HIDE;\n            indi.hideId = config.id === IdsArg.HIDE;\n            indi.hideSex = config.sex === SexArg.HIDE;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo, allLanguages?: Language[]) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                analyticsEvent('topola_gedcom_upload');\n                return uploadedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.GEDCOM_URL:\n                analyticsEvent('topola_url_load');\n                return gedcomUrlDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n        }\n    }\n\n    // Function to load languages from CSV\n    const loadAllLanguages = async () => {\n        const allLanguages = await CSVLoader.loadLanguages(\"data/languages.csv\") || [];\n        setAllLanguages(allLanguages);\n    };\n\n    // useEffect to load languages when pathname is '/view'\n    useEffect(() => {\n        loadAllLanguages();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        analyticsEvent(\"topola_landing\");\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add(\"bgLogo\");\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove(\"bgLogo\");\n        }\n\n        (async () => {\n            if (location.pathname !== \"/view\") {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location, allLanguages);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n            if (\n                state === AppState.INITIAL || isNewData(args.sourceSpec, args.selection)\n            ) {\n                setState(AppState.LOADING);\n                setSourceSpec(args.sourceSpec);\n                setStandalone(args.standalone);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    setData(data);\n                    setGedcomString(jsonToGedcom(data.gedcom))\n                    setSelection(args.selection !== undefined ? args.selection : startIndi(data));\n                    toggleDetails(args.config, data, allLanguages);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE\n            ) {\n                setChartType(args.chartType);\n                setState(AppState.SHOWING_CHART);\n                updateDisplay(args.selection !== undefined ? args.selection : startIndi(data));\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart. Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        try {\n            analyticsEvent(\"topola_download_pdf\");\n            const filename = getFilename(data?.gedcom)\n            await downloadPdf(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: \"error.failed_pdf\",\n                    defaultMessage: \"Failed to generate PDF file. Please try with a smaller diagram or download an SVG file.\",\n                })\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        try {\n            analyticsEvent(\"topola_download_png\");\n            const filename = getFilename(data?.gedcom)\n            await downloadPng(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: \"error.failed_png\",\n                    defaultMessage: \"Failed to generate PNG file. Please try with a smaller diagram or download an SVG file.\"\n                })\n            );\n        }\n    }\n\n    async function onDownloadSvg() {\n        analyticsEvent(\"topola_download_svg\");\n        const filename = getFilename(data?.gedcom)\n        await downloadSvg(filename);\n    }\n\n    async function onDownloadGedcom() {\n        analyticsEvent(\"topola_download_gedcom\");\n        const filename = getFilename(data?.gedcom)\n        await downloadGedcom(gedcomString as string, filename);\n    }\n\n    function onResetView() {\n        const s = startIndi(data);\n        const args = {\n            indi: s.id,\n            gen:  s.generation\n        };\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            delete search[key]\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({id: \"tab.info\", defaultMessage: \"Info\"}),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: \"tab.settings\",\n                            defaultMessage: \"Settings\",\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data, allLanguages);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            selectedLanguage={config.selectedLanguage}\n                            hideLanguages={config.languages}\n                            hideEthnicity={config.ethnicity}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        showingChart={\n                            history.location.pathname === \"/view\" &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                            onDownloadGedcom,\n                            onResetView,\n                        }}\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={\"/view\"}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_es from './translations/es.json';\nimport messages_pl from './translations/pl.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n    de: messages_de,\n    fr: messages_fr,\n    it: messages_it,\n    es: messages_es,\n    pl: messages_pl\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n    ReactDOM.render(\n        <p>Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.</p>,\n        document.querySelector('#root'),\n    );\n} else {\n    ReactDOM.render(\n        <IntlProvider locale={language} messages={messages[language]}>\n            <MediaContextProvider>\n                <style>{mediaStyles}</style>\n                <Router>\n                    <Route component={App}/>\n                </Router>\n            </MediaContextProvider>\n        </IntlProvider>,\n        document.querySelector('#root'),\n    );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from '../lib/topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n    ['abt', 'about'],\n    ['cal', 'calculated'],\n    ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n    const hasDay = date.day !== undefined;\n    const hasMonth = date.month !== undefined;\n    const hasYear = date.year !== undefined;\n    if (!hasDay && !hasMonth && !hasYear) {\n        return date.text || '';\n    }\n    const dateObject = toDateObject(date);\n    const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n    const formatOptions: Intl.DateTimeFormatOptions = {\n        day: hasDay ? 'numeric' : undefined,\n        month: hasMonth ? 'long' : undefined,\n        year: hasYear ? 'numeric' : undefined,\n    };\n    const translatedDate = new Intl.DateTimeFormat(\n        intl.locale,\n        formatOptions,\n    ).format(dateObject);\n\n    return [translatedQualifier, translatedDate]\n        .filter((dateElement) => dateElement)\n        .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to;\n    const translatedFromDate = fromDate && formatDate(fromDate, intl);\n    const translatedToDate = toDate && formatDate(toDate, intl);\n    if (translatedFromDate && translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.between',\n                defaultMessage: 'between {from} and {to}',\n            },\n            {from: translatedFromDate, to: translatedToDate},\n        );\n    }\n    if (translatedFromDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.after',\n                defaultMessage: 'after {from}',\n            },\n            {from: translatedFromDate},\n        );\n    }\n    if (translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.before',\n                defaultMessage: 'before {to}',\n            },\n            {to: translatedToDate},\n        );\n    }\n    return '';\n}\n\nexport function formatDateQualifier(\n    qualifier: string | undefined,\n    intl: IntlShape,\n): string {\n    const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n    return (\n        (lowerCaseQualifier &&\n            intl.formatMessage({\n                id: `date.${lowerCaseQualifier}`,\n                defaultMessage:\n                    DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n            })) ||\n        ''\n    );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n    intl: IntlShape,\n): string {\n    if (!dateOrRange) {\n        return '';\n    }\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, intl);\n    }\n    if (dateOrRange.dateRange) {\n        return formatDateRage(dateOrRange.dateRange, intl);\n    }\n    return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n    return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n    date1: TopolaDate | undefined,\n    date2: TopolaDate | undefined,\n): number {\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n        return 0;\n    }\n    if (date1.year !== date2.year) {\n        return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n        return 0;\n    }\n    if (date1.month !== date2.month) {\n        return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n        return date1.month - date2.month;\n    }\n    return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n    firstDateOrRange: DateOrRange | undefined,\n    secondDateOrRange: DateOrRange | undefined,\n): number {\n    const date1 =\n        firstDateOrRange &&\n        (firstDateOrRange.date ||\n            (firstDateOrRange.dateRange &&\n                (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n    const date2 =\n        secondDateOrRange &&\n        (secondDateOrRange.date ||\n            (secondDateOrRange.dateRange &&\n                (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n    return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n    range1: DateRange,\n    range2: DateRange,\n): boolean {\n    return (\n        compareTopolaDates(range1.from, range2.to) <= 0 &&\n        compareTopolaDates(range1.to, range2.from) >= 0\n    );\n}\n\nexport function isValidDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n): boolean {\n    // invalid when range is closed and start is before end\n    if (isDateRangeClosed(dateOrRange?.dateRange)) {\n        return (\n            compareTopolaDates(\n                dateOrRange?.dateRange?.from,\n                dateOrRange?.dateRange?.to,\n            ) <= 0\n        );\n    }\n    //valid when there is exact date or date range has start or end defined\n    return !!(\n        dateOrRange?.date ||\n        dateOrRange?.dateRange?.from ||\n        dateOrRange?.dateRange?.to\n    );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n    return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n    return new Date(\n        date.year !== undefined ? date.year! : 0,\n        date.month !== undefined ? date.month! - 1 : 0,\n        date.day !== undefined ? date.day! : 1,\n    );\n}\n","import {convertGedcom, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\nimport {Language} from \".././model/languages-loader\";\n\nexport interface UploadSourceSpec {\n    source: DataSourceEnum.UPLOADED;\n    gedcom: string;\n    allLanguages: Language[];\n    hash: string;\n    images?: Map<string, string>;\n}\n\nexport interface UrlSourceSpec {\n    source: DataSourceEnum.GEDCOM_URL;\n    url: string;\n    allLanguages: Language[];\n    handleCors: boolean;\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(data: JsonGedcomData, selection?: IndiInfo): IndiInfo {\n    // If ID is not given, or it doesn't exist in the data, use the first ID in the data.\n    const id = selection && data.indis.some((i) => i.id === selection.id)\n        ? selection.id\n        : data.indis[0].id;\n    return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n    gedcom: string,\n    cacheId: string,\n    allLanguages: Language[],\n    images?: Map<string, string>\n): TopolaData {\n    const data = convertGedcom(gedcom, allLanguages, images || new Map());\n    const serializedData = JSON.stringify(data);\n    try {\n        sessionStorage.setItem(cacheId, serializedData);\n    } catch (e) {\n        console.warn('Failed to store data in session storage: ' + e);\n    }\n    return data;\n}\n\nasync function loadGedzip(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n    const entries = zip.getEntries();\n    let gedcom = undefined;\n    const images = new Map<string, string>();\n    for (const entry of entries) {\n        if (entry.entryName.endsWith('.ged')) {\n            if (gedcom) {\n                console.warn('Multiple GEDCOM files found in zip archive.');\n            } else {\n                gedcom = entry.getData().toString();\n            }\n        } else {\n            // Save image for later.\n            images.set(\n                entry.entryName,\n                URL.createObjectURL(new Blob([entry.getData()])),\n            );\n        }\n    }\n    if (!gedcom) {\n        throw new Error('GEDCOM file not found in zip archive.');\n    }\n    return {gedcom, images};\n}\n\nexport async function loadFile(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const fileHeader = await blob.slice(0, 2).text();\n    if (fileHeader === 'PK') {\n        return loadGedzip(blob);\n    }\n    return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n    url: string,\n    handleCors: boolean,\n    allLanguages: Language[]\n) {\n    try {\n        const cachedData = sessionStorage.getItem(url);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n\n    // handle GoogleDrive files\n    const driveUrlMatch = url.match(\n        /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n    );\n    if (driveUrlMatch) {\n        url = `https://drive.google.com/uc?id=${driveUrlMatch[1]}&export=download`;\n    }\n\n    const urlToFetch = handleCors ? 'https://universal-cors-proxy.glitch.me/' + encodeURIComponent(url) : url;\n    const response = await fetch(urlToFetch);\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/zip\")) {\n        const data = await response.blob();\n        const {gedcom, images} = await loadFile(data)\n        return prepareData(gedcom, url, allLanguages, images);\n    } else if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json();\n        return prepareData(data.contents, url, allLanguages, new Map());\n    } else if (contentType && (contentType.includes(\"text/plain\") || contentType.includes(\"text/html\"))) {\n        let data = await response.text();\n        while (data.charCodeAt(0) > 127) {\n            data = data.slice(1);\n        }\n        return prepareData(data, url, allLanguages, new Map());\n    }\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n    hash: string,\n    gedcom?: string,\n    allLanguages?: Language[],\n    images?: Map<string, string>\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n    if ((!gedcom) || (!allLanguages)) {\n        throw new TopolaError('ERROR_LOADING_UPLOADED_FILE',\n            'Error loading data. Please upload your file again.',\n        );\n    }\n    return prepareData(gedcom, hash, allLanguages, images);\n}\n\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<UploadSourceSpec>,\n        oldSource: SourceSelection<UploadSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.hash !== oldSource.spec.hash;\n    }\n\n    async loadData(source: SourceSelection<UploadSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadGedcom(\n                source.spec.hash,\n                source.spec.gedcom,\n                source.spec.allLanguages,\n                source.spec.images,\n            );\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n    isNewData(newSource: SourceSelection<UrlSourceSpec>, oldSource: SourceSelection<UrlSourceSpec>, data?: TopolaData) {\n        return newSource.spec.url !== oldSource.spec.url;\n    }\n    async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadFromUrl(source.spec.url, source.spec.handleCors, source.spec.allLanguages);\n        } catch (error) {\n            throw error;\n        }\n    }\n}"],"sourceRoot":""}