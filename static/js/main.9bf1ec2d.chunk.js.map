{"version":3,"sources":["util/error.ts","lib/topola/dist/chart-util.js","lib/topola/dist/ancestor-chart.js","lib/topola/dist/id-generator.js","lib/topola/dist/descendant-chart.js","util/gedcom_util.ts","lib/topola/dist/composite-renderer.js","lib/topola/dist/data.js","lib/topola/dist/date-format.js","lib/topola/dist/index.js","lib/topola/dist/api.js","lib/topola/dist/detailed-renderer.js","lib/topola/dist/gedcom.js","lib/topola/dist/hourglass-chart.js","lib/topola/dist/relatives-chart.js","lib/topola/dist/simple-api.js","datasource/data_source.ts","util/analytics.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/convert_tables.tsx","model/validate_csv.ts","model/individual.ts","model/family.ts","util/convert_csv.ts","menu/convert_menu.tsx","menu/search_index.ts","menu/top_bar.tsx","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","config.tsx","chart.tsx","model/languages-loader.ts","app.tsx","index.tsx","util/date_util.ts","datasource/load_data.ts"],"names":["TopolaError","code","message","args","Error","Object","defineProperty","exports","value","ChartUtil","getChartInfoWithoutMargin","getChartInfo","linkId","V_SPACING","H_SPACING","d3_selection_1","require","d3_flextree_1","d3_array_1","HIDE_TIME_MS","MOVE_TIME_MS","node","parent","id","_a","data","generation","child","additionalMarriage","nodes","x0","min","d","x","width","y0","y","height","size","max","origin","options","this","prototype","linkHorizontal","s","sAnchor","renderer","getFamilyAnchor","dAnchor","spouseParentNodeId","getSpouseAnchor","getIndiAnchor","sx","sy","_b","dx","dy","midX","linkVertical","midY","linkAdditionalMarriage","nodeIndex","children","findIndex","n","siblingNode","updateSvgDimensions","chartInfo","group","select","svgSelector","animate","transition","delay","duration","attr","layOutChart","root","layoutOptions","_this","svg","empty","append","text","getCss","each","depth","flipVertically","baseGeneration","updateNodes","descendants","vSizePerDepth","Map","maxVSize","horizontal","get","set","vSize","vSpacing","undefined","hSpacing","flextree","nodeSize","maxChildSize_1","maxChildSize","spacing","treemap","forEach","renderChart","getSvgForRendering","nodeAnimation","renderNodes","linkAnimation","renderLinks","Promise","all","resolve","boundNodes","selectAll","nodeEnter","enter","transitionsPending","exit","transitionDone","merge","style","on","render","remove","link","links","filter","boundLinks","path","insert","markHiddenRelatives","gedcomData","displayedNodes","flatMap","family","indi","spouse","sort","a","b","parseInt","slice","length","hasHiddenChildren","hasHiddenParents","fam","fams","c","json","childId","includes","hiddenRelatives","f","Array","from","values","husb","wife","__assign","assign","t","i","arguments","p","hasOwnProperty","call","apply","AncestorChart","getAncestorsTree","chart_util_1","d3_hierarchy_1","id_generator_1","ancestorChartOptions","startIndiFamilies","startIndi","getIndi","getFamiliesAsSpouse","startFam","getFam","getMother","swapStartSpouses","ancestorsRoot","createHierarchy","pop","util","famc","parents","stack","idGenerator","IdGenerator","getFamilyAsChild","getId","push","parentId","indiParentNodeId","entry","getFather","father","mother","stratify","animationPromise","info","ids","has","num","DescendantChart","layOutDescendants","DUMMY_ROOT_NODE_ID","removeDummyNode","allNodes","descendantsRoot","getNodes","famIds","map","famId","indiId","getSpouse","getFamNode","dummyNode_1","_loop_1","this_1","getChildren","childNodes","pointerToId","pointer","substring","idToIndiMap","indis","idToFamMap","prepareGedcom","entries","head","find","tag","other","strcmp","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","compareDates","birth","birthDatesComparator","newFams","newChildren","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","title","startsWith","filterImage","convertGedcom","allLanguages","parseGedcom","gedcomEntriesToJson","chartData","getName","person","names","subEntry","name","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","jsonToGedcom","processNode","level","line","record","trim","getFamPositionHorizontal","getFamPositionVertical","CompositeRenderer","getPreferredFamSize","setPreferredIndiSize","getPreferredIndiSize","indiVSizePerDepth","maxIndiVSize","getIndiVSize","getFamVSize","getVSize","hSize","indiHSize","getHSize","x_1","famYOffset","famXOffset","indiWidth","spouseWidth","familyWidth","indiHeight","spouseHeight","familyHeight","JsonDataProvider","JsonIndiDetails","isEgo","getFirstName","firstName","getLastName","lastName","toUpperCase","getBirthDate","getMaidenName","maidenName","getNumberOfChildren","numberOfChildren","getNumberOfMarriages","numberOfMarriages","getBirthPlace","place","getDeathDate","death","getDeathPlace","isConfirmedDeath","confirmed","getSex","sex","getLanguages","languages","getLanguagesLabel","abbreviations","lang","abbreviation","join","getEthnicity","ethnicity","getTribe","tribe","getImageUrl","getImages","getNotes","notes","getEvents","events","showLanguages","hideLanguages","showEthnicity","hideEthnicity","showId","hideId","showSex","hideSex","JsonFamDetails","getMarriageDate","getMarriagePlace","formatDateOrRange","formatDate","MONTHS_EN","QUALIFIERS_I18N","shortMonthCache","getShortMonth","month","locale","Intl","DateTimeFormat","cacheKey","format","Date","getQualifier","qualifier","language","split","languageMap","formatDateOnly","day","year","date","dateOrRange","dateRange","to","__createBinding","create","o","m","k","k2","enumerable","__exportStar","ChartColors","__extends","extendStatics","setPrototypeOf","__proto__","TypeError","String","__","constructor","DetailedRenderer","getLength","_1","date_format_1","composite_renderer_1","DETAILS_HEIGHT","textLengthCache","textClass","g","getComputedTextLength","SEX_SYMBOLS","_super","getColoringClass","colors","NO_COLOR","COLOR_BY_GENERATION","COLOR_BY_SEX","COLOR_BY_ETHNICITY","COLOR_BY_NR_LANGUAGES","COLOR_BY_LANGUAGE","getIndiDetails","detailsList","birthDate","birthPlace","deathDate","deathPlace","symbol","listIndex","details","ethnicityHeight","languagesHeight","idAndSexHeight","maxDetailsWidth","detail","getFamDetails","marriageDate","marriagePlace","update","indiUpdate","xOffset","yOffset","indiEnter","renderIndi","familyEnter","familyUpdate","getFamTransform","renderFamily","xhr","XMLHttpRequest","open","send","status","responseText","statusText","error","console","selection","getSexClass","ethnicityCss","getEthnicityClass","buildEthnicityMap","egoEthnicity","classNum","keys","e","log","getSelectedStroke","getLanguagesClass","selectedLanguageId","Math","resetCss","clear","indiHrefFunc","indiCallback","event","background","selectedLanguage","getClipId","getDetailsWidth","languages_height_start","ethnicity_height_start","maxDetails","v","details_height_start","_loop_2","lineGroup","sexSymbol","border","famHrefFunc","famCallback","gedcomToJson","getDate","parse_gedcom_1","findTag","findTags","extractName","arr","MONTHS","parseDate","parts","lastPart","fullText","firstPart","Number","gedcomDate","date_1","createNotes","notesTag","reduce","concat","createEvent","typeTag","dateTag","placeTag","type","createFam","husbTag","wifeTag","objects","ego","nameTags","isMaiden","nameTag","main","maiden","nchiTag","nmrTag","sexTag","gedcomLanguages","l","ethnicityTag","tribeTag","famcTag","objeTags","realObjeTag","file","createIndi","gedcomContents","parse","HourglassChart","ancestor_chart_1","descendant_chart_1","ancestorNodes","descendantNodes","__spreadArray","il","j","RelativesChart","FilterChildFam","index","indexOf","splice","FilterChildData","layOutAncestorDescendants","focusedNode","ancestorData","eachAfter","descendantOptions","parentHeight","childNode","parentData","left","middle","thisNode","middleX","parentNode","nodeData","indiParent","spouseParent","nodeX","nodeY","nodeWidth","nodeHeight","spouseTreeHeight","dx_1","dy_1","indiTreeHeight","dx_2","dy_2","ancestorOptions","ancestorDescentants","createChart","data_1","SimpleChartHandle","initialRender","renderOptions","chartOptions","indiUrl","famUrl","createChartOptions","chartType","updateSvgSize","setData","DataSourceEnum","analyticsEvent","action","window","gtag","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","defaultMessage","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","closeIcon","Icon","color","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","properties","target","eventSources","sources","intl","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","Tab","Pane","note","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","sub","familyEntry","spouseReference","familySubEntry","eventPlace","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","resolveDate","eventNotes","toEvent","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","eventEntry","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","getMultilineDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","reject","PARENT_READY","postMessage","READY","GEDCOM","loadGedcom","addEventListener","onMessage","getI18nMessage","formatMessage","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","IndividualsTableExample","headerColor","Table","TableHeader","TableRow","TableHeaderCell","TableBody","TableCell","disabled","RelationshipsTableExample","FamiliesTableExample","IndividualsLanguagesTableExample","Papa","columnsValidation","valuesValidation","validateCSV","parsedData","header","skipEmptyLines","errors","rows","requiredColumns","headers","missingColumns","col","checkColumns","cellErrors","row","column","checkMissingValues","indiIdErrors","famIdErrors","langIdErrors","isNaN","checkIdFormat","Sex","Graph","shortestPath","Individual","params","givenName","surname","nickname","birthYear","familySpouses","familyChild","relationships","indID","fatherId","motherId","hasNode","addNode","addEdge","current","minValue","singleSourceLength","capitalize","famID","str","word","charAt","Family","husband","marriaged","divorced","csvToGedcom","languagesContents","individualsContent","relationshipsContent","familiesContent","individualsLanguagesContent","egoIndiId","individuals","parseIndividuals","parseRelationships","families","parseFamilies","mapFamiliesChildren","mapIndividualsSpouses","parseLanguages","individualsLanguages","parseIndividualsLanguages","mapIndividualsLanguages","createGedcomString","parseCSV","personId","langIds","individual","ind","langId","egoIndi","lowestEgoIndi","egoGeneration","_i","prev","createHeader","indiRecords","asGedcom","famRecords","createTail","tail","egoId","egoGen","fetch","headerFile","headerTemplate","toLocaleDateString","replaced","egoSection","repoSection","uid","uuidv4","repo","char","tailFile","tailTemplate","acc","key","initialHeaderColors","ConvertCSVMenu","dialogOpen","setDialogOpen","inputFiles","setInputFiles","headerColors","setHeaderColors","setEgoIndiId","setErrors","history","useHistory","closeDialog","handleUpload","files","validFilenames","validateFilenames","fileReadPromises","reader","FileReader","readAsText","onload","fileContent","validFile","onerror","then","results","validFiles","newHeaderColors","changeHeaderColors","egoTag","document","querySelector","parentElement","setProperty","convert2gedcom","individualsFile","relationshipsFile","familiesFile","individualsLanguagesFile","readFileContents","languagesFile","gedcomString","gedcomFile","Blob","loadFile","imageFileNames","hash","md5","state","Form","onSubmit","float","marginBottom","Input","every","labelPosition","icon","placeholder","onChange","_e","accept","multiple","Actions","Button","secondary","primary","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","initMultiLingualLunrWithoutTrimmer","field","boost","spouseLastName","husbId","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","pipelineFunctions","searchPipelineFunctions","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","searchPipeline","query","ScreenSize","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","debouncedHandleSearch","debounce","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","onResultSelect","onSelection","noResultsMessage","selectFirstResult","isImageFileName","lower","UploadMenu","filesArray","URL","createObjectURL","htmlFor","UrlMenu","setUrl","inputRef","handleLoad","focus","href","TopBar","FileMenus","screenSize","menuOpen","setMenuOpen","cooldown","toggleMenu","setTimeout","standalone","LARGE","SMALL","ViewMenus","currentView","changeView","ChartMenus","setCurrentView","showingChart","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","Divider","onDownloadGedcom","view","onResetView","greaterThanOrEqual","inverted","at","LanguagesArg","EthnicityArg","IdsArg","SexArg","DEFAULT_CONFIG","HIDE","SHOW","renderLanguagesOption","renderEthnicityOption","languageOptions","COLOR_ARG","COLOR_ARG_INVERSE","LANGUAGES_ARG","LANGUAGES_ARG_INVERSE","ETHNICITY_ARG","ETHNICITY_ARG_INVERSE","ID_ARG","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","config","languagesEnabled","setLanguagesEnabled","ethnicityEnabled","setEthnicityEnabled","idsEnabled","setIdsEnabled","sexEnabled","setSexEnabled","Field","Checkbox","radio","checked","tagName","toggle","newState","ChartType","zoomed","scale","transform","offsetX","clientWidth","offsetY","clientHeight","scrollLeft","scrollTop","scrolled","zoomTransform","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","response","warn","inlineImages","getElementsByTagName","loadImage","drawImageOnCanvas","canvas","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","getAttribute","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","downloadSvg","contents","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","downloadGedcom","getFilename","obj","lastIndexOf","getChartType","Hourglass","Relatives","chartColors","TopolaChartColors","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","resetPosition","freezeAnimation","innerHTML","zoomOutFactor","extent","scaleExtent","translateExtent","scrollTopTween","interpolateNumber","scrollLeftTween","svgTransition","tween","Chart","chartWrapper","prevProps","usePrevious","hideIds","CSVLoader","csvData","idIndex","nameIndex","isoIndex","title_fn","iso","AppState","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getEgoGen","getLowestId","lowest","loadLanguageOptions","Set","getGedcomLanguages","getArguments","getParamFromSearch","chartTypes","embedded","sourceSpec","GEDCOM_URL","handleCors","UPLOADED","EMBEDDED","parsedGen","showSidePanel","messages","de","messages_de","fr","messages_fr","it","messages_it","es","messages_es","pl","messages_pl","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setGedcomString","setFreezeAnimation","setConfig","setAllLanguages","toggleDetails","getEthnicities","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","embeddedDataSource","isNewData","newSourceSpec","newSelection","spec","loadData","loadAllLanguages","loadLanguages","updateUrl","gen","displayErrorPopup","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","exact","DATE_QUALIFIERS","hasDay","hasMonth","hasYear","dateObject","toDateObject","formatOptions","lowerCaseQualifier","formatDateQualifier","dateElement","fromDate","toDate","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","prepareData","cacheId","serializedData","JSON","stringify","sessionStorage","setItem","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","cachedData","getItem","driveUrlMatch","urlToFetch","encodeURIComponent","ok","contentType","charCodeAt"],"mappings":"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","file":"static/js/main.9bf1ec2d.chunk.js","sourcesContent":["/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n    constructor(\n        public readonly code: string,\n        message: string,\n        public readonly args: { [key: string]: string } = {},\n    ) {\n        super(message);\n    }\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.ChartUtil = exports.getChartInfoWithoutMargin = exports.getChartInfo = exports.linkId = exports.V_SPACING = exports.H_SPACING = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst d3_flextree_1 = require(\"d3-flextree\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\n\n/** Horizontal distance between boxes. */\nexports.H_SPACING = 15;\n/** Vertical distance between boxes. */\nexports.V_SPACING = 30;\n/** Margin around the whole drawing. */\nconst MARGIN = 15;\nconst HIDE_TIME_MS = 200;\nconst MOVE_TIME_MS = 500;\n\n/** Assigns an identifier to a link. */\nfunction linkId(node) {\n    if (!node.parent) {\n        return node.id + \":A\";\n    }\n    const _a = node.data.generation > node.parent.data.generation\n        ? [node.data, node.parent.data]\n        : [node.parent.data, node.data], child = _a[0], parent = _a[1];\n    if (child.additionalMarriage) {\n        return child.id + \":A\";\n    }\n    return parent.id + \":\" + child.id;\n}\nexports.linkId = linkId;\n\nfunction getChartInfo(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    }) - MARGIN;\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    }) - MARGIN;\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    }) + MARGIN;\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    }) + MARGIN;\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfo = getChartInfo;\n\nfunction getChartInfoWithoutMargin(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    });\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    });\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    });\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    });\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfoWithoutMargin = getChartInfoWithoutMargin;\n\n/** Utility class with common code for all chart types. */\nlet ChartUtil = /** @class */ (function () {\n\n    function ChartUtil(options) {\n        this.options = options;\n    }\n\n    /** Creates a path from parent to the child node (horizontal layout). */\n    ChartUtil.prototype.linkHorizontal = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midX = (s.x + s.data.width / 2 + d.x - d.data.width / 2) / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + midX + \" \" + sy + \",\\n              \" + midX + \" \" + dy + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    /** Creates a path from parent to the child node (vertical layout). */\n    ChartUtil.prototype.linkVertical = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midY = s.y + s.data.height / 2 + exports.V_SPACING / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + sx + \" \" + midY + \",\\n              \" + dx + \" \" + midY + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    ChartUtil.prototype.linkAdditionalMarriage = function (node) {\n        const nodeIndex = node.parent.children.findIndex(function (n) {\n            return n.data.id === node.data.id;\n        });\n        // Assert nodeIndex > 0.\n        const siblingNode = node.parent.children[nodeIndex - 1];\n        const sAnchor = this.options.renderer.getIndiAnchor(node.data);\n        const dAnchor = this.options.renderer.getIndiAnchor(siblingNode.data);\n        const _a = [node.x + sAnchor[0], node.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [siblingNode.x + dAnchor[0], siblingNode.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        return \"M \" + sx + \", \" + sy + \"\\n            L \" + dx + \", \" + dy;\n    };\n\n    ChartUtil.prototype.updateSvgDimensions = function (chartInfo) {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        const group = svg.select('g');\n        const transition = this.options.animate\n            ? group.transition().delay(HIDE_TIME_MS).duration(MOVE_TIME_MS)\n            : group;\n        transition.attr('transform', \"translate(\" + chartInfo.origin[0] + \", \" + chartInfo.origin[1] + \")\");\n    };\n\n    ChartUtil.prototype.layOutChart = function (root, layoutOptions) {\n        const _this = this;\n        if (layoutOptions === void 0) { layoutOptions = {}; }\n        // Add styles so that calculating text size is correct.\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('style').empty()) {\n            svg.append('style').text(this.options.renderer.getCss());\n        }\n        // Assign generation number.\n        root.each(function (node) {\n            node.data.generation =\n                node.depth * (layoutOptions.flipVertically ? -1 : 1) +\n                    (_this.options.baseGeneration || 0);\n        });\n        // Set preferred sizes.\n        this.options.renderer.updateNodes(root.descendants());\n        const vSizePerDepth = new Map();\n        root.each(function (node) {\n            const depth = node.depth;\n            const maxVSize = d3_array_1.max([\n                _this.options.horizontal ? node.data.width : node.data.height,\n                vSizePerDepth.get(depth),\n            ]);\n            vSizePerDepth.set(depth, maxVSize);\n        });\n        // Set sizes of whole nodes.\n        root.each(function (node) {\n            const vSize = vSizePerDepth.get(node.depth);\n            if (_this.options.horizontal) {\n                node.data.width = vSize;\n            }\n            else {\n                node.data.height = vSize;\n            }\n        });\n        const vSpacing = layoutOptions.vSpacing !== undefined ? layoutOptions.vSpacing : exports.V_SPACING;\n        const hSpacing = layoutOptions.hSpacing !== undefined ? layoutOptions.hSpacing : exports.H_SPACING;\n        // Assigns the x and y position for the nodes.\n        const treemap = d3_flextree_1.flextree()\n            .nodeSize(function (node) {\n                if (_this.options.horizontal) {\n                    const maxChildSize_1 = d3_array_1.max(node.children || [], function (n) {\n                        return n.data.width;\n                    }) || 0;\n                    return [\n                        node.data.height,\n                        (maxChildSize_1 + node.data.width) / 2 + vSpacing,\n                    ];\n                }\n                const maxChildSize = d3_array_1.max(node.children || [], function (n) {\n                    return n.data.height;\n                }) || 0;\n                return [\n                    node.data.width,\n                    (maxChildSize + node.data.height) / 2 + vSpacing,\n                ];\n            }).spacing(function () {\n                return hSpacing;\n            });\n        const nodes = treemap(root).descendants();\n        // Swap x-y coordinates for horizontal layout.\n        nodes.forEach(function (node) {\n            let _a;\n            if (layoutOptions.flipVertically) {\n                node.y = -node.y;\n            }\n            if (_this.options.horizontal) {\n                _a = [node.y, node.x];\n                node.x = _a[0];\n                node.y = _a[1];\n            }\n        });\n        return nodes;\n    };\n\n    ChartUtil.prototype.renderChart = function (nodes) {\n        const svg = this.getSvgForRendering();\n        const nodeAnimation = this.renderNodes(nodes, svg);\n        const linkAnimation = this.renderLinks(nodes, svg);\n        return Promise.all([\n            nodeAnimation,\n            linkAnimation,\n        ]);\n    };\n\n    ChartUtil.prototype.renderNodes = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const boundNodes = svg\n                .select('g')\n                .selectAll('g.node')\n                .data(nodes, function (d) {\n                    return d.id;\n                });\n            const nodeEnter = boundNodes.enter().append('g');\n            let transitionsPending = boundNodes.exit().size() + boundNodes.size() + nodeEnter.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            nodeEnter\n                .merge(boundNodes)\n                .attr('class', function (node) {\n                    return \"node generation\" + node.data.generation;\n                });\n            nodeEnter.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            if (_this.options.animate) {\n                nodeEnter\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            const updateTransition = _this.options.animate\n                ? boundNodes\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundNodes;\n            updateTransition.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            _this.options.renderer.render(nodeEnter, boundNodes);\n            if (_this.options.animate) {\n                boundNodes\n                    .exit()\n                    .transition()\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundNodes.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.renderLinks = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const link = function (parent, child) {\n                if (child.data.additionalMarriage) {\n                    return _this.linkAdditionalMarriage(child);\n                }\n                const flipVertically = parent.data.generation > child.data.generation;\n                if (_this.options.horizontal) {\n                    if (flipVertically) {\n                        return _this.linkHorizontal(child, parent);\n                    }\n                    return _this.linkHorizontal(parent, child);\n                }\n                if (flipVertically) {\n                    return _this.linkVertical(child, parent);\n                }\n                return _this.linkVertical(parent, child);\n            };\n            const links = nodes.filter(function (n) {\n                return !!n.parent || n.data.additionalMarriage;\n            });\n            const boundLinks = svg\n                .select('g')\n                .selectAll('path.link')\n                .data(links, linkId);\n            const path = boundLinks\n                .enter()\n                .insert('path', 'g')\n                .attr('class', function (node) {\n                    return node.data.additionalMarriage ? 'link additional-marriage' : 'link';\n                })\n                .attr('d', function (node) {\n                    return link(node.parent, node);\n                });\n            let transitionsPending = boundLinks.exit().size() + boundLinks.size() + path.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            const linkTransition = _this.options.animate\n                ? boundLinks\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundLinks;\n            linkTransition.attr('d', function (node) {\n                return link(node.parent, node);\n            });\n            if (_this.options.animate) {\n                path\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(2 * HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(0)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            if (_this.options.animate) {\n                boundLinks\n                    .exit()\n                    .transition()\n                    .duration(0)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundLinks.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.getSvgForRendering = function () {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('g').empty()) {\n            svg.append('g');\n        }\n        return svg;\n    };\n\n    ChartUtil.prototype.markHiddenRelatives = function (nodes, gedcomData) {\n        let displayedNodes = nodes.flatMap(function (node) {\n            if (node.data.family) {\n                return [node.data.indi.id, node.data.spouse.id];\n            } else {\n                return [node.data.indi.id];\n            }\n        });\n        displayedNodes = displayedNodes.sort((a, b) => {\n            const numA = parseInt(a.slice(1));\n            const numB = parseInt(b.slice(1));\n            return numA - numB;\n        });\n        for (var n = 0; n < nodes.length; n++) {\n            var node = nodes[n];\n            // if it is FAM\n            if (node.data.family) {\n                // check if husband has hidden children\n                this.hasHiddenChildren(gedcomData, node, displayedNodes);\n                // check the wife parents\n                this.hasHiddenParents(node.data.spouse, gedcomData, displayedNodes);\n            // if it INDI\n            } else {\n                this.hasHiddenParents(node.data.indi, gedcomData, displayedNodes);\n            }\n        }\n    }\n\n    ChartUtil.prototype.hasHiddenChildren = function(gedcomData, node, displayedNodes) {\n        const fam = gedcomData.data.fams.get(node.data.family.id)\n        // iterate all children of this family\n        for (var c = 0; c < fam.json.children.length; c++) {\n            const childId = fam.json.children[c]\n            // this family has children which are not displayed\n            if (!displayedNodes.includes(childId)) {\n                node.data.hiddenRelatives = true\n                break;\n            }\n        }\n        return false;\n    }\n\n    ChartUtil.prototype.hasHiddenParents = function (node, gedcomData, displayedNodes) {\n        // check all parent until it finds the child\n        for (var f = 0; f < gedcomData.data.fams.size; f++) {\n            const fam = Array.from(gedcomData.data.fams.values())[f]\n            if (fam.json.children.length > 0) {\n                if (fam.json.children.includes(node.id)) {\n                    // parents found\n                    if (!displayedNodes.includes(fam.json.husb)) {\n                        node.hiddenRelatives = true\n                        break;\n                    }\n                    if (!displayedNodes.includes(fam.json.wife)) {\n                        node.hiddenRelatives = true\n                        break;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    return ChartUtil;\n}());\nexports.ChartUtil = ChartUtil;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AncestorChart = exports.getAncestorsTree = void 0;\nvar chart_util_1 = require(\"./chart-util\");\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar id_generator_1 = require(\"./id-generator\");\nfunction getAncestorsTree(options) {\n    var ancestorChartOptions = __assign({}, options);\n    var startIndiFamilies = options.startIndi\n        ? options.data.getIndi(options.startIndi).getFamiliesAsSpouse()\n        : [];\n    // If the start individual is set and this person has at least one spouse,\n    // start with the family instead.\n    if (startIndiFamilies.length) {\n        ancestorChartOptions.startFam = startIndiFamilies[0];\n        ancestorChartOptions.startIndi = undefined;\n        var fam = options.data.getFam(startIndiFamilies[0]);\n        if (fam.getMother() === options.startIndi) {\n            ancestorChartOptions.swapStartSpouses = true;\n        }\n    }\n    var ancestors = new AncestorChart(ancestorChartOptions);\n    var ancestorsRoot = ancestors.createHierarchy();\n    // Remove spouse's ancestors if there are multiple spouses\n    // to avoid showing ancestors of just one spouse.\n    if (startIndiFamilies.length > 1 &&\n        ancestorsRoot.children &&\n        ancestorsRoot.children.length > 1) {\n        ancestorsRoot.children.pop();\n        ancestorsRoot.data.spouseParentNodeId = undefined;\n    }\n    return ancestorsRoot;\n}\nexports.getAncestorsTree = getAncestorsTree;\n/** Renders an ancestors chart. */\nvar AncestorChart = /** @class */ (function () {\n    function AncestorChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    /** Creates a d3 hierarchy from the input data. */\n    AncestorChart.prototype.createHierarchy = function () {\n        let id;\n        let famc;\n        let indi;\n        var parents = [];\n        var stack = [];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        if (this.options.startIndi) {\n            indi = this.options.data.getIndi(this.options.startIndi);\n            famc = indi.getFamilyAsChild();\n            id = famc ? idGenerator.getId(famc) : undefined;\n            if (famc) {\n                stack.push({\n                    id: famc,\n                    parentId: this.options.startIndi,\n                    family: { id: famc },\n                });\n            }\n            parents.push({\n                id: this.options.startIndi,\n                indi: { id: this.options.startIndi },\n                indiParentNodeId: id,\n            });\n        }\n        else {\n            stack.push({\n                id: idGenerator.getId(this.options.startFam),\n                family: { id: this.options.startFam },\n            });\n        }\n        while (stack.length) {\n            var entry = stack.pop();\n            var fam = this.options.data.getFam(entry.family.id);\n            if (!fam) {\n                continue;\n            }\n            var _a = entry.family.id === this.options.startFam &&\n                this.options.swapStartSpouses\n                ? [fam.getMother(), fam.getFather()]\n                : [fam.getFather(), fam.getMother()], father = _a[0], mother = _a[1];\n            if (!father && !mother) {\n                continue;\n            }\n            if (mother) {\n                entry.spouse = { id: mother };\n                indi = this.options.data.getIndi(mother);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.spouseParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            if (father) {\n                entry.indi = { id: father };\n                indi = this.options.data.getIndi(father);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.indiParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            parents.push(entry);\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    AncestorChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = this.util.layOutChart(root, { flipVertically: true });\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return AncestorChart;\n}());\nexports.AncestorChart = AncestorChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdGenerator = void 0;\n/** Provides unique identifiers. */\nvar IdGenerator = /** @class */ (function () {\n    function IdGenerator() {\n        this.ids = new Map();\n    }\n    /**\n     * Returns the given identifier if it wasn't used before. Otherwise, appends\n     * a number to the given identifier to make it unique.\n     */\n    IdGenerator.prototype.getId = function (id) {\n        if (this.ids.has(id)) {\n            var num = this.ids.get(id);\n            this.ids.set(id, num + 1);\n            return id + \":\" + num;\n        }\n        this.ids.set(id, 1);\n        return id;\n    };\n    return IdGenerator;\n}());\nexports.IdGenerator = IdGenerator;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescendantChart = exports.layOutDescendants = exports.DUMMY_ROOT_NODE_ID = void 0;\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar chart_util_1 = require(\"./chart-util\");\nvar id_generator_1 = require(\"./id-generator\");\nexports.DUMMY_ROOT_NODE_ID = 'DUMMY_ROOT_NODE';\nfunction layOutDescendants(options, layoutOptions) {\n    if (layoutOptions === void 0) { layoutOptions = {}; }\n    var descendants = new DescendantChart(options);\n    var descendantsRoot = descendants.createHierarchy();\n    return removeDummyNode(new chart_util_1.ChartUtil(options).layOutChart(descendantsRoot, layoutOptions));\n}\nexports.layOutDescendants = layOutDescendants;\n/** Removes the dummy root node if it was added in createHierarchy(). */\nfunction removeDummyNode(allNodes) {\n    if (allNodes[0].id !== exports.DUMMY_ROOT_NODE_ID) {\n        return allNodes;\n    }\n    var nodes = allNodes.slice(1);\n    // Move first node to (0, 0) coordinates.\n    var dx = -nodes[0].x;\n    var dy = -nodes[0].y;\n    nodes.forEach(function (node) {\n        if (node.parent &&\n            node.parent.id === exports.DUMMY_ROOT_NODE_ID &&\n            !node.data.additionalMarriage) {\n            node.parent = null;\n        }\n        node.x += dx;\n        node.y += dy;\n        node.data.generation--;\n    });\n    return nodes;\n}\n/** Returns the spouse of the given individual in the given family. */\nfunction getSpouse(indiId, fam) {\n    if (fam.getFather() === indiId) {\n        return fam.getMother();\n    }\n    return fam.getFather();\n}\n/** Renders a descendants chart. */\nvar DescendantChart = /** @class */ (function () {\n    function DescendantChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    DescendantChart.prototype.getNodes = function (id) {\n        var _this = this;\n        var indi = this.options.data.getIndi(id);\n        var famIds = indi.getFamiliesAsSpouse();\n        if (!famIds.length) {\n            // Single person.\n            return [\n                {\n                    id: id,\n                    indi: {\n                        id: id,\n                    },\n                },\n            ];\n        }\n        // Marriages.\n        var nodes = famIds.map(function (famId) {\n            var entry = {\n                id: famId,\n                indi: {\n                    id: id,\n                },\n                family: {\n                    id: famId,\n                },\n            };\n            var fam = _this.options.data.getFam(famId);\n            var spouse = getSpouse(id, fam);\n            if (spouse) {\n                entry.spouse = { id: spouse };\n            }\n            return entry;\n        });\n        nodes.slice(1).forEach(function (node) {\n            node.additionalMarriage = true;\n        });\n        return nodes;\n    };\n    DescendantChart.prototype.getFamNode = function (famId) {\n        var node = { id: famId, family: { id: famId } };\n        var fam = this.options.data.getFam(famId);\n        var father = fam.getFather();\n        if (father) {\n            node.indi = { id: father };\n        }\n        var mother = fam.getMother();\n        if (mother) {\n            node.spouse = { id: mother };\n        }\n        return node;\n    };\n    /** Creates a d3 hierarchy from the input data. */\n    DescendantChart.prototype.createHierarchy = function () {\n        var _this = this;\n        var parents = [];\n        var nodes = this.options.startIndi\n            ? this.getNodes(this.options.startIndi)\n            : [this.getFamNode(this.options.startFam)];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        nodes.forEach(function (node) { return (node.id = idGenerator.getId(node.id)); });\n        // If there are multiple root nodes, i.e. the start individual has multiple\n        // marriages, create a dummy root node.\n        // After layout is complete, the dummy node will be removed.\n        if (nodes.length > 1) {\n            var dummyNode_1 = {\n                id: exports.DUMMY_ROOT_NODE_ID,\n                height: 1,\n                width: 1,\n            };\n            parents.push(dummyNode_1);\n            nodes.forEach(function (node) { return (node.parentId = dummyNode_1.id); });\n        }\n        parents.push.apply(parents, nodes);\n        var stack = [];\n        nodes.forEach(function (node) {\n            if (node.family) {\n                stack.push(node);\n            }\n        });\n        var _loop_1 = function () {\n            var entry = stack.pop();\n            var fam = this_1.options.data.getFam(entry.family.id);\n            var children = fam.getChildren();\n            children.forEach(function (childId) {\n                var childNodes = _this.getNodes(childId);\n                childNodes.forEach(function (node) {\n                    node.parentId = entry.id;\n                    if (node.family) {\n                        node.id = \"\" + idGenerator.getId(node.family.id);\n                        stack.push(node);\n                    }\n                });\n                parents.push.apply(parents, childNodes);\n            });\n        };\n        var this_1 = this;\n        while (stack.length) {\n            _loop_1();\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    DescendantChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = removeDummyNode(this.util.layOutChart(root));\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return DescendantChart;\n}());\nexports.DescendantChart = DescendantChart;\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {gedcomEntriesToJson, JsonFam, JsonGedcomData, JsonImage, JsonIndi} from '../lib/topola';\nimport {compareDates} from './date_util';\nimport {Language} from \".././model/languages-loader\";\n\nexport interface GedcomData {\n    /** The HEAD entry. */\n    head: GedcomEntry;\n    /** INDI entries mapped by id. */\n    indis: { [key: string]: GedcomEntry };\n    /** FAM entries mapped by id. */\n    fams: { [key: string]: GedcomEntry };\n    /** Other entries mapped by id, e.g. NOTE, SOUR. */\n    other: { [key: string]: GedcomEntry };\n}\n\nexport interface TopolaData {\n    chartData: JsonGedcomData;\n    gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n    return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n    const map = new Map<string, JsonIndi>();\n    data.indis.forEach((indi) => {\n        map.set(indi.id, indi);\n    });\n    return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n    const map = new Map<string, JsonFam>();\n    data.fams.forEach((fam) => {\n        map.set(fam.id, fam);\n    });\n    return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n    const head = entries.find((entry) => entry.tag === 'HEAD')!;\n    const indis: { [key: string]: GedcomEntry } = {};\n    const fams: { [key: string]: GedcomEntry } = {};\n    const other: { [key: string]: GedcomEntry } = {};\n    entries.forEach((entry) => {\n        if (entry.tag === 'INDI') {\n            indis[pointerToId(entry.pointer)] = entry;\n        } else if (entry.tag === 'FAM') {\n            fams[pointerToId(entry.pointer)] = entry;\n        } else if (entry.pointer) {\n            other[pointerToId(entry.pointer)] = entry;\n        }\n    });\n    return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n\n/** Birthdate comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n    const indiMap = idToIndiMap(gedcom);\n    return (indiId1: string, indiId2: string) => {\n        const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n        const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n        return (\n            compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n            strcmp(indiId1, indiId2)\n        );\n    };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n    const famMap = idToFamMap(gedcom);\n    return (famId1: string, famId2: string) => {\n        const fam1: JsonFam | undefined = famMap.get(famId1);\n        const fam2: JsonFam | undefined = famMap.get(famId2);\n        return (\n            compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n            strcmp(famId1, famId2)\n        );\n    };\n}\n\n/**\n * Sorts children by birthdate in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n    fam: JsonFam,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!fam.children) {\n        return fam;\n    }\n    const newChildren = fam.children.sort(comparator);\n    return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birthdate.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = birthDatesComparator(gedcom);\n    const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n    return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n    indi: JsonIndi,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!indi.fams) {\n        return indi;\n    }\n    const newFams = indi.fams.sort(comparator);\n    return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = marriageDatesComparator(gedcom);\n    const newIndis = gedcom.indis.map((indi) =>\n        sortIndiSpouses(indi, comparator),\n    );\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is returned.\n * Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    getterFunction: (gedcom: GedcomData) => { [key: string]: GedcomEntry },\n) {\n    if (entry.data) {\n        const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n        if (dereferenced) {\n            return dereferenced;\n        }\n    }\n    return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines.\n * Supports continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n    const result = [entry.data];\n    entry.tree.forEach((subentry) => {\n        if (subentry.tag === 'CONC' && subentry.data) {\n            const last = result.length - 1;\n            result[last] += subentry.data;\n        } else if (subentry.tag === 'CONT' && subentry.data) {\n            result.push(subentry.data);\n        }\n    });\n    return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n    return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n    const lowerName = fileName.toLowerCase();\n    return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n    if (!indi.images || indi.images.length === 0) {\n        return indi;\n    }\n    const newImages: JsonImage[] = [];\n    indi.images.forEach((image) => {\n        const filePath = image.url.replaceAll('\\\\', '/');\n        const fileName = filePath.match(/[^/]*$/)![0];\n        // If the image file has been loaded into memory, use it.\n        if (images.has(filePath)) {\n            newImages.push({url: images.get(filePath)!, title: image.title});\n        } else if (images.has(fileName)) {\n            newImages.push({url: images.get(fileName)!, title: image.title});\n        } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n            newImages.push(image);\n        }\n    });\n    return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n    gedcom: JsonGedcomData,\n    images: Map<string, string>,\n): JsonGedcomData {\n    const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birthdate\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param gedcom\n * @param images Map from file name to image URL. This is used to pass in uploaded images.\n * @param allLanguages\n */\nexport function convertGedcom(\n    gedcom: string,\n    allLanguages: Language[],\n    images: Map<string, string>\n): TopolaData {\n    const entries = parseGedcom(gedcom, allLanguages);\n    const json = gedcomEntriesToJson(entries, allLanguages);\n    if (\n        !json ||\n        !json.indis ||\n        !json.indis.length ||\n        !json.fams ||\n        !json.fams.length\n    ) {\n        throw new TopolaError('GEDCOM_READ_FAILED', 'Insufficient GEDCOM data');\n    }\n    return {\n        chartData: filterImages(normalizeGedcom(json), images),\n        gedcom: prepareGedcom(entries)\n    };\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n    const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n    const notMarriedName = names.find(\n        (subEntry) =>\n            subEntry.tree.filter(\n                (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n            ).length === 0,\n    );\n    const name = notMarriedName || names[0];\n    return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n    const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n    const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')?.data;\n    return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(objectEntry: GedcomEntry): GedcomEntry | undefined {\n    return objectEntry.tree.find(\n        (entry) =>\n            entry.tag === 'FILE' &&\n            entry.data.startsWith('http') &&\n            isImageFile(entry.data),\n    );\n}\n\n/**\n * Reverts a TopolaData object to a gedcom string.\n * This is needed to export to gedcom. The original string is not for given, it could have originally come via\n * file upload, but it could have come by other data sources (url, etc.)\n * @param gedcomData\n */\nexport function jsonToGedcom(gedcomData: GedcomData): string {\n    let gedcom = \"\";\n\n    function processNode(node: GedcomEntry, level: number): void {\n        let line = `${level} `;\n        if (node.pointer) line += `${node.pointer} `;\n        line += `${node.tag}`;\n        if (node.data) line += ` ${node.data}`;\n        gedcom += line + '\\n';\n        if (node.tree && node.tree.length > 0) {\n            node.tree.forEach(child => processNode(child, level + 1));\n        }\n    }\n\n    processNode(gedcomData.head, 0);\n    gedcom += '\\n';\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag === \"SUBM\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n        if (record.tag === \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    Object.values(gedcomData.indis).forEach(indi => {\n        processNode(indi, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.fams).forEach(fam => {\n        processNode(fam, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag !== \"SUBM\" && record.tag !== \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    gedcom += \"0 TRLR\";\n    return gedcom.trim();\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFamPositionHorizontal = exports.getFamPositionVertical = exports.CompositeRenderer = void 0;\n\nconst d3_array_1 = require(\"d3-array\");\n\n/**\n * Common code for tree nodes that are composed of individual and family boxes.\n */\nlet CompositeRenderer = /** @class */ (function () {\n\n    function CompositeRenderer(options) {\n        this.options = options;\n    }\n\n    CompositeRenderer.prototype.getPreferredFamSize = function (id) {\n        // No family box in the simple renderer.\n        return [0, 0];\n    };\n\n    CompositeRenderer.prototype.setPreferredIndiSize = function (indi) {\n        let _a;\n        if (!indi) {\n            return;\n        }\n        _a = this.getPreferredIndiSize(indi.id);\n        indi.width = _a[0];\n        indi.height = _a[1];\n    };\n\n    CompositeRenderer.prototype.updateNodes = function (nodes) {\n        const _this = this;\n        // Calculate individual vertical size per depth.\n        const indiVSizePerDepth = new Map();\n        nodes.forEach(function (node) {\n            let _a;\n            _this.setPreferredIndiSize(node.data.indi);\n            _this.setPreferredIndiSize(node.data.spouse);\n            const family = node.data.family;\n            if (family) {\n                _a = _this.getPreferredFamSize(family.id);\n                family.width = _a[0];\n                family.height = _a[1];\n            }\n            const depth = node.depth;\n            const maxIndiVSize = d3_array_1.max([\n                getIndiVSize(node.data, !!_this.options.horizontal),\n                indiVSizePerDepth.get(depth),\n            ]);\n            indiVSizePerDepth.set(depth, maxIndiVSize);\n        });\n        // Set same width for each depth.\n        nodes.forEach(function (node) {\n            let _a;\n            if (_this.options.horizontal) {\n                if (node.data.indi) {\n                    node.data.indi.width = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.width = indiVSizePerDepth.get(node.depth);\n                }\n            } else {\n                if (node.data.indi) {\n                    node.data.indi.height = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.height = indiVSizePerDepth.get(node.depth);\n                }\n            }\n            const vSize = getVSize(node.data, !!_this.options.horizontal);\n            const hSize = getHSize(node.data, !!_this.options.horizontal);\n            _a = _this.options.horizontal ? [vSize, hSize] : [hSize, vSize];\n            node.data.width = _a[0];\n            node.data.height = _a[1];\n        });\n    };\n\n    CompositeRenderer.prototype.getFamilyAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_1 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const famYOffset = node.family\n                ? d3_array_1.max([-getFamPositionHorizontal(node), 0])\n                : 0;\n            const y_1 = -(node.indi && node.spouse ? node.height / 2 - node.indi.height : 0) +\n                famYOffset;\n            return [x_1, y_1];\n        }\n        const famXOffset = node.family\n            ? d3_array_1.max([-getFamPositionVertical(node), 0])\n            : 0;\n        const x = -(node.indi && node.spouse ? node.width / 2 - node.indi.width : 0) +\n            famXOffset;\n        const y = -node.height / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getSpouseAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_2 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_2 = node.indi ? node.indi.height / 2 : 0;\n            return [x_2, y_2];\n        }\n        const x = node.indi ? node.indi.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getIndiAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_3 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_3 = node.spouse ? -node.spouse.height / 2 : 0;\n            return [x_3, y_3];\n        }\n        const x = node.spouse ? -node.spouse.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    return CompositeRenderer;\n}());\nexports.CompositeRenderer = CompositeRenderer;\n\n/**\n * Returns the relative position of the family box for the vertical layout.\n */\nfunction getFamPositionVertical(node) {\n    const indiWidth = node.indi ? node.indi.width : 0;\n    const spouseWidth = node.spouse ? node.spouse.width : 0;\n    const familyWidth = node.family.width;\n    if (!node.indi || !node.spouse || indiWidth + spouseWidth <= familyWidth) {\n        return (indiWidth + spouseWidth - familyWidth) / 2;\n    }\n    if (familyWidth / 2 >= spouseWidth) {\n        return indiWidth + spouseWidth - familyWidth;\n    }\n    if (familyWidth / 2 >= indiWidth) {\n        return 0;\n    }\n    return indiWidth - familyWidth / 2;\n}\nexports.getFamPositionVertical = getFamPositionVertical;\n\n/**\n * Returns the relative position of the family box for the horizontal layout.\n */\nfunction getFamPositionHorizontal(node) {\n    const indiHeight = node.indi ? node.indi.height : 0;\n    const spouseHeight = node.spouse ? node.spouse.height : 0;\n    const familyHeight = node.family.height;\n    if (!node.indi || !node.spouse) {\n        return (indiHeight + spouseHeight - familyHeight) / 2;\n    }\n    return indiHeight - familyHeight / 2;\n}\nexports.getFamPositionHorizontal = getFamPositionHorizontal;\n\n/** Returns the horizontal size. */\nfunction getHSize(node, horizontal) {\n    if (horizontal) {\n        return ((node.indi ? node.indi.height : 0) +\n            (node.spouse ? node.spouse.height : 0));\n    }\n    const indiHSize = (node.indi ? node.indi.width : 0) + (node.spouse ? node.spouse.width : 0);\n    return d3_array_1.max([indiHSize, node.family ? node.family.width : 0]);\n}\n\nfunction getFamVSize(node, horizontal) {\n    if (horizontal) {\n        return node.family ? node.family.width : 0;\n    }\n    return node.family ? node.family.height : 0;\n}\n\n/** Returns the vertical size of individual boxes. */\nfunction getIndiVSize(node, horizontal) {\n    if (horizontal) {\n        return d3_array_1.max([\n            node.indi ? node.indi.width : 0,\n            node.spouse ? node.spouse.width : 0,\n        ]);\n    }\n    return d3_array_1.max([\n        node.indi ? node.indi.height : 0,\n        node.spouse ? node.spouse.height : 0,\n    ]);\n}\n\n/** Returns the vertical size. */\nfunction getVSize(node, horizontal) {\n    return getIndiVSize(node, horizontal) + getFamVSize(node, horizontal);\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonDataProvider = void 0;\n/** Details of an individual based on Json input. */\nvar JsonIndiDetails = /** @class */ (function () {\n    function JsonIndiDetails(json) {\n        this.json = json;\n    }\n    JsonIndiDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonIndiDetails.prototype.isEgo = function () {\n        return this.json.isEgo;\n    };\n    JsonIndiDetails.prototype.getFamiliesAsSpouse = function () {\n        return this.json.fams || [];\n    };\n    JsonIndiDetails.prototype.getFamilyAsChild = function () {\n        return this.json.famc || null;\n    };\n    JsonIndiDetails.prototype.getFirstName = function () {\n        return this.json.firstName || null;\n    };\n    JsonIndiDetails.prototype.getLastName = function () {\n        // Check if this.json and this.json.lastName exist and are valid before calling toUpperCase()\n        if (this.json.lastName) {\n            return this.json.lastName.toUpperCase();\n        }\n        return null;\n    };\n    JsonIndiDetails.prototype.getBirthDate = function () {\n        return this.json.birth || null;\n    };\n    JsonIndiDetails.prototype.getMaidenName = function () {\n        return this.json.maidenName || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfChildren = function () {\n        return this.json.numberOfChildren || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfMarriages = function () {\n        return this.json.numberOfMarriages || null;\n    };\n    JsonIndiDetails.prototype.getBirthPlace = function () {\n        return (this.json.birth && this.json.birth.place) || null;\n    };\n    JsonIndiDetails.prototype.getDeathDate = function () {\n        return this.json.death || null;\n    };\n    JsonIndiDetails.prototype.getDeathPlace = function () {\n        return (this.json.death && this.json.death.place) || null;\n    };\n    JsonIndiDetails.prototype.isConfirmedDeath = function () {\n        return !!this.json.death && !!this.json.death.confirmed;\n    };\n    JsonIndiDetails.prototype.getSex = function () {\n        return this.json.sex || null;\n    };\n    JsonIndiDetails.prototype.getLanguages = function () {\n        return this.json.languages || [];\n    };\n    JsonIndiDetails.prototype.getLanguagesLabel = function () {\n        const abbreviations = this.json.languages.map(lang => lang.abbreviation);\n        return abbreviations.length > 0 ? `${abbreviations.join(', ')}` : null;\n    };\n    JsonIndiDetails.prototype.getEthnicity = function () {\n        return this.json.ethnicity || null;\n    };\n    JsonIndiDetails.prototype.getTribe = function () {\n        return this.json.tribe || null;\n    };\n    JsonIndiDetails.prototype.getImageUrl = function () {\n        return ((this.json.images &&\n            this.json.images.length > 0 &&\n            this.json.images[0].url) ||\n            null);\n    };\n    JsonIndiDetails.prototype.getImages = function () {\n        return this.json.images || [];\n    };\n    JsonIndiDetails.prototype.getNotes = function () {\n        return this.json.notes || [];\n    };\n    JsonIndiDetails.prototype.getEvents = function () {\n        return this.json.events || [];\n    };\n    JsonIndiDetails.prototype.showLanguages = function () {\n        return !this.json.hideLanguages;\n    };\n    JsonIndiDetails.prototype.showEthnicity = function () {\n        return !this.json.hideEthnicity;\n    };\n    JsonIndiDetails.prototype.showId = function () {\n        return !this.json.hideId;\n    };\n    JsonIndiDetails.prototype.showSex = function () {\n        return !this.json.hideSex;\n    };\n    return JsonIndiDetails;\n}());\n/** Details of a family based on Json input. */\nvar JsonFamDetails = /** @class */ (function () {\n    function JsonFamDetails(json) {\n        this.json = json;\n    }\n    JsonFamDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonFamDetails.prototype.getFather = function () {\n        return this.json.husb || null;\n    };\n    JsonFamDetails.prototype.getMother = function () {\n        return this.json.wife || null;\n    };\n    JsonFamDetails.prototype.getChildren = function () {\n        return this.json.children || [];\n    };\n    JsonFamDetails.prototype.getMarriageDate = function () {\n        return this.json.marriage || null;\n    };\n    JsonFamDetails.prototype.getMarriagePlace = function () {\n        return (this.json.marriage && this.json.marriage.place) || null;\n    };\n    return JsonFamDetails;\n}());\n/** Implementation of the DataProvider interface based on Json input. */\nvar JsonDataProvider = /** @class */ (function () {\n    function JsonDataProvider(json) {\n        var _this = this;\n        this.json = json;\n        this.indis = new Map();\n        this.fams = new Map();\n        json.indis.forEach(function (indi) {\n            return _this.indis.set(indi.id, new JsonIndiDetails(indi));\n        });\n        json.fams.forEach(function (fam) { return _this.fams.set(fam.id, new JsonFamDetails(fam)); });\n    }\n    JsonDataProvider.prototype.getIndi = function (id) {\n        return this.indis.get(id) || null;\n    };\n    JsonDataProvider.prototype.getFam = function (id) {\n        return this.fams.get(id) || null;\n    };\n    return JsonDataProvider;\n}());\nexports.JsonDataProvider = JsonDataProvider;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDateOrRange = exports.formatDate = void 0;\n/** Month in English is used as fallback if a requested translation is not found. */\nvar MONTHS_EN = new Map([\n    [1, 'Jan'],\n    [2, 'Feb'],\n    [3, 'Mar'],\n    [4, 'Apr'],\n    [5, 'May'],\n    [6, 'Jun'],\n    [7, 'Jul'],\n    [8, 'Aug'],\n    [9, 'Sep'],\n    [10, 'Oct'],\n    [11, 'Nov'],\n    [12, 'Dec'],\n]);\n/** Translations of the GEDCOM date qualifiers. */\nvar QUALIFIERS_I18N = new Map([\n    [\n        'cs',\n        new Map([\n            ['cal', 'vypočt.'],\n            ['abt', 'o'],\n            ['est', 'ocenil'],\n            ['before', 'před'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'de',\n        new Map([\n            ['cal', 'errech.'],\n            ['abt', 'etwa'],\n            ['est', 'geschät.'],\n            ['before', 'vor'],\n            ['after', 'nach'],\n        ]),\n    ],\n    [\n        'fr',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'vers'],\n            ['est', 'est.'],\n            ['before', 'avant'],\n            ['after', 'après'],\n        ]),\n    ],\n    [\n        'it',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'circa il'],\n            ['est', 'stim.'],\n            ['before', 'prima del'],\n            ['after', 'dopo del'],\n        ]),\n    ],\n    [\n        'pl',\n        new Map([\n            ['cal', 'wyl.'],\n            ['abt', 'ok.'],\n            ['est', 'szac.'],\n            ['before', 'przed'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'ru',\n        new Map([\n            ['cal', 'выч.'],\n            ['abt', 'ок.'],\n            ['est', 'оцен.'],\n            ['before', 'до'],\n            ['after', 'после'],\n        ]),\n    ],\n]);\nvar shortMonthCache = new Map();\nfunction getShortMonth(month, locale) {\n    if (!Intl || !Intl.DateTimeFormat) {\n        return MONTHS_EN.get(month);\n    }\n    var cacheKey = month + \"|\" + (locale || '');\n    if (shortMonthCache.has(cacheKey)) {\n        return shortMonthCache.get(cacheKey);\n    }\n    var result = new Intl.DateTimeFormat(locale, { month: 'short' }).format(new Date(2000, month - 1));\n    shortMonthCache.set(cacheKey, result);\n    return result;\n}\nfunction getQualifier(qualifier, locale) {\n    var language = locale && locale.split(/[-_]/)[0];\n    var languageMap = language && QUALIFIERS_I18N.get(language);\n    return languageMap ? languageMap.get(qualifier) : qualifier;\n}\n/**\n * Formats the date consisting of day, month and year.\n * All parts of the date are optional.\n */\nfunction formatDateOnly(day, month, year, locale) {\n    if (!day && !month && !year) {\n        return '';\n    }\n    // Fall back to formatting the date manually in case of\n    // - locale not provided\n    // - English (to avoid formatting like 'Oct 11, 2009')\n    // - Lack of i18n support in the browser\n    if (!Intl || !Intl.DateTimeFormat || !locale || locale === 'en') {\n        return [day, month && getShortMonth(month, locale), year].join(' ');\n    }\n    var format = {\n        day: day ? 'numeric' : undefined,\n        month: month ? 'short' : undefined,\n        year: year ? 'numeric' : undefined,\n    };\n    return new Intl.DateTimeFormat(locale, format).format(new Date(year !== null && year !== void 0 ? year : 2000, month ? month - 1 : 1, day !== null && day !== void 0 ? day : 1));\n}\n/** Simple date formatter. */\nfunction formatDate(date, locale) {\n    return [\n        date.qualifier && getQualifier(date.qualifier, locale),\n        formatDateOnly(date.day, date.month, date.year, locale),\n        date.text,\n    ].join(' ');\n}\nexports.formatDate = formatDate;\n/** Formats a DateOrRange object. */\nfunction formatDateOrRange(dateOrRange, locale) {\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, locale);\n    }\n    if (!dateOrRange.dateRange) {\n        return '';\n    }\n    var from = dateOrRange.dateRange.from && formatDate(dateOrRange.dateRange.from);\n    var to = dateOrRange.dateRange.to && formatDate(dateOrRange.dateRange.to);\n    if (from && to) {\n        return from + \" .. \" + to;\n    }\n    if (from) {\n        return getQualifier('after', locale) + \" \" + from;\n    }\n    if (to) {\n        return getQualifier('before', locale) + \" \" + to;\n    }\n    return '';\n}\nexports.formatDateOrRange = formatDateOrRange;\n","var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\n\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"array-flat-polyfill\");\n__exportStar(require(\"./ancestor-chart\"), exports);\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./chart-util\"), exports);\n__exportStar(require(\"./composite-renderer\"), exports);\n__exportStar(require(\"./data\"), exports);\n__exportStar(require(\"./date-format\"), exports);\n__exportStar(require(\"./descendant-chart\"), exports);\n__exportStar(require(\"./detailed-renderer\"), exports);\n__exportStar(require(\"./gedcom\"), exports);\n__exportStar(require(\"./hourglass-chart\"), exports);\n__exportStar(require(\"./relatives-chart\"), exports);\n__exportStar(require(\"./simple-api\"), exports);\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChartColors = void 0;\nlet ChartColors;\n(function (ChartColors) {\n    ChartColors[ChartColors[\"NO_COLOR\"] = 0] = \"NO_COLOR\";\n    ChartColors[ChartColors[\"COLOR_BY_GENERATION\"] = 1] = \"COLOR_BY_GENERATION\";\n    ChartColors[ChartColors[\"COLOR_BY_SEX\"] = 2] = \"COLOR_BY_SEX\";\n    ChartColors[ChartColors[\"COLOR_BY_ETHNICITY\"] = 3] = \"COLOR_BY_ETHNICITY\";\n    ChartColors[ChartColors[\"COLOR_BY_NR_LANGUAGES\"] = 4] = \"COLOR_BY_NR_LANGUAGES\";\n    ChartColors[ChartColors[\"COLOR_BY_LANGUAGE\"] = 5] = \"COLOR_BY_LANGUAGE\";\n})\n// eslint-disable-next-line\n(ChartColors = exports.ChartColors || (exports.ChartColors = {}));\n","var __extends = (this && this.__extends) || (function () {\n    let extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({__proto__: []} instanceof Array && function (d, b) {\n                d.__proto__ = b;\n            }) ||\n            function (d, b) {\n                for (const p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n            };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        if (b === null) {\n            d.prototype = Object.create(b);\n        } else {\n            __.prototype = b.prototype;  // Set the prototype of __ to b's prototype\n            d.prototype = new __();      // Create a new instance of __ to set as d's prototype\n        }\n    };\n})();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedRenderer = exports.getLength = void 0;\n\nconst d3_selection_1 = require(\"d3-selection\");\nconst _1 = require(\"./index\");\nconst date_format_1 = require(\"./date-format\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\nconst composite_renderer_1 = require(\"./composite-renderer\");\nconst INDI_MIN_HEIGHT = 44;\nconst INDI_MIN_WIDTH = 64;\nconst FAM_MIN_HEIGHT = 10;\nconst FAM_MIN_WIDTH = 15;\nconst IMAGE_WIDTH = 70;\n\n/** Minimum box height when an image is present. */\nconst IMAGE_HEIGHT = 90;\nconst ETHNICITY_HEIGHT = 17;\nconst LANGUAGES_HEIGHT = 17;\nconst DETAILS_HEIGHT = 17;\nconst ANIMATION_DELAY_MS = 200;\nconst ANIMATION_DURATION_MS = 500;\nconst textLengthCache = new Map();\n\n/** Calculates the length of the given text in pixels when rendered. */\nfunction getLength(text, textClass) {\n    const cacheKey = text + '|' + textClass;\n    if (textLengthCache.has(cacheKey)) {\n        return textLengthCache.get(cacheKey);\n    }\n    const g = d3_selection_1.select(\"svg\").append('g').attr(\"class\", \"detailed node\");\n    const x = g.append(\"text\").attr(\"class\", textClass).text(text);\n    const length = x.node().getComputedTextLength();\n    g.remove();\n    textLengthCache.set(cacheKey, length);\n    return length;\n}\nexports.getLength = getLength;\n\nconst SEX_SYMBOLS = new Map([\n    ['F', '\\u2640'],\n    ['M', '\\u2642'],\n]);\n\n/**\n * Renders some details about a person such as date and place of birth\n * and death.\n */\nvar DetailedRenderer = /** @class */ (function (_super) {\n    __extends(DetailedRenderer, _super);\n\n    function DetailedRenderer(options) {\n        var _this = _super.call(this, options) || this;\n        _this.options = options;\n        return _this;\n    }\n\n    DetailedRenderer.prototype.getColoringClass = function () {\n        switch (this.options.colors) {\n            case _1.ChartColors.NO_COLOR:\n                return \"nocolor\";\n            case _1.ChartColors.COLOR_BY_GENERATION:\n                return \"bygeneration\";\n            case _1.ChartColors.COLOR_BY_SEX:\n                return \"bysex\";\n            case _1.ChartColors.COLOR_BY_ETHNICITY:\n                return \"byethnicity\";\n            case _1.ChartColors.COLOR_BY_NR_LANGUAGES:\n                return \"bylanguages\";\n            case _1.ChartColors.COLOR_BY_LANGUAGE:\n                return \"bylanguages\";\n            default:\n                return \"bygeneration\";\n        }\n    };\n\n    /** Extracts lines of details for a person. */\n    DetailedRenderer.prototype.getIndiDetails = function (indi) {\n        const detailsList = [];\n        const birthDate = indi.getBirthDate() && date_format_1.formatDateOrRange(indi.getBirthDate(), this.options.locale);\n        const birthPlace = indi.getBirthPlace();\n        const deathDate = indi.getDeathDate() && date_format_1.formatDateOrRange(indi.getDeathDate(), this.options.locale);\n        const deathPlace = indi.getDeathPlace();\n        if (birthDate) {\n            detailsList.push({ symbol: '', text: birthDate });\n        }\n        if (birthPlace) {\n            detailsList.push({ symbol: '', text: birthPlace });\n        }\n        if (birthDate || birthPlace) {\n            detailsList[0].symbol = '*';\n        }\n        const listIndex = detailsList.length;\n        if (deathDate) {\n            detailsList.push({ symbol: '', text: deathDate });\n        }\n        if (deathPlace) {\n            detailsList.push({ symbol: '', text: deathPlace });\n        }\n        if (deathDate || deathPlace) {\n            detailsList[listIndex].symbol = '+';\n        }\n        else if (indi.isConfirmedDeath()) {\n            detailsList.push({ symbol: '+', text: '' });\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredIndiSize = function (id) {\n        // Height\n        const indi = this.options.data.getIndi(id);\n        const details = this.getIndiDetails(indi);\n        const ethnicityHeight = indi.showEthnicity() && indi.getEthnicity() != null ? ETHNICITY_HEIGHT : 0;\n        const languagesHeight = indi.showLanguages() && indi.getLanguages().length > 0 ? LANGUAGES_HEIGHT : 0;\n        const idAndSexHeight = indi.showId() || indi.showSex() ? DETAILS_HEIGHT : 0;\n        const height = d3_array_1.max([\n            INDI_MIN_HEIGHT + languagesHeight + ethnicityHeight + (details.length * DETAILS_HEIGHT) + idAndSexHeight,\n            indi.getImageUrl() ? IMAGE_HEIGHT : 0,\n        ]);\n        // Width\n        const maxDetailsWidth = d3_array_1.max(details.map(detail => getLength(detail.text, \"details\")));\n        const width = d3_array_1.max([\n            maxDetailsWidth + 22,\n            getLength(indi.getFirstName() || '', \"name\") + 8,\n            getLength(indi.getLastName() || '', \"name\") + 8,\n            indi.showLanguages() && indi.getLanguages().length > 0 ? (getLength(indi.getLanguagesLabel(), \"languages\") + 28) : 0,\n            indi.showEthnicity() && indi.getEthnicity() != null ? (getLength(indi.getEthnicity(), \"ethnicity\") + 28) : 0,\n            getLength(id, \"id\") + 32,\n            INDI_MIN_WIDTH,\n        ]) + (indi.getImageUrl() ? IMAGE_WIDTH : 0);\n        return [width, height];\n    };\n\n    /** Extracts lines of details for a family. */\n    DetailedRenderer.prototype.getFamDetails = function (fam) {\n        const detailsList = [];\n        const marriageDate = fam.getMarriageDate() &&\n            date_format_1.formatDateOrRange(fam.getMarriageDate(), this.options.locale);\n        const marriagePlace = fam.getMarriagePlace();\n        if (marriageDate) {\n            detailsList.push({ symbol: '', text: marriageDate });\n        }\n        if (marriagePlace) {\n            detailsList.push({ symbol: '', text: marriagePlace });\n        }\n        if (marriageDate || marriagePlace) {\n            detailsList[0].symbol = '\\u26AD';\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredFamSize = function (id) {\n        const fam = this.options.data.getFam(id);\n        const details = this.getFamDetails(fam);\n        const height = d3_array_1.max([10 + details.length * DETAILS_HEIGHT, FAM_MIN_HEIGHT]);\n        const maxDetailsWidth = d3_array_1.max(details.map(function (x) { return getLength(x.text, \"details\"); }));\n        const width = d3_array_1.max([maxDetailsWidth + 22, FAM_MIN_WIDTH]);\n        return [width, height];\n    };\n\n    DetailedRenderer.prototype.render = function (enter, update) {\n        const _this = this;\n        enter = enter.append('g').attr(\"class\", \"detailed\");\n        update = update.select('g');\n\n        const indiUpdate = enter\n            .merge(update)\n            .selectAll(\"g.indi\")\n            .data(function (node) {\n                const result = [];\n                const famXOffset = !_this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionVertical(node.data), 0])\n                    : 0;\n                const famYOffset = _this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionHorizontal(node.data), 0])\n                    : 0;\n\n                // FIXME: at this point, it only pushes the indis from the updates.\n                //        If the selected indi, is not pushed to redraw, it will keep the dashed stroke if it has it\n                if (node.data.indi) {\n                    node.data.indi.hiddenRelatives = node.data.hiddenRelatives;\n                    result.push({\n                        indi: node.data.indi,\n                        generation: node.data.generation,\n                        xOffset: famXOffset,\n                        yOffset: 0\n                    });\n                }\n                if (node.data.spouse) {\n                    result.push({\n                        indi: node.data.spouse,\n                        generation: node.data.generation,\n                        xOffset: !_this.options.horizontal && node.data.indi ? node.data.indi.width + famXOffset : 0,\n                        yOffset: _this.options.horizontal && node.data.indi ? node.data.indi.height + famYOffset : 0\n                });\n            }\n            return result;\n        }, function (data) {\n            return data.indi.id;\n        });\n        const indiEnter = indiUpdate\n            .enter()\n            .append('g')\n            .attr(\"class\", \"indi\");\n        this.transition(indiEnter.merge(indiUpdate)).attr(\"transform\", function (node) {\n            return \"translate(\" + node.xOffset + \", \" + node.yOffset + \")\";\n        });\n        this.renderIndi(indiEnter, indiUpdate);\n\n        const familyEnter = enter.select(function (node) {\n            return node.data.family ? this : null;\n        }).append('g').attr(\"class\", \"family\");\n        const familyUpdate = update.select(function (node) {\n            return node.data.family ? this : null;\n        }).select(\"g.family\");\n        this.transition(familyEnter.merge(familyUpdate)).attr(\"transform\", function (node) {\n            return _this.getFamTransform(node.data);\n        });\n        this.renderFamily(familyEnter);\n    };\n\n    DetailedRenderer.prototype.getCss = function () {\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"./styles/detailed-renderer.css\", false);\n        try {\n            xhr.send();\n            if (xhr.status === 200) {\n                const cssCode = xhr.responseText\n                return cssCode;\n            } else {\n                throw new Error(\"Failed to load CSS file:\" + xhr.statusText);\n            }\n        } catch (error) {\n            console.error(\"Error occurred while loading CSS:\", error);\n            return null;\n        }\n    };\n\n    DetailedRenderer.prototype.transition = function (selection) {\n        return this.options.animate\n            ? selection\n                .transition()\n                .delay(ANIMATION_DELAY_MS)\n                .duration(ANIMATION_DURATION_MS)\n            : selection;\n    };\n\n    DetailedRenderer.prototype.getFamTransform = function (node) {\n        if (this.options.horizontal) {\n            return \"translate(\"\n                + ((node.indi && node.indi.width) || node.spouse.width) + \", \"\n                + d3_array_1.max([composite_renderer_1.getFamPositionHorizontal(node), 0])\n                + \")\";\n        }\n        return \"translate(\"\n            + d3_array_1.max([composite_renderer_1.getFamPositionVertical(node), 0]) + \", \"\n            + ((node.indi && node.indi.height) || node.spouse.height)\n            + \")\";\n    };\n\n    DetailedRenderer.prototype.getSexClass = function (indiId) {\n        let _a;\n        const sex = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getSex();\n        switch (sex) {\n            case 'M':\n                return \"male\";\n            case 'F':\n                return \"female\";\n            default:\n                break;\n        }\n    };\n\n    const ethnicityCss = new Map();\n    DetailedRenderer.prototype.getEthnicityClass = function (indiId) {\n        if (ethnicityCss.size === 0) {\n            this.buildEthnicityMap()\n        }\n        let _a;\n        const ethnicity = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getEthnicity();\n        if (ethnicity) {\n            return ethnicityCss.get(ethnicity);\n        }\n        return ''  // Blank if no ethnicity\n    };\n\n    DetailedRenderer.prototype.buildEthnicityMap = function () {\n        try {\n            // Assign the ethnicity of the ego as eth0\n            if (!ethnicityCss.has(\"eth0\")) {\n                const egoEthnicity = Array.from(this.options.data.indis?.values() || []).find(indi => indi.isEgo())?.json.ethnicity\n                if (egoEthnicity) {\n                    ethnicityCss.set(egoEthnicity, \"ego\")\n                }\n            }\n            ethnicityCss.set(\"Blanco\", \"blanco\")\n            ethnicityCss.set(\"Afroamerican\", \"afroamerican\")\n            // Assign the ethnicities of the the rest individuals\n            Array.from(this.options.data.indis?.values() || [])\n                .filter(indi => indi.getEthnicity() != null)\n                .forEach(indi => {\n                    const ethnicity = indi.getEthnicity()\n                    if (!ethnicityCss.has(ethnicity)) {\n                        // Might be a tree with no ego individual. Then there is no eth0\n                        const classNum = Object.keys(ethnicityCss).find(k => ethnicityCss[k] === \"ego\") ? ethnicityCss.size : ethnicityCss.size + 1\n                        ethnicityCss.set(ethnicity, \"eth\" + classNum)\n                    }\n                    if (ethnicityCss.size > 14) {\n                        throw new Error(\"No CSS for more than 14 different ethnicities\")\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    DetailedRenderer.prototype.getSelectedStroke = function (indiId) {\n        // TODO someday return \" selected-stroke\"\n        return ' '\n    }\n\n    DetailedRenderer.prototype.getLanguagesClass = function (indiId, selectedLanguageId) {\n        let _a;\n        const languages = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getLanguages();\n        if (selectedLanguageId != null) {\n            // By specific language\n            const hasSelectedLanguage = languages.some(language => language.id === selectedLanguageId);\n            if (hasSelectedLanguage) {\n                return \"l\" + selectedLanguageId;\n            }\n        } else {\n            // By nr. languages\n            return languages.length > 0 ? 'n' + Math.min(languages.length, 7) : '';\n        }\n        return '' // Blank if no language\n    }\n\n    DetailedRenderer.prototype.resetCss = function () {\n        ethnicityCss.clear()\n        console.log(\"Cleared CSS maps\")\n    }\n\n    DetailedRenderer.prototype.renderIndi = function (enter, update) {\n        const _this = this;\n\n        if (this.options.indiHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr(\"href\", function (data) { return _this.options.indiHrefFunc(data.indi.id); });\n            update = update.select('a');\n        }\n\n        if (this.options.indiCallback) {\n            enter.on(\"click\", function (event, data) {\n                return _this.options.indiCallback({\n                    id: data.indi.id,\n                    generation: data.generation,\n                });\n            });\n        }\n\n        // Background\n        const background = enter\n            .append(\"rect\")\n            .attr(\"rx\", 5)\n            .attr(\"stroke-width\", 0)\n            .attr(\"class\", function (node) {\n                return \"background \"\n                    + _this.getColoringClass() + \" \"\n                    + _this.getSexClass(node.indi.id) + \" \"\n                    + _this.getEthnicityClass(node.indi.id) + \" \"\n                    + _this.getLanguagesClass(node.indi.id, _this.options.selectedLanguage) + \" \"\n            })\n            .merge(update.select(\"rect.background\"));\n\n        this.transition(background)\n            .attr(\"width\", function (node) { return node.indi.width; })\n            .attr(\"height\", function (node) { return node.indi.height; });\n\n        // Clip path\n        const getClipId = function (id) {\n            return \"clip-\" + id;\n        };\n        enter\n            .append(\"clipPath\")\n            .attr(\"id\", function (node) { return getClipId(node.indi.id); })\n            .append(\"rect\")\n            .attr(\"rx\", 5)\n            .merge(update.select(\"clipPath rect\"))\n            .attr(\"width\", function (node) { return node.indi.width; })\n            .attr(\"height\", function (node) { return node.indi.height; });\n        const getIndi = function (data) {\n            return _this.options.data.getIndi(data.indi.id);\n        };\n        const getDetailsWidth = function (data) {\n            return data.indi.width - (getIndi(data).getImageUrl() ? IMAGE_WIDTH : 0);\n        };\n\n        // Name\n        enter\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"class\", \"name\")\n            .attr(\"transform\", function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 17)\"; })\n            .text(function (node) { return getIndi(node).getFirstName(); });\n        enter\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"class\", \"name\")\n            .attr(\"transform\", function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 33)\"; })\n            .text(function (node) { return getIndi(node).getLastName(); })\n\n        // Languages\n        const languages = enter\n            .filter(function (node) {\n                return getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0\n            })\n            .append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"class\", \"languages\")\n            .text(function (node) {\n                return getIndi(node).getLanguagesLabel()\n            });\n        this.transition(languages).attr(\"transform\", function (node) {\n            // if the indi does not have languages to show, the height start does not apply\n            const languages_height_start =  getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0 ? 52 : null\n            return \"translate(\" + getDetailsWidth(node) / 2 + \", \" + languages_height_start + \")\";\n        });\n\n        // Ethnicity\n        const ethnicity = enter\n            .filter(function (node) {\n                return getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null\n            })\n            .append(\"text\")\n            .attr(\"class\", \"ethnicity\")\n            .text(function (node) {\n                return '¤ ' + getIndi(node).getEthnicity()\n            });\n        this.transition(ethnicity).attr(\"transform\", function (node) {\n            let ethnicity_height_start =  null\n            if (getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) {\n                ethnicity_height_start = 71\n            } else if (getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) {\n                ethnicity_height_start = 55\n            }\n            return \"translate(5, \" + ethnicity_height_start + \")\";\n        });\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const indi = getIndi(node);\n            const detailsList = _this.getIndiDetails(indi);\n            details.set(node.indi.id, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        function details_height_start(node) {\n            return 55\n                + ((getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) ? LANGUAGES_HEIGHT : 0)\n                + ((getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) ? ETHNICITY_HEIGHT : 0)\n        }\n\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.indi.id).length > i;\n            });\n\n            lineGroup\n                .append(\"text\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", function (node) {\n                    return \"translate(9, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].symbol;\n                });\n            lineGroup\n                .append(\"text\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", function (node) {\n                    return \"translate(15, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n\n        // Render id\n        const id = enter\n            .append(\"text\")\n            .attr(\"class\", \"id\")\n            .text(function (node) {\n                return (getIndi(node).showId() ? node.indi.id : '');\n            })\n            .merge(update.select(\"text.id\"));\n        this.transition(id).attr(\"transform\", function (node) { return \"translate(9, \" + (node.indi.height - 5) + \")\"; });\n\n        // Render sex\n        const sex = enter\n            .append(\"text\")\n            .attr(\"class\", \"details sex\")\n            .attr(\"text-anchor\", \"end\")\n            .text(function (node) {\n                const sexSymbol = SEX_SYMBOLS.get(getIndi(node).getSex() || '') || '';\n                return getIndi(node).showSex() ? sexSymbol : '';\n            })\n            .merge(update.select(\"text.sex\"));\n        this.transition(sex).attr(\"transform\", function (node) {\n            return \"translate(\" + (getDetailsWidth(node) - 5) + \", \" + (node.indi.height - 5) + \")\";\n        });\n\n        // Image\n        enter.filter(function (node) { return !!getIndi(node).getImageUrl(); })\n            .append(\"image\")\n            .attr(\"width\", IMAGE_WIDTH)\n            .attr(\"height\", function (node) { return node.indi.height; })\n            .attr(\"preserveAspectRatio\", \"xMidYMin\")\n            .attr(\"transform\", function (node) { return \"translate(\" + (node.indi.width - IMAGE_WIDTH) + \", 0)\"; })\n            .attr(\"clip-path\", function (node) { return \"url(#\" + getClipId(node.indi.id) + \")\"; })\n            .attr(\"href\", function (node) { return getIndi(node).getImageUrl(); });\n\n        // Border on top\n        const border = enter\n            .append(\"rect\")\n            .attr(\"rx\", 5)\n            .attr(\"fill-opacity\", 0)\n            .attr(\"class\", function (node) {\n                return \"border\" + _this.getSelectedStroke(node.indi.id);\n            })\n            .attr(\"stroke-dasharray\", function (node) {\n                if (node.indi.hiddenRelatives) {\n                    return \"5, 5\"\n                } else {\n                    return \"0, 0\"\n                }\n            })\n            .merge(update.select(\"rect.border\"));\n        this.transition(border)\n            .attr(\"width\", function (node) { return node.indi.width; })\n            .attr(\"height\", function (node) { return node.indi.height; });\n    };\n\n    DetailedRenderer.prototype.renderFamily = function (enter) {\n        const _this = this;\n\n        if (this.options.famHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr(\"href\", function (node) {\n                return _this.options.famHrefFunc(node.data.family.id);\n            });\n        }\n\n        if (this.options.famCallback) {\n            enter.on(\"click\", function (event, node) {\n                return _this.options.famCallback({\n                    id: node.data.family.id,\n                    generation: node.data.generation,\n                });\n            });\n        }\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const famId = node.data.family.id;\n            const fam = _this.options.data.getFam(famId);\n            const detailsList = _this.getFamDetails(fam);\n            details.set(famId, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        // Box\n        enter.filter(function (node) {\n                const detail = details.get(node.data.family.id);\n                return 0 < detail.length;\n        }).append(\"rect\")\n        .attr(\"class\", this.getColoringClass())\n        .attr(\"rx\", 5)\n        .attr(\"ry\", 5)\n        .attr(\"width\", function (node) { return node.data.family.width; })\n        .attr(\"height\", function (node) { return node.data.family.height; });\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.data.family.id).length > i;\n            });\n            lineGroup\n                .append(\"text\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", \"translate(9, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].symbol;\n                });\n            lineGroup\n                .append(\"text\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"class\", \"details\")\n                .attr(\"transform\", \"translate(15, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n    };\n\n    return DetailedRenderer;\n}(composite_renderer_1.CompositeRenderer));\nexports.DetailedRenderer = DetailedRenderer;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.gedcomEntriesToJson = exports.gedcomToJson = exports.getDate = void 0;\nconst parse_gedcom_1 = require(\"parse-gedcom\");\n\n/** Returns the first entry with the given tag or undefined if not found. */\nfunction findTag(tree, tag) {\n    return tree.find(function (entry) { return entry.tag === tag; });\n}\n\n/** Returns all entries with the given tag. */\nfunction findTags(tree, tag) {\n    return tree.filter(function (entry) { return entry.tag === tag; });\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer) {\n    return pointer.substring(1, pointer.length - 1);\n}\n\n/** Extracts the first and last name from a GEDCOM name field. */\nfunction extractName(name) {\n    const arr = name.split('/');\n    if (arr.length === 1) {\n        return { firstName: arr[0].trim() };\n    }\n    return { firstName: arr[0].trim(), lastName: arr[1].trim() };\n}\n\n/** Maps month abbreviations used in GEDCOM to month numbers. */\nconst MONTHS = new Map([\n    ['jan', 1],\n    ['feb', 2],\n    ['mar', 3],\n    ['apr', 4],\n    ['may', 5],\n    ['jun', 6],\n    ['jul', 7],\n    ['aug', 8],\n    ['sep', 9],\n    ['oct', 10],\n    ['nov', 11],\n    ['dec', 12],\n]);\n\n/** Parses the GEDCOM date into the Date structure. */\nfunction parseDate(parts) {\n    let lastPart;\n    if (!parts || !parts.length) {\n        return undefined;\n    }\n    const result = {};\n    // Remove parentheses if they surround the text\n    if (parts[0].startsWith('(') && parts[parts.length - 1].endsWith(')')) {\n        parts[0] = parts[0].substring(1);\n        lastPart = parts[parts.length - 1];\n        parts[parts.length - 1] = lastPart.substring(0, lastPart.length - 1);\n    }\n    const fullText = parts.join(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart === 'cal' || firstPart === 'abt' || firstPart === 'est') {\n        result.qualifier = firstPart;\n        parts = parts.slice(1);\n    }\n    if (parts.length && parts[parts.length - 1].match(/^\\d{1,4}$/)) {\n        result.year = Number(parts[parts.length - 1]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        lastPart = parts[parts.length - 1].toLowerCase();\n        if (MONTHS.has(lastPart)) {\n            result.month = MONTHS.get(lastPart);\n            parts = parts.slice(0, parts.length - 1);\n        }\n    }\n    if (parts.length && parts[0].match(/^\\d\\d?$/)) {\n        result.day = Number(parts[0]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        // A part didn't get parsed. Return the whole text verbatim.\n        return { text: fullText };\n    }\n    return result;\n}\n\n/** Parses a GEDCOM date or date range. */\nfunction getDate(gedcomDate) {\n    const parts = gedcomDate.replace(/@.*@/, '').trim().split(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart.startsWith('bet')) {\n        const i = parts.findIndex(function (x) {\n            return x.toLowerCase() === 'and';\n        });\n        const from = parseDate(parts.slice(1, i));\n        const to = parseDate(parts.slice(i + 1));\n        return { dateRange: { from: from, to: to } };\n    }\n    if (firstPart.startsWith('bef') || firstPart.startsWith('aft')) {\n        const date_1 = parseDate(parts.slice(1));\n        if (firstPart.startsWith('bef')) {\n            return { dateRange: { to: date_1 } };\n        }\n        return { dateRange: { from: date_1 } };\n    }\n    const date = parseDate(parts);\n    if (date) {\n        return { date: date };\n    }\n    return undefined;\n}\nexports.getDate = getDate;\n\n/**\n * Tries to treat an input tag as NOTE and parse all lines of notes\n */\nfunction createNotes(notesTag) {\n    if (!notesTag || notesTag.tag !== 'NOTE')\n        return undefined;\n    return findTags(notesTag.tree, 'CONT')\n        .filter(function (x) { return x.data; })\n        .reduce(function (a, i) { return a.concat(i.data); }, [notesTag.data]);\n}\n\n/**\n * Creates a JsonEvent object from a GEDCOM entry.\n * Used for BIRT, DEAT and MARR tags.\n */\nfunction createEvent(entry) {\n    if (!entry) {\n        return undefined;\n    }\n    const typeTag = findTag(entry.tree, 'TYPE');\n    const dateTag = findTag(entry.tree, 'DATE');\n    const placeTag = findTag(entry.tree, 'PLAC');\n    const date = dateTag && dateTag.data && getDate(dateTag.data);\n    const place = placeTag && placeTag.data;\n    if (date || place) {\n        const result = date || {};\n        if (place) {\n            result.place = place;\n        }\n        result.confirmed = true;\n        result.type = typeTag ? typeTag.data : undefined;\n        result.notes = createNotes(findTag(entry.tree, 'NOTE'));\n        return result;\n    }\n    if (entry.data && entry.data.toLowerCase() === 'y') {\n        return { confirmed: true };\n    }\n    return undefined;\n}\n\n/** Creates a JsonIndi object from an INDI entry in GEDCOM. */\nfunction createIndi(entry, objects, ego, allLanguages) {\n    let firstName;\n    let lastName;\n    const id = pointerToId(entry.pointer);\n    const fams = findTags(entry.tree, 'FAMS').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const indi = {id: id, fams: fams};\n\n    // is Ego?\n    if (ego) {\n        indi.isEgo = pointerToId(ego.pointer) === id\n    }\n\n    // Name\n    const nameTags = findTags(entry.tree, 'NAME');\n    const isMaiden = function (nameTag) {\n        const type = findTag(nameTag.tree, 'TYPE');\n        return type !== undefined && type.data === 'maiden';\n    };\n    const main = nameTags.find(function (x) {\n        return !isMaiden(x);\n    });\n    const maiden = nameTags.find(isMaiden);\n    if (main) {\n        const _a = extractName(main.data);\n        firstName = _a.firstName;\n        lastName = _a.lastName;\n        if (firstName) {\n            indi.firstName = firstName;\n        }\n        if (lastName) {\n            indi.lastName = lastName;\n        }\n    }\n    if (maiden) {\n        let _b = extractName(maiden.data);\n        firstName = _b.firstName;\n        lastName = _b.lastName;\n        if (lastName) {\n            indi.maidenName = lastName;\n        }\n        if (firstName && !indi.firstName) {\n            indi.firstName = firstName;\n        }\n    }\n    // Number of children\n    const nchiTag = findTag(entry.tree, 'NCHI');\n    if (nchiTag) {\n        indi.numberOfChildren = +nchiTag.data;\n    }\n    // Number of marriages\n    const nmrTag = findTag(entry.tree, 'NMR');\n    if (nmrTag) {\n        indi.numberOfMarriages = +nmrTag.data;\n    }\n    // Sex\n    const sexTag = findTag(entry.tree, 'SEX');\n    if (sexTag) {\n        indi.sex = sexTag.data;\n    }\n    // Languages\n    const languageTags = findTags(entry.tree, 'LANG')\n    if (languageTags) {\n        const gedcomLanguages = findTags(entry.tree, 'LANG').map(lang => lang.data)\n        indi.languages = allLanguages.filter(l => gedcomLanguages.includes(l.name));\n    }\n    // Ethnicity\n    const ethnicityTag = findTag(entry.tree, '_ETHN');\n    if (ethnicityTag) {\n        indi.ethnicity = ethnicityTag.data;\n    }\n    // Tribe\n    const tribeTag = findTag(entry.tree, '_TRIB');\n    if (tribeTag) {\n        indi.tribe = tribeTag.data;\n    }\n    // Family with parents\n    const famcTag = findTag(entry.tree, 'FAMC');\n    if (famcTag) {\n        indi.famc = pointerToId(famcTag.data);\n    }\n    // Image URL\n    const objeTags = findTags(entry.tree, 'OBJE');\n    if (objeTags.length > 0) {\n        // Dereference OBJECT if needed\n        const getFileTag = function (tag) {\n            const realObjeTag = tag.data ? objects.get(pointerToId(tag.data)) : tag;\n            if (!realObjeTag)\n                return undefined;\n            const file = findTag(realObjeTag.tree, 'FILE');\n            const title = findTag(realObjeTag.tree, 'TITL');\n            if (!file)\n                return undefined;\n            return {\n                url: file.data,\n                title: title && title.data,\n            };\n        };\n        indi.images = objeTags\n            .map(getFileTag)\n            .filter(function (x) { return x !== undefined; });\n    }\n    // Birthdate and place\n    const birth = createEvent(findTag(entry.tree, 'BIRT'));\n    if (birth) {\n        indi.birth = birth;\n    }\n    // Death date and place\n    const death = createEvent(findTag(entry.tree, 'DEAT'));\n    if (death) {\n        indi.death = death;\n    }\n    // Notes\n    indi.notes = createNotes(findTag(entry.tree, 'NOTE'));\n    // Events\n    indi.events = findTags(entry.tree, 'EVEN')\n        .map(createEvent)\n        .filter(function (x) { return x !== null; });\n    return indi;\n}\n\n/** Creates a JsonFam object from an FAM entry in GEDCOM. */\nfunction createFam(entry) {\n    const id = pointerToId(entry.pointer);\n    const children = findTags(entry.tree, 'CHIL').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const fam = {id: id, children: children};\n    // Husband.\n    const husbTag = findTag(entry.tree, 'HUSB');\n    if (husbTag) {\n        fam.husb = pointerToId(husbTag.data);\n    }\n    // Wife.\n    const wifeTag = findTag(entry.tree, 'WIFE');\n    if (wifeTag) {\n        fam.wife = pointerToId(wifeTag.data);\n    }\n    // Marriage\n    const marriage = createEvent(findTag(entry.tree, 'MARR'));\n    if (marriage) {\n        fam.marriage = marriage;\n    }\n    return fam;\n}\n\n/** Creates a map from ID to entry from an array of entries. */\nfunction createMap(entries) {\n    return new Map(entries.map(function (entry) { return [pointerToId(entry.pointer), entry]; }));\n}\n\n/** Parses a GEDCOM file into a JsonGedcomData structure. */\nfunction gedcomToJson(gedcomContents, allLanguages) {\n    return gedcomEntriesToJson(parse_gedcom_1.parse(gedcomContents, allLanguages));\n}\nexports.gedcomToJson = gedcomToJson;\n\n/** Converts parsed GEDCOM entries into a JsonGedcomData structure. */\nfunction gedcomEntriesToJson(gedcom, allLanguages) {\n    const objects = createMap(findTags(gedcom, 'OBJE'));\n    const ego = findTags(gedcom, 'EGO')\n    const indis = findTags(gedcom, 'INDI').map(function (entry) {\n        return createIndi(entry, objects, ego.length > 0 ? ego[0] : undefined, allLanguages);\n    });\n    const fams = findTags(gedcom, 'FAM').map(createFam);\n    return { indis: indis, fams: fams };\n}\nexports.gedcomEntriesToJson = gedcomEntriesToJson;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.HourglassChart = void 0;\n\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar chart_util_1 = require(\"./chart-util\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\n\n/**\n * Renders an hourglass chart. It consists of an ancestor chart and\n * a descendant chart for a family.\n */\nvar HourglassChart = /** @class */ (function () {\n    function HourglassChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n\n    HourglassChart.prototype.render = function () {\n        const ancestorsRoot = ancestor_chart_1.getAncestorsTree(this.options);\n        const ancestorNodes = this.util.layOutChart(ancestorsRoot, { flipVertically: true });\n        const descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // slice(1) removes the duplicated start node.\n        const nodes = ancestorNodes.slice(1).concat(descendantNodes);\n        // dash the stroke of indis having non-visible relatives\n        this.util.markHiddenRelatives(nodes, this.options)\n\n        const animationPromise = this.util.renderChart(nodes);\n        const info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return HourglassChart;\n}());\nexports.HourglassChart = HourglassChart;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RelativesChart = void 0;\n\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar id_generator_1 = require(\"./id-generator\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\nvar d3_array_1 = require(\"d3-array\");\nvar chart_util_1 = require(\"./chart-util\");\n\n/** A view of a family that hides one child individual. */\nvar FilterChildFam = /** @class */ (function () {\n    function FilterChildFam(fam, childId) {\n        this.fam = fam;\n        this.childId = childId;\n    }\n    FilterChildFam.prototype.getId = function () {\n        return this.fam.getId();\n    };\n    FilterChildFam.prototype.getFather = function () {\n        return this.fam.getFather();\n    };\n    FilterChildFam.prototype.getMother = function () {\n        return this.fam.getMother();\n    };\n    FilterChildFam.prototype.getChildren = function () {\n        var children = __spreadArray([], this.fam.getChildren());\n        var index = children.indexOf(this.childId);\n        if (index !== -1) {\n            children.splice(index, 1);\n        }\n        return children;\n    };\n    return FilterChildFam;\n}());\n/** Data provider proxy that filters out a specific child individual. */\nvar FilterChildData = /** @class */ (function () {\n    function FilterChildData(data, childId) {\n        this.data = data;\n        this.childId = childId;\n    }\n    FilterChildData.prototype.getIndi = function (id) {\n        return this.data.getIndi(id);\n    };\n    FilterChildData.prototype.getFam = function (id) {\n        return new FilterChildFam(this.data.getFam(id), this.childId);\n    };\n    return FilterChildData;\n}());\n/** Chart layout showing all relatives of a person. */\nvar RelativesChart = /** @class */ (function () {\n    function RelativesChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n        this.options.idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n    }\n\n    RelativesChart.prototype.layOutAncestorDescendants = function (ancestorsRoot, focusedNode) {\n        // let ancestorDescentants: Array<HierarchyPointNode<TreeNode>> = [];\n        var _this = this;\n        var ancestorData = new Map();\n        ancestorsRoot.eachAfter(function (node) {\n            if (!node.parent) {\n                return;\n            }\n            var descendantOptions = __assign({}, _this.options);\n            descendantOptions.startFam = node.data.family.id;\n            descendantOptions.startIndi = undefined;\n            var child = node.id === node.parent.data.spouseParentNodeId\n                ? node.parent.data.spouse.id\n                : node.parent.data.indi.id;\n            descendantOptions.data = new FilterChildData(descendantOptions.data, child);\n            descendantOptions.baseGeneration =\n                (_this.options.baseGeneration || 0) - node.depth;\n            var descendantNodes = descendant_chart_1.layOutDescendants(descendantOptions);\n            // The id could be modified because of duplicates. This can happen when\n            // drawing one family in multiple places of the chart).\n            node.data.id = descendantNodes[0].id;\n            var chartInfo = chart_util_1.getChartInfoWithoutMargin(descendantNodes);\n            var parentData = (node.children || []).map(function (childNode) {\n                return ancestorData.get(childNode.data.id);\n            });\n            var parentHeight = parentData\n                .map(function (data) { return data.height; })\n                .reduce(function (a, b) { return a + b + chart_util_1.V_SPACING; }, 0);\n            var data = {\n                descendantNodes: descendantNodes,\n                width: chartInfo.size[0],\n                height: chartInfo.size[1] + parentHeight,\n                x: chartInfo.origin[0],\n                y: chartInfo.origin[1] + parentHeight,\n            };\n            ancestorData.set(node.data.id, data);\n        });\n        ancestorsRoot.each(function (node) {\n            if (!node.parent) {\n                return;\n            }\n            var data = ancestorData.get(node.data.id);\n            var parentData = ancestorData.get(node.parent.data.id);\n            data.left =\n                parentData && !parentData.middle\n                    ? parentData.left\n                    : node.parent.data.indiParentNodeId === node.id;\n            data.middle =\n                (!parentData || parentData.middle) &&\n                node.parent.children.length === 1;\n        });\n        ancestorsRoot.each(function (node) {\n            var data = ancestorData.get(node.data.id);\n            var thisNode = data ? data.descendantNodes[0] : focusedNode;\n            (node.children || []).forEach(function (child) {\n                var childNode = ancestorData.get(child.data.id).descendantNodes[0];\n                childNode.parent = thisNode;\n            });\n            if (node.data.indiParentNodeId && node.children) {\n                thisNode.data.indiParentNodeId = node.children.find(function (childNode) { return childNode.id === node.data.indiParentNodeId; }).data.id;\n            }\n            if (node.data.spouseParentNodeId && node.children) {\n                thisNode.data.spouseParentNodeId = node.children.find(function (childNode) { return childNode.id === node.data.spouseParentNodeId; }).data.id;\n            }\n        });\n        ancestorsRoot.each(function (node) {\n            let middleX;\n            let parentData;\n            let parentNode;\n            let data;\n            var nodeData = ancestorData.get(node.data.id);\n            // Lay out the nodes produced by laying out descendants of ancestors\n            // instead of the ancestor nodes from ancestorsRoot.\n            var thisNode = nodeData ? nodeData.descendantNodes[0] : focusedNode;\n            var indiParent = node.children &&\n                node.children.find(function (child) { return child.id === node.data.indiParentNodeId; });\n            var spouseParent = node.children &&\n                node.children.find(function (child) { return child.id === node.data.spouseParentNodeId; });\n            var nodeX = thisNode.x;\n            var nodeY = thisNode.y;\n            var nodeWidth = thisNode.data.width;\n            var nodeHeight = thisNode.data.height;\n            var indiWidth = thisNode.data.indi ? thisNode.data.indi.width : 0;\n            var spouseWidth = thisNode.data.spouse\n                ? thisNode.data.spouse.width\n                : 0;\n            // Lay out the individual's ancestors and their descendants.\n            if (indiParent) {\n                data = ancestorData.get(indiParent.data.id);\n                parentNode = data.descendantNodes[0];\n                parentData = parentNode.data;\n                var spouseTreeHeight = spouseParent\n                    ? ancestorData.get(spouseParent.data.id).height + chart_util_1.V_SPACING\n                    : 0;\n                var dx_1 = nodeX +\n                    data.x -\n                    nodeWidth / 2 +\n                    indiWidth / 2 +\n                    (data.left ? -data.width - chart_util_1.H_SPACING : chart_util_1.H_SPACING);\n                var dy_1 = nodeY +\n                    data.y -\n                    nodeHeight / 2 -\n                    data.height +\n                    (data.left ? -chart_util_1.V_SPACING : -spouseTreeHeight - chart_util_1.V_SPACING);\n                // Move all nodes by (dx, dy). The ancestor node,\n                // ie. data.descendantNodes[0] is now at (0, 0).\n                data.descendantNodes.forEach(function (node) {\n                    node.x += dx_1;\n                    node.y += dy_1;\n                });\n                // Set the ancestor's horizontal position independently.\n                middleX = indiWidth / 2 -\n                    nodeWidth / 2 +\n                    parentData.width / 2 -\n                    (parentData.indi\n                        ? parentData.indi.width\n                        : parentData.spouse.width);\n                if (data.middle) {\n                    parentNode.x = 0;\n                }\n                else if (!nodeData || nodeData.middle) {\n                    parentNode.x =\n                        -nodeWidth / 2 - parentData.width / 2 + indiWidth - chart_util_1.H_SPACING / 2;\n                }\n                else if (data.left) {\n                    parentNode.x =\n                        nodeX +\n                        d3_array_1.min([\n                            nodeWidth / 2 -\n                            parentData.width / 2 -\n                            spouseWidth / 2 -\n                            chart_util_1.H_SPACING,\n                            middleX,\n                        ]);\n                }\n                else {\n                    parentNode.x =\n                        nodeX + d3_array_1.max([parentData.width / 2 - nodeWidth / 2, middleX]);\n                }\n            }\n            // Lay out the spouse's ancestors and their descendants.\n            if (spouseParent) {\n                data = ancestorData.get(spouseParent.data.id);\n                parentNode = data.descendantNodes[0];\n                parentData = parentNode.data;\n                const indiTreeHeight = indiParent\n                    ? ancestorData.get(indiParent.data.id).height + chart_util_1.V_SPACING\n                    : 0;\n                const dx_2 = nodeX +\n                    data.x +\n                    nodeWidth / 2 -\n                    spouseWidth / 2 +\n                    (data.left ? -data.width - chart_util_1.H_SPACING : chart_util_1.H_SPACING);\n                const dy_2 = nodeY +\n                    data.y -\n                    nodeHeight / 2 -\n                    data.height +\n                    (data.left ? -indiTreeHeight - chart_util_1.V_SPACING : -chart_util_1.V_SPACING);\n                // Move all nodes by (dx, dy). The ancestor node,\n                // ie. data.descendantNodes[0] is now at (0, 0).\n                data.descendantNodes.forEach(function (node) {\n                    node.x += dx_2;\n                    node.y += dy_2;\n                });\n                // Set the ancestor's horizontal position independently.\n                middleX = nodeWidth / 2 -\n                    spouseWidth / 2 +\n                    parentData.width / 2 -\n                    (parentData.indi\n                        ? parentData.indi.width\n                        : parentData.spouse.width);\n                if (data.middle) {\n                    parentNode.x = 0;\n                }\n                else if (!nodeData || nodeData.middle) {\n                    parentNode.x =\n                        nodeWidth / 2 + parentData.width / 2 - spouseWidth + chart_util_1.H_SPACING / 2;\n                }\n                else if (data.left) {\n                    parentNode.x =\n                        nodeX + d3_array_1.min([nodeWidth / 2 - parentData.width / 2, middleX]);\n                }\n                else {\n                    parentNode.x =\n                        nodeX +\n                        d3_array_1.max([\n                            parentData.width / 2 - nodeWidth / 2 + indiWidth / 2 + chart_util_1.H_SPACING,\n                            middleX,\n                        ]);\n                }\n            }\n        });\n        return Array.from(ancestorData.values())\n            .map(function (data) { return data.descendantNodes; })\n            .reduce(function (a, b) { return a.concat(b); }, []);\n    };\n\n    RelativesChart.prototype.render = function () {\n        var descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // Don't use common id generator because these nodes will not be drawn.\n        var ancestorOptions = Object.assign({}, this.options, {\n            idGenerator: undefined,\n        });\n        var ancestorsRoot = ancestor_chart_1.getAncestorsTree(ancestorOptions);\n        var ancestorDescentants = this.layOutAncestorDescendants(ancestorsRoot, descendantNodes[0]);\n        var nodes = descendantNodes.concat(ancestorDescentants);\n        // dash the stroke of indis having non-visible relatives\n        this.util.markHiddenRelatives(nodes, this.options)\n\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return RelativesChart;\n}());\nexports.RelativesChart = RelativesChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChart = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst data_1 = require(\"./data\");\nconst DEFAULT_SVG_SELECTOR = 'svg';\n\nfunction createChartOptions(chartOptions, renderOptions, options) {\n    const data = new data_1.JsonDataProvider(chartOptions.json);\n    const indiHrefFunc = chartOptions.indiUrl ? function (id) {\n            return chartOptions.indiUrl.replace(`${id}`, id);\n        } : undefined;\n    const famHrefFunc = chartOptions.famUrl ? function (id) {\n            return chartOptions.famUrl.replace(`${id}`, id);\n        } : undefined;\n    // If startIndi nor startFam is provided, select the first indi in the data.\n    if (!renderOptions.startIndi && !renderOptions.startFam) {\n        renderOptions.startIndi = chartOptions.json.indis[0].id;\n    }\n    const animate = !options.initialRender && chartOptions.animate;\n    return {\n        data: data,\n        renderer: new chartOptions.renderer({\n            data: data,\n            indiHrefFunc: indiHrefFunc,\n            famHrefFunc: famHrefFunc,\n            indiCallback: chartOptions.indiCallback,\n            famCallback: chartOptions.famCallback,\n            horizontal: chartOptions.horizontal,\n            colors: chartOptions.colors,\n            selectedLanguage: chartOptions.selectedLanguage,\n            animate: animate,\n            locale: chartOptions.locale,\n        }),\n        startIndi: renderOptions.startIndi,\n        startFam: renderOptions.startFam,\n        svgSelector: chartOptions.svgSelector || DEFAULT_SVG_SELECTOR,\n        horizontal: chartOptions.horizontal,\n        baseGeneration: renderOptions.baseGeneration,\n        animate: animate,\n    };\n}\n\nconst SimpleChartHandle = /** @class */ (function () {\n\n    function SimpleChartHandle(options) {\n        this.options = options;\n        this.initialRender = true;\n    }\n\n    SimpleChartHandle.prototype.render = function (renderOptions) {\n        if (renderOptions === void 0) {\n            renderOptions = {};\n        }\n        const chartOptions = createChartOptions(this.options, renderOptions, {\n            initialRender: this.initialRender\n        });\n        // Reset CSS maps\n        if (this.initialRender) {\n            chartOptions.renderer.resetCss();\n        }\n        this.initialRender = false;\n        const chart = new this.options.chartType(chartOptions);\n        const info = chart.render();\n        if (this.options.updateSvgSize !== false) {\n            d3_selection_1.select(chartOptions.svgSelector)\n                .attr('width', info.size[0])\n                .attr('height', info.size[1]);\n        }\n        return info;\n    };\n    /**\n     * Updates the chart input data.\n     * This is useful when the data is dynamically loaded and a different subset\n     * of data will be displayed.\n     */\n    SimpleChartHandle.prototype.setData = function (json) {\n        this.options.json = json;\n    };\n    return SimpleChartHandle;\n}());\n\nfunction createChart(options) {\n    return new SimpleChartHandle(options);\n}\nexports.createChart = createChart;\n","import {IndiInfo} from '../lib/topola';\nimport {TopolaData} from '../util/gedcom_util';\nimport {Language} from \".././model/languages-loader\";\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n    UPLOADED,\n    GEDCOM_URL,\n    EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n    spec: SourceSpecT;\n    selection?: IndiInfo;\n    allLanguages?: Language[];\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n    /**\n     * Returns true if the application is now loading a completely new data set\n     * and the existing one should be wiped.\n     */\n    isNewData(\n        newSource: SourceSelection<SourceSpecT>,\n        oldSource: SourceSelection<SourceSpecT>,\n        data?: TopolaData,\n    ): boolean;\n\n    /** Loads data from the data source. */\n    loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n    ['ADOP', 'Adoption'],\n    ['BAPM', 'Baptism'],\n    ['BIRT', 'Birth'],\n    ['BURI', 'Burial'],\n    ['CENS', 'Census'],\n    ['CHR', 'Christening'],\n    ['CREM', 'Cremation'],\n    ['DEAT', 'Death'],\n    ['EDUC', 'Education'],\n    ['EMAIL', 'E-mail'],\n    ['EMIG', 'Emigration'],\n    ['EVEN', 'Event'],\n    ['FACT', 'Fact'],\n    ['IMMI', 'Immigration'],\n    ['MARR', 'Marriage'],\n    ['MARS', 'Marriage settlement'],\n    ['ETHN', 'Ethnic'],\n    ['TRIB', 'Clan'],\n    ['LANG', 'Language'],\n    ['DIV', 'Divorce'],\n    ['MILT', 'Military services'],\n    ['NATU', 'Naturalization'],\n    ['OCCU', 'Occupation'],\n    ['TITL', 'Title'],\n    ['WWW', 'WWW'],\n    ['birth', 'Birth name'],\n    ['married', 'Married name'],\n    ['maiden', 'Maiden name'],\n    ['immigrant', 'Immigrant name'],\n    ['aka', 'Also known as'],\n]);\n\ninterface Props {\n    tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n    const normalizedTag = props.tag.replace(/_/g, '');\n    return (\n        <FormattedMessage\n            id={`gedcom.${normalizedTag}`}\n            defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n        />\n    );\n}\n","import {\n    Container,\n    Icon,\n    Image,\n    Label,\n    Message,\n    Modal,\n    Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n    const [imageOpen, setImageOpen] = useState(false);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageFailed, setImageFailed] = useState(false);\n    const [imageSrc, setImageSrc] = useState('');\n\n    if (imageLoaded && imageSrc !== props.url) {\n        setImageLoaded(false);\n    }\n    return (\n        <>\n            <Image\n                className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n                onClick={() => setImageOpen(true)}\n                onLoad={() => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(false);\n                }}\n                onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(true);\n                    e.currentTarget.alt = '';\n                }}\n                src={props.url}\n                alt={props.title || props.filename}\n                centered={true}\n            />\n            <Placeholder className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}>\n                <Placeholder.Image square/>\n            </Placeholder>\n            {imageFailed && (\n                <Container fluid textAlign=\"center\">\n                    <Message negative compact>\n                        <Message.Header>\n                            <FormattedMessage\n                                id=\"error.failed_to_load_image\"\n                                defaultMessage={'Failed to load image file'}\n                            />\n                        </Message.Header>\n                    </Message>\n                </Container>\n            )}\n            <Modal\n                basic\n                size=\"large\"\n                closeIcon={<Icon name=\"close\" color=\"red\"/>}\n                open={imageOpen}\n                onClose={() => setImageOpen(false)}\n                onOpen={() => setImageOpen(true)}\n                centered={false}\n            >\n                <Modal.Header>{props.title}</Modal.Header>\n                <Modal.Content image>\n                    <Image\n                        className=\"modal-image\"\n                        src={props.url}\n                        alt={props.title || props.filename}\n                        label={<Label attached=\"bottom\" content={props.filename}/>}\n                        wrapped\n                    />\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n    lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n    return (\n        <>\n            {props.lines.map((line, index) => (\n                <div key={index}>\n                    <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n                    <br/>\n                </div>\n            ))}\n        </>\n    );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Icon, Item, List, Menu, MenuItemProps, Popup, Tab,} from 'semantic-ui-react';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from '../lib/topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport interface Source {\n    title?: string;\n    author?: string;\n    page?: string;\n    date?: DateOrRange;\n    publicationInfo?: string;\n}\n\ninterface Props {\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n    return (\n        !!images &&\n        images.map((image, index) => (\n            <List key={index}>\n                <List.Item>\n                    <WrappedImage\n                        url={image.url}\n                        filename={image.filename}\n                        title={image.title}\n                    />\n                </List.Item>\n            </List>\n        ))\n    );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n    return (\n        !!notes?.length &&\n        notes.map((note, index) => (\n            <div key={index}>\n                <MultilineText\n                    lines={note.map((line, index) => (\n                        <i key={index}>{line}</i>\n                    ))}\n                />\n            </div>\n        ))\n    );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n    return (\n        !!sources?.length && (\n            <List>\n                {sources.map((source, index) => (\n                    <List.Item key={index}>\n                        <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\"/>\n                        <List.Content>\n                            <List.Header>\n                                <Linkify properties={{target: '_blank'}}>\n                                    {[source.author, source.title, source.publicationInfo]\n                                        .filter((sourceElement) => sourceElement)\n                                        .join(', ')}\n                                </Linkify>\n                            </List.Header>\n                            <List.Description>\n                                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                                {source.date\n                                    ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                                    : null}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n                ))}\n            </List>\n        )\n    );\n}\n\nexport function EventExtras(props: Props) {\n    const intl = useIntl();\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [indi, setIndi] = useState('');\n\n    if (!indi || indi !== props.indi) {\n        setActiveIndex(-1);\n        setIndi(props.indi);\n    }\n\n    function handleTabOnClick(\n        event: React.MouseEvent<HTMLAnchorElement>,\n        menuItemProps: MenuItemProps,\n    ) {\n        menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n            ? setActiveIndex(menuItemProps.index)\n            : setActiveIndex(-1);\n    }\n\n    const imageTab = props.images?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"camera\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n    };\n\n    const noteTab = props.notes?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"sticky note outline\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n    };\n\n    const sourceTab = props.sources?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"quote right\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n    };\n\n    const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n        tab ? [tab] : [],\n    );\n\n    if (panes.length) {\n        return (\n            <Item.Description>\n                <Tab\n                    className=\"event-extras\"\n                    activeIndex={activeIndex}\n                    renderActiveOnly={true}\n                    menu={{\n                        tabular: true,\n                        attached: true,\n                        compact: true,\n                        borderless: true,\n                    }}\n                    panes={panes}\n                />\n            </Item.Description>\n        );\n    }\n    return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry,\n    getName,\n    pointerToId,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\nimport {DateOrRange, getDate} from '../lib/topola';\n\nfunction PersonLink(props: { person: GedcomEntry }) {\n    const location = useLocation();\n    const name = getName(props.person);\n    const search = queryString.parse(location.search);\n    search['indi'] = pointerToId(props.person.pointer);\n    return (\n        <Item.Meta>\n            <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n                {name ? (name) : (<FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>)}\n            </Link>\n        </Item.Meta>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n    entries: GedcomEntry[];\n}\n\ninterface EventData {\n    type: string;\n    date?: DateOrRange;\n    personLink?: GedcomEntry;\n    place?: string[];\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nconst EVENT_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'FAMS',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'MARS', 'DIV'];\n\nfunction EventHeader(props: { event: EventData }) {\n    const intl = useIntl();\n    return (\n        <div className=\"event-header\">\n            <Header as=\"span\" size=\"small\">\n                <TranslatedTag tag={props.event.type}/>\n            </Header>\n            {props.event.date ? (\n                <Header as=\"span\" textAlign=\"right\" sub>\n                    {formatDateOrRange(props.event.date, intl)}\n                </Header>\n            ) : null}\n        </div>\n    );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n    const spouseReference = familyEntry.tree\n        .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n        .find((familySubEntry) => !familySubEntry.data.includes(indi));\n    if (!spouseReference) {\n        return undefined;\n    }\n    return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n    const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n    return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n    return entry.tree\n        .filter((subEntry) => 'OBJE' === subEntry.tag)\n        .map((objectEntry) =>\n            dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n        )\n        .map((objectEntry) => getImageFileEntry(objectEntry))\n        .flatMap((imageFileEntry) =>\n            imageFileEntry ? [\n                    {\n                        url: imageFileEntry?.data || '',\n                        filename: getFileName(imageFileEntry) || '',\n                    },\n                ] : [],\n        );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n    return entry.tree\n        .filter((subEntry) => 'SOUR' === subEntry.tag)\n        .map((sourceEntryReference) => {\n            const sourceEntry = dereference(sourceEntryReference, gedcom, (gedcom) => gedcom.other);\n            const title = sourceEntry.tree.find((subEntry) => 'TITL' === subEntry.tag);\n            const abbr = sourceEntry.tree.find((subEntry) => 'ABBR' === subEntry.tag);\n            const author = sourceEntry.tree.find((subEntry) => 'AUTH' === subEntry.tag);\n            const publicationInfo = sourceEntry.tree.find((subEntry) => 'PUBL' === subEntry.tag);\n            const page = sourceEntryReference.tree.find((subEntry) => 'PAGE' === subEntry.tag);\n            const sourceData = sourceEntryReference.tree.find((subEntry) => 'DATA' === subEntry.tag);\n            const date = sourceData ? resolveDate(sourceData) : undefined;\n            return {\n                title: title?.data || abbr?.data,\n                author: author?.data,\n                page: page?.data,\n                date: date ? getDate(date.data) : undefined,\n                publicationInfo: publicationInfo?.data,\n            };\n        });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n    return entry.tree\n        .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n        .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n        .map((note) => getData(note));\n}\n\nfunction toEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    return entry.tag === 'FAMS' ? toFamilyEvents(entry, gedcom, indi) : toIndiEvent(entry, gedcom, indi);\n}\n\nfunction toIndiEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const date = resolveDate(entry) || null;\n    return [\n        {\n            date: date ? getDate(date.data) : undefined,\n            type: entry.tag,\n            place: eventPlace(entry),\n            images: eventImages(entry, gedcom),\n            notes: eventNotes(entry, gedcom),\n            sources: eventSources(entry, gedcom),\n            indi: indi,\n        },\n    ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n    return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n    return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n        family.tree.filter((entry) => entry.tag === tag),\n    ).map((familyMarriageEvent) => {\n        const date = resolveDate(familyMarriageEvent) || null;\n        return {\n            date: date ? getDate(date.data) : undefined,\n            type: familyMarriageEvent.tag,\n            personLink: getSpouse(indi, family, gedcom),\n            place: eventPlace(familyMarriageEvent),\n            images: eventImages(familyMarriageEvent, gedcom),\n            notes: eventNotes(familyMarriageEvent, gedcom),\n            sources: eventSources(familyMarriageEvent, gedcom),\n            indi: indi,\n        };\n    });\n}\n\nfunction Event(props: { event: EventData }) {\n    return (\n        <Item>\n            <Item.Content>\n                <EventHeader event={props.event}/>\n                {!!props.event.personLink && (<PersonLink person={props.event.personLink}/>)}\n                {!!props.event.place && (<Item.Description>{props.event.place}</Item.Description>)}\n                <EventExtras\n                    images={props.event.images}\n                    notes={props.event.notes}\n                    sources={props.event.sources}\n                    indi={props.event.indi}\n                />\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport function Events(props: Props) {\n    const events = flatMap(EVENT_TAGS, (tag) =>\n        props.entries\n            .filter((entry) => entry.tag === tag)\n            .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi))\n            .flatMap((events) => events)\n            .sort((event1, event2) => compareDates(event1.date, event2.date)),\n    );\n    if (events.length) {\n        return (\n            <>\n                {events.map((event, index) => (\n                    <Event event={event} key={index}/>\n                ))}\n            </>\n        );\n    }\n    return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n    'NAME',\n    'SEX',\n    'FAMC',\n    'FAMS',\n    'NOTE',\n    'SOUR',\n    'LANG',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n    const lines = [];\n    if (entry.data) {\n        lines.push(...getData(entry));\n    }\n    entry.tree\n        .filter((subentry) => subentry.tag === 'NOTE')\n        .forEach((note) =>\n            getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n        );\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <>\n            <Header sub>\n                <TranslatedTag tag={entry.tag}/>\n            </Header>\n            <span>\n                <MultilineText lines={lines}/>\n            </span>\n        </>\n    );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n    const imageFileEntry = getImageFileEntry(objectEntry);\n    return imageFileEntry ? (\n        <div className=\"person-image\">\n            <WrappedImage\n                url={imageFileEntry.data}\n                filename={getFileName(imageFileEntry) || ''}\n            />\n        </div>\n    ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n    return (\n        <MultilineText\n            lines={getData(entry).map((line, index) => (\n                <i key={index}>{line}</i>\n            ))}\n        />\n    );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n    const fullName = entry.data.replaceAll('/', '');\n    const nameType = entry.tree.find(\n        (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n    )?.data;\n    return (\n        <>\n            <Header as=\"span\" size=\"large\">\n                {fullName ? (\n                    fullName\n                ) : (\n                    <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>\n                )}\n            </Header>\n            {fullName && nameType && (\n                <Item.Meta>\n                    <TranslatedTag tag={nameType}/>\n                </Item.Meta>\n            )}\n        </>\n    );\n}\n\nfunction getDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n    return flatMap(tags, (tag) =>\n        entries\n            .filter((entry) => entry.tag === tag)\n            .map((entry) => detailsFunction(entry)),\n    )\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n    return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n    return entries\n        .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n        .filter(hasData)\n        .map((entry) => dataDetails(entry))\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\nfunction getMultilineDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    title: [string, string],\n) {\n    const lines= entries\n        .filter((entry) => tags.includes(entry.tag))\n        .filter(hasData)\n        .map((element) => element.data)\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <Item key=\"languages\">\n            <Item.Content>\n                <Header as=\"span\">\n                    <FormattedMessage id={title[0]} defaultMessage={title[1]}/>\n                </Header>\n                <span>\n                    <MultilineText lines={lines}/>\n                </span>\n            </Item.Content>\n        </Item>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n}\n\nexport function Details(props: Props) {\n    const entries = props.gedcom.indis[props.indi].tree;\n    const entriesWithData = entries\n        .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n        .filter(hasData);\n\n    return (\n        <div className=\"details\">\n            <Item.Group divided>\n                {getDetails(entries, ['NAME'], nameDetails)}\n                {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n                <Events gedcom={props.gedcom} entries={entries} indi={props.indi}/>\n                {getMultilineDetails(entriesWithData, ['LANG'], ['gedcom.languages', 'Languages'])}\n                {getOtherDetails(entriesWithData)}\n                {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n            </Item.Group>\n        </div>\n    );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\nimport {Language} from \".././model/languages-loader\";\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n    GEDCOM = 'gedcom',\n    READY = 'ready',\n    PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n    message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n    message: EmbeddedMessageType.GEDCOM;\n    gedcom?: string;\n    allLanguages?: Language[]\n}\n\nexport interface EmbeddedSourceSpec {\n    source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<EmbeddedSourceSpec>,\n        oldSource: SourceSelection<EmbeddedSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        // Never reload data.\n        return false;\n    }\n\n    private async onMessage(\n        message: EmbeddedMessage,\n        resolve: (value: TopolaData) => void,\n        reject: (reason: any) => void,\n    ) {\n        if (message.message === EmbeddedMessageType.PARENT_READY) {\n            // Parent didn't receive the first 'ready' message, so we need to send it again.\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n        } else if (message.message === EmbeddedMessageType.GEDCOM) {\n            const gedcom = (message as GedcomMessage).gedcom;\n            const allLanguages = (message as GedcomMessage).allLanguages;\n            if (!gedcom || !allLanguages) {\n                return;\n            }\n            try {\n                const data = await loadGedcom('', gedcom, allLanguages);\n                resolve(data);\n            } catch (error) {\n                reject(error);\n            }\n        }\n    }\n\n    async loadData(source: SourceSelection<EmbeddedSourceSpec>): Promise<TopolaData> {\n        // Notify the parent window that we are ready.\n        return new Promise<TopolaData>((resolve, reject) => {\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n            window.addEventListener('message', (data) =>\n                this.onMessage(data.data, resolve, reject),\n            );\n        });\n    }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n    if (!(error instanceof TopolaError)) {\n        return error.message;\n    }\n    return intl.formatMessage(\n        {\n            id: `error.${error.code}`,\n            defaultMessage: error.message,\n        },\n        error.args,\n    );\n}\n","import {\n    Menu,\n    Dropdown,\n    MenuItemProps,\n    DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n    Menu,\n    Dropdown\n}\n\ninterface Props {\n    menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n    const newProps = {...props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n        <>\n            {props.menuType === MenuType.Menu? (\n                <Menu.Item {...newProps}>{props.children}</Menu.Item>\n            ) : (\n                <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n            )}\n        </>\n    );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n    breakpoints: {\n        small: 320,\n        large: 768,\n    },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import {SemanticCOLORS, Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableRow} from \"semantic-ui-react\";\n\nexport function IndividualsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell>name</TableHeaderCell>\n                    <TableHeaderCell>surname</TableHeaderCell>\n                    <TableHeaderCell>nickname</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>sex *</TableHeaderCell>\n                    <TableHeaderCell >YOB</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>ethnic *</TableHeaderCell>\n                    <TableHeaderCell>clan</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Jane</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>F</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled>Some comments</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled>Johnny</TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled>1983</TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function RelationshipsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell>father_id</TableHeaderCell>\n                    <TableHeaderCell>mother_id</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>I200</TableCell>\n                    <TableCell disabled>I201</TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function FamiliesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>husband_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>wife_id *</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>F200</TableCell>\n                    <TableCell>I200</TableCell>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Common Law settlement</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function IndividualsLanguagesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>language_id *</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>3</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}","const Papa = require(\"papaparse\");\n\nexport const columnsValidation = {\n    \"1_individuals.csv\": [\"id\", \"name\", \"surname\", \"nickname\", \"sex\", \"YOB\", \"ethnic\", \"clan\", \"notes\"],\n    \"2_relationships.csv\": [\"person_id\", \"father_id\", \"mother_id\", \"notes\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport const valuesValidation = {\n    \"1_individuals.csv\": [\"id\", \"sex\"],\n    \"2_relationships.csv\": [\"person_id\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport function validateFilenames(files: File[], validFilenames: string[]): boolean {\n    for (const file of files) {\n        const filename = file.name;\n        if (!validFilenames.includes(filename)) {\n            console.error(`Invalid filename: ${filename}`);\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function validateCSV(filename: string, content: string) {\n    const parsedData = Papa.parse(content, { header: true, skipEmptyLines: true });\n    if (parsedData.errors.length) {\n        console.error(\"CSV loading errors:\", parsedData.errors);\n        return false;\n    }\n    const rows = parsedData.data as Record<string, string>[];\n    return checkColumns(filename, rows, columnsValidation[filename])\n        && checkMissingValues(filename, rows, valuesValidation[filename])\n        && checkIdFormat(filename, rows, valuesValidation[filename]);\n}\n\nexport function checkColumns(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const headers = Object.keys(rows[0]);\n    // Check for missing columns\n    const missingColumns = requiredColumns.filter(col => !headers.includes(col));\n    if (missingColumns.length) {\n        const error = `${filename}: the following required columns are missing: ${missingColumns.join(\", \")}`\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\nexport function checkMissingValues(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const cellErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Checks empty\n            if (!row[column] || row[column].trim() === \"\") {\n                cellErrors.push(`${filename}: row ${index + 1} is missing a value in column: ${column}`);\n            }\n        });\n    });\n    if (cellErrors.length > 0) {\n        console.error(`File ${filename} had ${cellErrors.length} missing values`)\n    }\n    return cellErrors.length <= 0\n}\n\nexport function checkIdFormat(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const indiIdErrors: string[] = [];\n    const famIdErrors: string[] = [];\n    const langIdErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Check id format\n            switch(filename) {\n                case \"1_individuals.csv\":\n                    if (column === \"id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"2_relationships.csv\":\n                    if ([\"person_id\", \"father_id\", \"mother_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"3_families.csv\":\n                    if (column === \"id\" && !row[column].startsWith('F')) {\n                        famIdErrors.push(`${filename}: row ${index + 1} is not a valid family ID`);\n                        console.log(`${filename}: '${column}' must start with 'F'`)\n                    }\n                    if ([\"husband_id\", \"wife_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"4_individuals_languages.csv\":\n                    if (column === \"person_id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    if (column === \"language_id\" && isNaN(Number(row[column]))) {\n                        langIdErrors.push(`${filename}: row ${index + 1} is not a valid language ID`);\n                        console.log(`${filename}: '${column}' must be a number`)\n                    }\n                    break;\n            }\n        });\n    });\n    return indiIdErrors.length <= 0 && famIdErrors.length <= 0 && langIdErrors.length <= 0\n}\n\n","const Graph = require(\"graphology\");\nconst shortestPath = require(\"graphology-shortest-path\");\n\nexport enum Sex {\n    M = \"M\",\n    F = \"F\"\n}\n\nexport class Individual {\n    id: string | null = null;\n    sex: Sex | null = null;\n    givenName?: string;\n    surname?: string;\n    nickname?: string;\n    birthYear?: number;\n    ethnicity?: string;\n    tribe?: string;\n    familySpouses: string[] = [];\n    languages: string[] = [];\n    familyChild?: string;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        sex: Sex;\n        givenName?: string;\n        surname?: string;\n        nickname?: string;\n        birthYear?: number;\n        ethnicity?: string;\n        tribe?: string;\n        familySpouses?: string[];\n        languages?: string[];\n        familyChild?: string;\n        notes?: string;\n    }) {\n        Object.assign(this, params);\n    }\n\n    get name(): string | null {\n        if (this.givenName || this.surname || this.nickname) {\n            let name = \"\";\n            if (this.givenName) name += this.givenName;\n            if (this.nickname) name += ` \"${this.nickname}\"`;\n            if (this.surname) name += ` /${this.surname}/`;\n            return name;\n        }\n        return null;\n    }\n\n    generation(relationships: Record<string, [string | null, string | null]>): string {\n        const g = new Graph({ type: \"directed\" });\n        // Add all nodes\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (!g.hasNode(indID)) {\n                g.addNode(indID);\n            }\n            if (!g.hasNode(fatherId)) {\n                g.addNode(fatherId);\n            }\n            if (!g.hasNode(motherId)) {\n                g.addNode(motherId);\n            }\n        }\n        // Add all edges\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (fatherId) g.addEdge(fatherId, indID);\n            if (motherId) g.addEdge(motherId, indID);\n        }\n        // @ts-ignore\n        const source = g.nodes().reduce((min, current) => {\n            const minValue = parseInt(min.slice(1), 10);\n            const currentValue = parseInt(current.slice(1), 10);\n            return currentValue < minValue ? current : min;\n        });\n        // @ts-ignore\n        return shortestPath.singleSourceLength(g, source)[this.id]  // root MUST have the lowest ID!\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ INDI\\n`;\n\n        if (this.name) gedcom += `1 NAME ${this.name}\\n`;\n        if (this.givenName) gedcom += `2 GIVN ${this.givenName}\\n`;\n        if (this.surname) gedcom += `2 SURN ${this.surname}\\n`;\n        if (this.nickname) gedcom += `2 NICK ${this.nickname}\\n`;\n        gedcom += `1 SEX ${this.sex}\\n`;\n        if (this.birthYear) {\n            gedcom += `1 BIRT\\n`;\n            gedcom += `2 DATE ${this.birthYear}\\n`;\n        }\n        if (this.ethnicity) gedcom += `1 _ETHN ${this.capitalize(this.ethnicity)}\\n`;\n        if (this.tribe) gedcom += `1 _TRIB ${this.capitalize(this.tribe)}\\n`;\n        for (const language of this.languages) {\n            gedcom += `1 LANG ${this.capitalize(language)}\\n`;\n        }\n        for (const famID of this.familySpouses) {\n            gedcom += `1 FAMS @${famID}@\\n`;\n        }\n        if (this.familyChild) gedcom += `1 FAMC @${this.familyChild}@\\n`;\n        if (this.notes) gedcom += `1 NOTE ${this.notes}\\n`;\n\n        return gedcom;\n    }\n\n    private capitalize(str: string): string {\n        return str\n            .toLowerCase()\n            .split(/[-\\s]/)\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join((str.includes('-') ? '-' : ' '));\n    }\n}\n","export class Family {\n    id: string;\n    husband: string;\n    wife: string;\n    marriaged: boolean = false;\n    children: string[] = [];\n    divorced?: boolean = false;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        husband: string;\n        wife: string;\n        marriaged?: boolean;\n        children?: string[];\n        divorced?: boolean;\n        notes?: string;\n    }) {\n        this.id = params.id;\n        this.husband = params.husband;\n        this.wife = params.wife;\n        this.marriaged = params.marriaged ?? false;\n        this.children = params.children ?? [];\n        this.divorced = params.divorced ?? false;\n        this.notes = params.notes;\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ FAM\\n`;\n        gedcom += `1 HUSB @${this.husband}@\\n`;\n        gedcom += `1 WIFE @${this.wife}@\\n`;\n        if (this.marriaged) {\n            gedcom += `1 MARR\\n`;\n        } else {\n            gedcom += `1 MARS\\n`;\n            gedcom += `2 TYPE \"Common Law\"\\n`;\n        }\n        for (const childId of this.children) {\n            gedcom += `1 CHIL @${childId}@\\n`;\n        }\n        if (this.divorced) {\n            gedcom += `1 DIV\\n`;\n        }\n        if (this.notes) {\n            gedcom += `1 NOTE ${this.notes}\\n`;\n        }\n        return gedcom;\n    }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport {Individual, Sex} from \".././model/individual\";\nimport {Language} from \".././model/languages-loader\";\nimport {Family} from \".././model/family\";\n\ntype Relationships = Record<string, [string, string]>;\n\nexport async function csvToGedcom(\n    languagesContents: string,\n    individualsContent: string,\n    relationshipsContent: string,\n    familiesContent: string,\n    individualsLanguagesContent: string | null,\n    egoIndiId: string | null\n) {\n    try {\n        const individuals = parseIndividuals(individualsContent);\n        const relationships = parseRelationships(relationshipsContent);\n        const families = parseFamilies(familiesContent);\n        mapFamiliesChildren(relationships, families, individuals);\n        mapIndividualsSpouses(families, individuals);\n        if (languagesContents && individualsLanguagesContent) {\n            const languages = parseLanguages(languagesContents);\n            const individualsLanguages = parseIndividualsLanguages(individualsLanguagesContent);\n            mapIndividualsLanguages(individuals, individualsLanguages, languages);\n        }\n        return await createGedcomString(individuals, relationships, families, egoIndiId);\n    } catch (e) {\n        throw e;\n    }\n}\n\nfunction parseIndividuals(individualsContent: string): Individual[] {\n    const rows = parseCSV(individualsContent);\n    return rows.map(row => new Individual({\n        id: row[\"id\"],\n        sex: row[\"sex\"] as Sex,\n        givenName: row[\"name\"] || undefined,\n        surname: row[\"surname\"] || undefined,\n        nickname: row[\"nickname\"] || undefined,\n        birthYear: row[\"YOB\"] ? parseInt(row[\"YOB\"], 10) : undefined,\n        ethnicity: row[\"ethnic\"] || undefined,\n        tribe: row[\"clan\"] || undefined,\n        familySpouses: [],\n        languages: [],\n        notes: row[\"notes\"] || undefined\n    }));\n\n}\n\nfunction parseLanguages(languagesContents: string): Language[] {\n    const rows = parseCSV(languagesContents);\n    return rows.map(row => ({\n        id: row[\"id\"],\n        name: row[\"name\"]\n    }));\n}\n\nfunction parseIndividualsLanguages(individualsLanguagesContent: string): Record<string, string[]> {\n    const rows = parseCSV(individualsLanguagesContent);\n    const individualsLanguages: Record<string, string[]> = {};\n    rows.forEach(row => {\n        const personId = row[\"person_id\"];\n        if (!individualsLanguages[personId]) {\n            individualsLanguages[personId] = [];\n        }\n        individualsLanguages[personId].push(row[\"language_id\"]);\n    });\n    return individualsLanguages;\n}\n\nfunction parseRelationships(relationshipsContent: string): Relationships {\n    const rows = parseCSV(relationshipsContent);\n    const relationships: Relationships = {};\n    rows.forEach(row => {\n        if (row[\"father_id\"] && row[\"mother_id\"]) {\n            relationships[row[\"person_id\"]] = [row[\"father_id\"], row[\"mother_id\"]];\n        }\n    });\n    return relationships;\n}\n\nfunction parseFamilies(familiesContent: string): Family[] {\n    const rows = parseCSV(familiesContent);\n    return rows.map(row => new Family({\n        id: row[\"id\"],\n        husband: row[\"husband_id\"],\n        wife: row[\"wife_id\"],\n        children: [],\n        notes: row[\"notes\"] || undefined\n    }));\n}\n\nfunction mapIndividualsLanguages(\n    individuals: Individual[],\n    individualsLanguages: Record<string, string[]>,\n    languages: Language[]\n): void {\n    Object.entries(individualsLanguages).forEach(([personId, langIds]) => {\n        const individual = individuals.find(ind => ind.id === personId);\n        if (!individual)\n            throw new Error(`Individual not found: ${personId}`);\n        langIds.forEach(langId => {\n            const language = languages.find(lang => lang.id === langId);\n            if (!language)\n                throw new Error(`Language not found: ${langId}`);\n            individual.languages.push(language.name);\n        });\n    });\n}\n\nfunction mapFamiliesChildren(\n    relationships: Relationships,\n    families: Family[],\n    individuals: Individual[]\n): void {\n    Object.entries(relationships).forEach(([childId, [fatherId, motherId]]) => {\n        const family = families.find(fam => fam.husband === fatherId && fam.wife === motherId);\n        if (!family)\n            throw new Error(`Family not found: ${childId} (${fatherId}, ${motherId})`);\n        family.children.push(childId);\n        const individual = individuals.find(ind => ind.id === childId);\n        if (!individual)\n            throw new Error(`Individual not found: ${childId}`);\n        individual.familyChild = family.id;\n    });\n}\n\nfunction mapIndividualsSpouses(families: Family[], individuals: Individual[]): void {\n    families.forEach(family => {\n        const husband = individuals.find(ind => ind.id === family.husband);\n        if (!husband)\n            throw new Error(`Husband not found: ${family.husband}`);\n        husband.familySpouses.push(family.id);\n        const wife = individuals.find(ind => ind.id === family.wife);\n        if (!wife)\n            throw new Error(`Wife not found: ${family.wife}`);\n        wife.familySpouses.push(family.id);\n    });\n}\n\nasync function createGedcomString(\n    individuals: Individual[],\n    relationships: Relationships,\n    families: Family[],\n    egoIndiId: string | null\n) {\n    let egoIndi = null\n    let lowestEgoIndi = null\n    let egoGeneration = null\n    let filename = null\n\n    if (egoIndiId) {\n        try {\n            egoIndi = individuals.filter(_i => _i.id === egoIndiId);\n            // @ts-ignore\n            lowestEgoIndi = egoIndi.reduce((prev, current) => (prev.id < current.id ? prev : current));\n            egoGeneration = lowestEgoIndi.generation(relationships)\n            filename = `${lowestEgoIndi.givenName?.toLowerCase()}_${lowestEgoIndi.surname?.toLowerCase()}`\n            if (!lowestEgoIndi || !egoGeneration)\n                throw new Error()\n        } catch(e) {\n            throw new Error(`Ego individual not found: ${egoIndiId}`);\n        }\n    }\n    const header = await createHeader(\n        filename,\n        lowestEgoIndi ? lowestEgoIndi.id : null,\n        egoGeneration ? egoGeneration : null\n    );\n    const indiRecords = individuals.map(indi => indi.asGedcom()).join(\"\\n\");\n    const famRecords = families.map(fam => fam.asGedcom()).join(\"\\n\");\n    const tail = await createTail(filename);\n\n    return [header, indiRecords, famRecords, tail].join(\"\\n\")\n}\n\nasync function createHeader(filename: string | null, egoId: string | null, egoGen: string | null) {\n    const headerFile = await fetch(\"data/header.ged\");\n    const headerTemplate = await headerFile.text();\n    const date = new Date().toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n    let replaced = headerTemplate\n        .replace(/{file}/g, filename ? filename: \"genealogy.ged\")\n        .replace(/{date}/g, date)\n        .replace(/{subm}/g, 'drexa1@hotmail.com')\n    if (egoId && egoGen) {\n        const egoSection = `\\n0 @${egoId}@ EGO\\n1 GEN ${egoGen}\\n`;\n        replaced += egoSection;\n    }\n    return replaced\n}\n\nasync function createTail(filename: string | null) {\n    let repoSection = \"\"\n    const uid = uuidv4().toUpperCase();\n    if (filename) {\n        const repo = `The ${filename\n            .replace(/_/g, ' ')\n            .toLowerCase()\n            .replace(/\\b\\w/g, (char) => char.toUpperCase())} family`;\n        repoSection += `0 @R0@ REPO\\n1 _UID ${uid}\\n1 NAME ${repo}\\n`\n    }\n    const tailFile = await fetch(\"data/tail.ged\");\n    const tailTemplate = await tailFile.text();\n    return repoSection + tailTemplate\n}\n\n// CSV parser utility\nfunction parseCSV(data: string): Record<string, string>[] {\n    const [header, ...rows] = data.split(\"\\n\").filter(line => line.trim() !== \"\");\n    const keys = header.split(\",\");\n    return rows.map(row => {\n        const values = row.split(\",\");\n        return keys.reduce((acc, key, index) => {\n            acc[key.trim()] = values[index].trim();\n            return acc;\n        }, {} as Record<string, string>);\n    });\n}\n","import {MenuItem, MenuType} from \"./menu_item\";\nimport {Button, Icon, SemanticCOLORS, Input, Form, Header, Label, Modal, Message} from \"semantic-ui-react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {SyntheticEvent, useEffect, useState} from \"react\";\nimport * as queryString from \"query-string\";\nimport {useHistory} from \"react-router\";\nimport {loadFile} from \"../datasource/load_data\";\nimport md5 from \"md5\";\nimport {\n    FamiliesTableExample,\n    IndividualsLanguagesTableExample,\n    IndividualsTableExample,\n    RelationshipsTableExample\n} from \"./convert_tables\";\nimport {\n    columnsValidation,\n    validateCSV,\n    validateFilenames\n} from \".././model/validate_csv\";\nimport {csvToGedcom} from \"../util/convert_csv\";\nimport {analyticsEvent} from \"../util/analytics\";\n\ninterface Props {\n    menuType: MenuType\n}\n\nexport const initialHeaderColors: Record<string, SemanticCOLORS> = {\n    \"1_individuals.csv\": \"yellow\",\n    \"2_relationships.csv\": \"yellow\",\n    \"3_families.csv\": \"yellow\",\n    \"4_individuals_languages.csv\": \"blue\"\n}\n\n/** Displays and handles the \"Convert CSV's\" menu. */\nexport function ConvertCSVMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const[inputFiles, setInputFiles] = useState<File[]>([])\n    const[headerColors, setHeaderColors] = useState<Record<string, SemanticCOLORS>>(initialHeaderColors)\n    const [egoIndiId, setEgoIndiId] = useState<string | null>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const history = useHistory()\n\n    function closeDialog() {\n        setInputFiles([])\n        setErrors([])\n        setHeaderColors(initialHeaderColors)\n        setDialogOpen(false)\n    }\n\n    function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        setErrors([])\n        const files = (event.target as HTMLInputElement).files;\n        // Validate number of files\n        if (!files) {\n            return\n        }\n        // Validate file names\n        if (!validateFilenames(Array.from(files), Object.keys(columnsValidation))) {\n            return\n        }\n        // Validate schemas\n        const fileReadPromises = Array.from(files).map(file => {\n            return new Promise<File | null>((resolve) => {\n                const reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n                reader.onload = () => {\n                    const fileContent = reader.result as string;\n                    const validFile = validateCSV(file.name, fileContent);\n                    if (validFile) {\n                        resolve(file);\n                    } else {\n                        resolve(null);\n                    }\n                };\n                reader.onerror = () => {\n                    console.error(\"Error reading file:\", file.name);\n                    setErrors([\"Error reading file:\" + file.name])\n                    resolve(null); // Resolve as null to exclude invalid files\n                };\n            });\n        });\n        // Wait for all file validations to complete\n        Promise.all(fileReadPromises).then(results => {\n            const validFiles = results.filter((file): file is File => file !== null);\n            const invalidFiles = Array.from(files)\n                .filter((file: File) => !validFiles.some(validFile => validFile.name === file.name))\n                .map(file => `'${file.name}'`)\n                .join(\", \");\n            if (invalidFiles) {\n                setErrors([\"Files had errors. You can check them in the browser console\"])\n            }\n            setHeaderColors(changeHeaderColors(files, validFiles));\n            setInputFiles(validFiles)\n            // Validate number of files\n            if (!validFiles || validFiles.length < 3 || validFiles.length > 4) {\n                console.error(\"Required files missing...\")\n                return\n            }\n            // All validations passed, highlight Ego input\n            const egoInput = document.querySelector(\"#egoIndi\") as HTMLDivElement;\n            // @ts-ignore\n            const egoTag = egoInput.parentElement.querySelector(\".ui.label.label\") as HTMLDivElement;\n            if (egoTag) {\n                egoTag.style.setProperty(\"background-color\", \"orange\");\n                egoTag.style.setProperty(\"color\", \"white\");\n            }\n            // (event.target as HTMLInputElement).value = ''; // Reset the file input\n        });\n    }\n\n    function changeHeaderColors(files: FileList, validFiles: File[]) {\n        const newHeaderColors = { ...initialHeaderColors };\n        Array.from(files).forEach(file => {\n            if (newHeaderColors.hasOwnProperty(file.name)) {\n                newHeaderColors[file.name] = validFiles.includes(file) ? \"green\" : \"red\";\n            }\n        });\n        return newHeaderColors;\n    }\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    async function convert2gedcom() {\n        try {\n            const individualsFile = inputFiles.find(file => file.name === \"1_individuals.csv\");\n            const relationshipsFile = inputFiles.find(file => file.name === \"2_relationships.csv\");\n            const familiesFile = inputFiles.find(file => file.name === \"3_families.csv\");\n            const individualsLanguagesFile = inputFiles.find(file => file.name === \"4_individuals_languages.csv\");\n\n            const [individualsContent, relationshipsContent, familiesContent] = await Promise.all([\n                readFileContents(individualsFile!),\n                readFileContents(relationshipsFile!),\n                readFileContents(familiesFile!),\n            ])\n            const individualsLanguagesContent = individualsLanguagesFile ? await readFileContents(individualsLanguagesFile) : null;\n\n            const languagesFile = await fetch(\"data/languages.csv\");\n            const languagesContents = await languagesFile.text();\n\n            const gedcomString = await csvToGedcom(\n                languagesContents,\n                individualsContent,\n                relationshipsContent,\n                familiesContent,\n                individualsLanguagesContent,\n                egoIndiId\n            )\n            const gedcomFile = new Blob([gedcomString])\n            const {gedcom, images} = await loadFile(gedcomFile);\n\n            // Hash GEDCOM contents with uploaded image file names.\n            const imageFileNames = Array.from(images.keys()).sort().join('|');\n            const hash = md5(md5(gedcom) + imageFileNames);\n\n            const search = queryString.parse(window.location.search);\n            const historyPush = search.file === hash ? history.replace : history.push;\n\n            historyPush({\n                pathname: '/view',\n                search: queryString.stringify({file: hash}),\n                state: {data: gedcom, images}\n            });\n            // Finally\n            analyticsEvent('topola_convert_csv');\n            closeDialog()\n        } catch (e) {\n            console.error(e);\n            setErrors([e.message])\n        }\n    }\n\n    const readFileContents = (file: File): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                resolve(reader.result as string);\n            }\n            reader.onerror = (error) => reject(error);\n            reader.readAsText(file, \"UTF-8\");\n        });\n    };\n\n    function convertCSVModal() {\n        return (\n            <Modal open={dialogOpen} onClose={closeDialog} centered={true}>\n                <Header>\n                    <Icon name=\"sitemap\"/>\n                    <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV files to GEDCOM\"/>\n                </Header>\n                <Modal.Content>\n                    <Message negative className={errors.length === 0 ? \"hidden\" : undefined}>\n                        <p>{errors}</p>\n                    </Message>\n                    <Form onSubmit={() => convert2gedcom()}>\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"1_individuals.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>1_individuals.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"2_relationships.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>2_relationships.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"3_families.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>3_families.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"4_individuals_languages.csv\") ? \"green\" : undefined}\n                            style={{float: \"right\"}}>\n                            <Icon name=\"file text\"/>4_individuals_languages.csv\n                        </Label>}\n\n                        <IndividualsTableExample headerColor={headerColors[\"1_individuals.csv\"]}/>\n                        <RelationshipsTableExample headerColor={headerColors[\"2_relationships.csv\"]}/>\n                        <FamiliesTableExample headerColor={headerColors[\"3_families.csv\"]}/>\n                        <IndividualsLanguagesTableExample headerColor={headerColors[\"4_individuals_languages.csv\"]}/>\n\n                        <div style={{textAlign: \"center\", marginBottom: 10}}>\n                            <Input id=\"egoIndi\"\n                                   disabled={\n                                       ![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                                           inputFiles.some((file: File) => file.name === fileName)\n                                       )\n                                    }\n                                   fluid\n                                   size=\"small\"\n                                   label=\"Ego ID\"\n                                   labelPosition=\"left\"\n                                   icon=\"user\"\n                                   placeholder=\"I000\"\n                                   onChange={(_e, { value }) => setEgoIndiId(value)}\n                            />\n                        </div>\n\n                        <input type=\"file\"\n                               accept=\".csv\"\n                               id=\"fileInput\"\n                               multiple\n                               onChange={(e) => handleUpload(e)}\n                        />\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => {\n                        closeDialog()\n                    }}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary\n                        disabled={![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                            inputFiles.some((file: File) => file.name === fileName)\n                        )}\n                        onClick={() => convert2gedcom()}>\n                            <FormattedMessage id=\"load_from_gedcom.generate\" defaultMessage=\"Generate\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"file excel\"/>\n                <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV's\"/>\n            </MenuItem>\n            {convertCSVModal()}\n        </>\n    );\n}","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from '../lib/topola';\n\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n    id: string;\n    indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n    search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n    return input\n        .toLocaleLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n    if (a.score !== b.score) {\n        return b.score - a.score;\n    }\n    return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n    indi: JsonIndi,\n    indiMap: Map<String, JsonIndi>,\n    famMap: Map<string, JsonFam>,\n): string {\n    return (indi.fams || [])\n        .map((famId) => famMap.get(famId))\n        .map((fam) => fam && fam.husb)\n        .map((husbId) => husbId && indiMap.get(husbId))\n        .map((husband) => husband && husband.lastName)\n        .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n    private index: lunr.Index | undefined;\n    private indiMap: Map<string, JsonIndi>;\n    private famMap: Map<string, JsonFam>;\n\n    constructor(data: JsonGedcomData) {\n        this.indiMap = idToIndiMap(data);\n        this.famMap = idToFamMap(data);\n    }\n\n    initialize() {\n        const self = this;\n        this.index = lunr(function () {\n            //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n            self.initMultiLingualLunrWithoutTrimmer(this, [\n                'de',\n                'en',\n                'fr',\n                'it',\n                'ru',\n            ]);\n            this.ref('id');\n            this.field('id');\n            this.field('name', {boost: 10});\n            this.field('normalizedName', {boost: 8});\n            this.field('spouseLastName', {boost: 2});\n            this.field('normalizedSpouseLastName', {boost: 2});\n\n            self.indiMap.forEach((indi) => {\n                const name = [indi.firstName, indi.lastName].join(' ');\n                const spouseLastName = getHusbandLastName(\n                    indi,\n                    self.indiMap,\n                    self.famMap,\n                );\n                this.add({\n                    id: indi.id,\n                    name,\n                    normalizedName: normalize(name),\n                    spouseLastName,\n                    normalizedSpouseLastName: normalize(spouseLastName),\n                });\n            });\n        });\n    }\n\n    private initMultiLingualLunrWithoutTrimmer(\n        lunrInstance: any,\n        languages: string[],\n    ): void {\n        let wordCharacters = '';\n        const pipelineFunctions: PipelineFunction[] = [];\n        const searchPipelineFunctions: PipelineFunction[] = [];\n        languages.forEach((language) => {\n            if (language === 'en') {\n                wordCharacters += '\\\\w';\n                pipelineFunctions.unshift(lunr.stopWordFilter);\n                pipelineFunctions.push(lunr.stemmer);\n                searchPipelineFunctions.push(lunr.stemmer);\n            } else {\n                wordCharacters += lunr[language].wordCharacters;\n                if (lunr[language].stopWordFilter) {\n                    pipelineFunctions.unshift(lunr[language].stopWordFilter);\n                }\n                if (lunr[language].stemmer) {\n                    pipelineFunctions.push(lunr[language].stemmer);\n                    searchPipelineFunctions.push(lunr[language].stemmer);\n                }\n            }\n        });\n        lunrInstance.pipeline.reset();\n        lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n        if (lunrInstance.searchPipeline) {\n            lunrInstance.searchPipeline.reset();\n            lunrInstance.searchPipeline.add.apply(\n                lunrInstance.searchPipeline,\n                searchPipelineFunctions,\n            );\n        }\n    }\n\n    public search(input: string): SearchResult[] {\n        const query = input\n            .split(' ')\n            .filter((s) => !!s)\n            .map((s) => `${s} ${s}*`)\n            .join(' ');\n        const results = this.index!.search(query);\n        return results\n            .sort(compare)\n            .slice(0, MAX_RESULTS)\n            .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n    }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n    const index = new LunrSearchIndex(data);\n    index.initialize();\n    return index;\n}\n","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {useRef, useState} from \"react\";\nimport {ConvertCSVMenu} from \"./convert_menu\";\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n    onDownloadGedcom: () => void;\n    onResetView: () => void;\n}\n\ninterface Props {\n    showingChart: boolean;\n    data?: JsonGedcomData;\n    standalone: boolean;\n    eventHandlers: EventHandlers;\n}\n\nexport function TopBar(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    function FileMenus(screenSize: ScreenSize) {\n        const [menuOpen, setMenuOpen] = useState(false);\n        const cooldown = useRef(false);\n\n        // Debug handler\n        const toggleMenu = (state: boolean) => {\n            if (!state) {\n                cooldown.current = true;\n                setMenuOpen(false);\n                setTimeout(() => {\n                    cooldown.current = false;\n                }, 150);\n            } else if (!cooldown.current) {\n                setMenuOpen(true);\n            }\n        };\n\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <Dropdown\n                        onOpen={() => toggleMenu(true)}\n                        onClose={() => toggleMenu(false)}\n                        open={menuOpen}\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\">\n                        <Dropdown.Menu onClick={() => toggleMenu(false)}>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                            <ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        {/*<ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />*/}\n                    </>\n                );\n        }\n    }\n\n    interface ViewMenusProps {\n        currentView: string;\n        changeView: (view: string) => void;\n    }\n    function ViewMenus({ currentView, changeView }: ViewMenusProps) {\n        return (\n            <>\n                {currentView !== \"hourglass\" && (\n                    <Dropdown.Item onClick={() => changeView(\"hourglass\")}>\n                        <Icon name=\"hourglass\" />\n                        <FormattedMessage id=\"menu.hourglass\" defaultMessage=\"Hourglass\"/>\n                    </Dropdown.Item>\n                )}\n                {currentView !== \"relatives\" && (\n                    <Dropdown.Item onClick={() => changeView(\"relatives\")}>\n                        <Icon name=\"users\" />\n                        <FormattedMessage id=\"menu.relatives\" defaultMessage=\"All relatives\"/>\n                    </Dropdown.Item>\n                )}\n            </>\n        );\n    }\n\n    function ChartMenus(screenSize: ScreenSize) {\n        const [currentView, setCurrentView] = useState(\"hourglass\");\n        const changeView = (view: string) => {\n            setCurrentView(view);\n            const search = queryString.parse(location.search);\n            if (search.view !== view) {\n                search.view = view;\n                location.search = queryString.stringify(search);\n                history.push(location);\n            }\n        };\n\n        if (!props.showingChart) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\"/>\n                                </div>\n                            }\n                            className=\"item\">\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Divider/>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                    <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    {currentView === \"hourglass\" ? (\n                                        <>\n                                            <Icon name=\"hourglass\"/>\n                                            <FormattedMessage id=\"menu.hourglass\" defaultMessage=\"Hourglass\"/>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <Icon name=\"users\"/>\n                                            <FormattedMessage id=\"menu.relatives\" defaultMessage=\"All relatives\"/>\n                                        </>\n                                    )}\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>\n                                <ViewMenus currentView={currentView} changeView={changeView} />\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Menu.Item onClick={props.eventHandlers.onResetView}>\n                            <Icon name=\"target\" />\n                            <FormattedMessage id=\"menu.view.reset\" defaultMessage=\"Reset view\" />\n                        </Menu.Item>\n\n                        <Menu.Menu position=\"right\">\n                            <SearchBar\n                                data={props.data!}\n                                onSelection={props.eventHandlers.onSelection}\n                                {...props}\n                            />\n                        </Menu.Menu>\n                    </>\n                );\n            case ScreenSize.SMALL:\n                if (!props.showingChart) {\n                    return (\n                        <>\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </>\n                    );\n                } else {\n                    return (\n                        <>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Menu.Item onClick={props.eventHandlers.onResetView}>\n                                <Icon name=\"eye\" />\n                                <FormattedMessage id=\"menu.view.reset\" defaultMessage=\"Reset view\" />\n                            </Menu.Item>\n                        </>\n                    );\n                }\n        }\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {FileMenus(ScreenSize.LARGE)}\n                {ChartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {FileMenus(ScreenSize.SMALL)}\n                        {ChartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu as={Media} greaterThanOrEqual=\"large\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {desktopMenus()}\n            </Menu>\n            <Menu as={Media} at=\"small\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData, JsonIndi} from '../lib/topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n    const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n    if (result.id.length > 8) {\n        return name;\n    }\n    return (\n        <>\n            {name} <i>({result.id})</i>\n        </>\n    );\n}\n\ninterface Props {\n    /** Data used for the search index. */\n    data: JsonGedcomData;\n    onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n    const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n    const [searchString, setSearchString] = useState('');\n    const searchIndex = useRef<SearchIndex>();\n    const intl = useIntl();\n\n    function getDescriptionLine(indi: JsonIndi) {\n        const birthDate = formatDateOrRange(indi.birth, intl);\n        const deathDate = formatDateOrRange(indi.death, intl);\n        if (!deathDate) {\n            return birthDate;\n        }\n        return `${birthDate} – ${deathDate}`;\n    }\n\n    /** Produces an object that is displayed in the Semantic UI Search results. */\n    function displaySearchResult(result: SearchResult): SearchResultProps {\n        return {\n            id: result.id,\n            key: result.id,\n            title: getNameLine(result),\n            description: getDescriptionLine(result.indi),\n        } as SearchResultProps;\n    }\n\n    /** On search input change. */\n    function handleSearch(input: string | undefined) {\n        if (!input) {\n            return;\n        }\n        const results = searchIndex\n            .current!.search(input)\n            .map((result) => displaySearchResult(result));\n        setSearchResults(results);\n    }\n\n    const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n    /** On search result selected. */\n    function handleResultSelect(id: string) {\n        props.onSelection({id, generation: 0});\n        setSearchString('');\n    }\n\n    /** On search string changed. */\n    function onChange(value: string) {\n        debouncedHandleSearch.current(value);\n        setSearchString(value);\n    }\n\n    // Initialize the search index.\n    useEffect(() => {\n        searchIndex.current = buildSearchIndex(props.data);\n    }, [props.data]);\n\n    return (\n        <Search\n            onSearchChange={(_, data) => onChange(data.value!)}\n            onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n            results={searchResults}\n            noResultsMessage={intl.formatMessage({\n                id: 'menu.search.no_results',\n                defaultMessage: 'No results found',\n            })}\n            placeholder={intl.formatMessage({\n                id: 'menu.search.placeholder',\n                defaultMessage: 'Search for people',\n            })}\n            selectFirstResult={true}\n            value={searchString}\n            id=\"search\"\n        />\n    );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n    const lower = fileName.toLowerCase();\n    return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        const filesArray = Array.from(files);\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n        const gedcomFile =\n            filesArray.length === 1\n                ? filesArray[0]\n                : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n                filesArray[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Convert uploaded images to object URLs.\n        filesArray\n            .filter((file) => file.name !== gedcomFile.name && isImageFileName(file.name))\n            .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images}\n        });\n    }\n\n    const content = (\n        <>\n            <Icon name=\"folder open\"/>\n            <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\"/>\n        </>\n    );\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <label htmlFor=\"fileInput\">\n                    <Menu.Item as=\"a\">{content}</Menu.Item>\n                </label>\n            ) : (\n                <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                    {content}\n                </Dropdown.Item>\n            )}\n            <input className=\"hidden\"\n                type=\"file\"\n                accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n                id=\"fileInput\"\n                multiple\n                onChange={handleUpload}\n            />\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [url, setUrl] = useState('');\n    const inputRef = useRef<Input>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (dialogOpen) {\n            setUrl('');\n            inputRef.current!.focus();\n        }\n    }, [dialogOpen]);\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    function handleLoad() {\n        setDialogOpen(false);\n        if (url) {\n            history.push({\n                pathname: '/view',\n                search: queryString.stringify({url})\n            });\n        }\n    }\n\n    function loadFromUrlModal() {\n        return (\n            <Modal open={dialogOpen} onClose={() => setDialogOpen(false)} centered={false}>\n                <Header>\n                    <Icon name=\"cloud download\"/>\n                    <FormattedMessage id=\"load_from_url.title\" defaultMessage=\"Load from URL\"/>\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={handleLoad}>\n                        <Input\n                            placeholder=\"https://\"\n                            fluid\n                            value={url}\n                            onChange={(_, data) => setUrl(data.value)}\n                            ref={inputRef}\n                        />\n                        <p>\n                            <FormattedMessage\n                                id=\"load_from_url.comment\"\n                                defaultMessage={\n                                    'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                                }\n                                values={{\n                                    link: (\n                                        <a href=\"https://corsproxy.io/\">corsproxy.io</a>\n                                    ),\n                                }}\n                            />\n                        </p>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary onClick={handleLoad}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"cloud download\"/>\n                <FormattedMessage id=\"menu.load_from_url\" defaultMessage=\"Load from URL\"/>\n            </MenuItem>\n            {loadFromUrlModal()}\n        </>\n    );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\nimport {Language} from \"./model/languages-loader\";\nimport {useState} from \"react\";\n\nexport enum ChartColors {\n    NO_COLOR,\n    COLOR_BY_SEX,\n    COLOR_BY_GENERATION,\n    COLOR_BY_ETHNICITY,\n    COLOR_BY_NR_LANGUAGES = 4,\n    COLOR_BY_LANGUAGE = 5,\n}\n\nexport enum LanguagesArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum EthnicityArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum IdsArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum SexArg {\n    HIDE,\n    SHOW,\n}\n\nexport interface Config {\n    color: ChartColors;\n    languages: LanguagesArg;\n    ethnicity: EthnicityArg;\n    id: IdsArg;\n    sex: SexArg;\n    renderLanguagesOption: boolean\n    renderEthnicityOption: boolean\n    languageOptions: Language[],\n    selectedLanguage: string | null\n}\n\nexport const DEFAULT_CONFIG: Config = {\n    color: ChartColors.COLOR_BY_GENERATION,\n    languages: LanguagesArg.HIDE,\n    ethnicity: EthnicityArg.HIDE,\n    id: IdsArg.SHOW,\n    sex: SexArg.SHOW,\n    renderLanguagesOption: false,\n    renderEthnicityOption: false,\n    languageOptions: [],\n    selectedLanguage: null,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n    ['n', ChartColors.NO_COLOR],\n    ['g', ChartColors.COLOR_BY_GENERATION],\n    ['s', ChartColors.COLOR_BY_SEX],\n    ['e', ChartColors.COLOR_BY_ETHNICITY],\n    ['nl', ChartColors.COLOR_BY_NR_LANGUAGES],\n    ['l', ChartColors.COLOR_BY_LANGUAGE],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst LANGUAGES_ARG = new Map<string, LanguagesArg>([\n    ['h', LanguagesArg.HIDE],\n    ['s', LanguagesArg.SHOW],\n]);\nconst LANGUAGES_ARG_INVERSE = new Map<LanguagesArg, string>();\nLANGUAGES_ARG.forEach((v, k) => LANGUAGES_ARG_INVERSE.set(v, k));\n\nconst ETHNICITY_ARG = new Map<string, EthnicityArg>([\n    ['h', EthnicityArg.HIDE],\n    ['s', EthnicityArg.SHOW],\n]);\nconst ETHNICITY_ARG_INVERSE = new Map<EthnicityArg, string>();\nETHNICITY_ARG.forEach((v, k) => ETHNICITY_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, IdsArg>([\n    ['h', IdsArg.HIDE],\n    ['s', IdsArg.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<IdsArg, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, SexArg>([\n    ['h', SexArg.HIDE],\n    ['s', SexArg.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<SexArg, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n    const getParam = (name: string) => {\n        return typeof args[name] === 'string' || typeof args[name] === 'number' ? args[name] : undefined;\n    };\n    return {\n        color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n        languages: LANGUAGES_ARG.get(getParam('l') ?? '') ?? DEFAULT_CONFIG.languages,\n        selectedLanguage: getParam('n') ?? DEFAULT_CONFIG.selectedLanguage,\n        ethnicity: ETHNICITY_ARG.get(getParam('e') ?? '') ?? DEFAULT_CONFIG.ethnicity,\n        id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n        sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n        renderEthnicityOption: DEFAULT_CONFIG.renderEthnicityOption,\n        renderLanguagesOption: DEFAULT_CONFIG.renderLanguagesOption,\n        languageOptions: DEFAULT_CONFIG.languageOptions\n    };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n    return {\n        c: COLOR_ARG_INVERSE.get(config.color),\n        l: LANGUAGES_ARG_INVERSE.get(config.languages),\n        e: ETHNICITY_ARG_INVERSE.get(config.ethnicity),\n        i: ID_ARG_INVERSE.get(config.id),\n        s: SEX_ARG_INVERSE.get(config.sex),\n        n: config.selectedLanguage\n    };\n}\n\nexport function ConfigPanel(props: {config: Config; onChange: (config: Config) => void}) {\n    const [languagesEnabled, setLanguagesEnabled] = useState(props.config.languages === LanguagesArg.SHOW);\n    const [ethnicityEnabled, setEthnicityEnabled] = useState(props.config.ethnicity === EthnicityArg.SHOW);\n    const [idsEnabled, setIdsEnabled] = useState(props.config.id === IdsArg.SHOW);\n    const [sexEnabled, setSexEnabled] = useState(props.config.sex === SexArg.SHOW);\n\n    const toggleLanguages = (newState: LanguagesArg) => {\n        setLanguagesEnabled(!languagesEnabled);\n        props.onChange({...props.config, languages: newState});\n    };\n    const toggleEthnicity = (newState: EthnicityArg) => {\n        setEthnicityEnabled(!ethnicityEnabled);\n        props.onChange({...props.config, ethnicity: newState});\n    };\n    const toggleIds = (newState: IdsArg) => {\n        setIdsEnabled(!idsEnabled);\n        props.onChange({...props.config, id: newState});\n    };\n    const toggleSex = (newState: SexArg) => {\n        setSexEnabled(!sexEnabled);\n        props.onChange({...props.config, sex: newState});\n    };\n\n    const languageOptions = [];\n    for (let i = 0; i < props.config.languageOptions.length; i++) {\n        const language = props.config.languageOptions[i];\n        languageOptions.push(\n            <Form.Field key={i} className={!props.config.renderLanguagesOption ? 'hidden' : 'no-margin suboption'}>\n                <Checkbox\n                    radio\n                    label={language.name + \" (\" + language.abbreviation + \")\"}\n                    name=\"checkboxRadioGroup\"\n                    value={i}\n                    checked={props.config.selectedLanguage === language.id}\n                    onClick={\n                        () => {\n                            props.onChange({\n                                ...props.config,\n                                selectedLanguage: language.id,\n                                color: ChartColors.COLOR_BY_LANGUAGE,\n                                languages: LanguagesArg.SHOW,\n                            });\n                            setLanguagesEnabled(true);\n                        }\n                    }\n                />\n            </Form.Field>\n        );\n    }\n    return (\n        <Form className=\"details no-border-bottom\">\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Header sub style={{ \"margin-bottom\": \"14px\" }}>\n                            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\"/>\n                        </Header>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"none\"\n                                checked={props.config.color === ChartColors.NO_COLOR}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.NO_COLOR,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"generation\"\n                                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_GENERATION,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by gender\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"gender\"\n                                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_SEX,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_ETHNICITY\" defaultMessage=\"by ethnicity\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"ethnicity\"\n                                checked={props.config.color === ChartColors.COLOR_BY_ETHNICITY}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_ETHNICITY,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.SHOW,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(true);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_LANGUAGES\" defaultMessage=\"by no. languages\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"languages\"\n                                checked={props.config.color === ChartColors.COLOR_BY_NR_LANGUAGES}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_NR_LANGUAGES,\n                                            languages: LanguagesArg.SHOW,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(true);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        {languageOptions}\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"languages\"\n                                  checked={languagesEnabled}\n                                  onClick={() => toggleLanguages(languagesEnabled ? LanguagesArg.HIDE : LanguagesArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {languagesEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.languages\" defaultMessage=\"languages\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ethnicity\"\n                                  checked={ethnicityEnabled}\n                                  onClick={() => toggleEthnicity(ethnicityEnabled ? EthnicityArg.HIDE : EthnicityArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {ethnicityEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ethnicity\" defaultMessage=\"ethnicity\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ids\"\n                                  checked={idsEnabled}\n                                  onClick={() => toggleIds(idsEnabled ? IdsArg.HIDE : IdsArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {idsEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"sex\"\n                                  checked={sexEnabled}\n                                  onClick={() => toggleSex(sexEnabled ? SexArg.HIDE : SexArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {sexEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.sex\" defaultMessage=\"sex\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n            <div style={{textAlign: \"center\"}}>\n                <Form.Button primary onClick={\n                    () => {\n                        props.onChange(DEFAULT_CONFIG);\n                        setEthnicityEnabled(false);\n                        setLanguagesEnabled(false);\n                        setIdsEnabled(true);\n                        setSexEnabled(true);\n                    }\n                }>\n                    <FormattedMessage id=\"config.reset\" defaultMessage=\"Reset\"/>\n                </Form.Button>\n            </div>\n        </Form>\n\n);\n}\n","import {ChartColors, LanguagesArg, EthnicityArg, IdsArg, SexArg} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {D3ZoomEvent, zoom, ZoomBehavior, ZoomedElementBaseType, zoomTransform,} from 'd3-zoom';\nimport {\n    ChartColors as TopolaChartColors,\n    ChartHandle,\n    createChart,\n    DetailedRenderer,\n    HourglassChart,\n    RelativesChart,\n    IndiInfo,\n    JsonGedcomData,\n} from './lib/topola';\nimport {GedcomData} from \"./util/gedcom_util\";\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n * @param event\n */\nfunction zoomed(\n    size: [number, number],\n    event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = event.transform.k;\n    const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    select(\"#chartSvg\")\n        .attr(\"width\", size[0] * scale)\n        .attr(\"height\", size[1] * scale)\n        .attr(\"transform\", `translate(${offsetX}, ${offsetY})`);\n    select(\"#chart\").attr(\"transform\", `scale(${scale})`);\n    parent.scrollLeft = -event.transform.x;\n    parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const x = parent.scrollLeft + parent.clientWidth / 2;\n    const y = parent.scrollTop + parent.clientHeight / 2;\n    const scale = zoomTransform(parent).k;\n    select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise<string>((resolve) => {\n        reader.onload = (e) => resolve((e.target as FileReader).result as string);\n    });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n    const href = image.href.baseVal;\n    if (!href) {\n        return;\n    }\n    try {\n        const response = await fetch(href);\n        const blob = await response.blob();\n        image.href.baseVal = await loadAsDataUrl(blob);\n    } catch (e) {\n        console.warn(\"Failed to load image:\", e);\n    }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n    const images = Array.from(svg.getElementsByTagName('image'));\n    await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    return new Promise<HTMLImageElement>((resolve) => {\n        image.addEventListener(\"load\", () => resolve(image));\n    });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n    const canvas = document.createElement(\"canvas\");\n    // Scale image for better quality.\n    canvas.width = image.width * 2;\n    canvas.height = image.height * 2;\n    const ctx = canvas.getContext(\"2d\")!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob) {\n                resolve(blob);\n            } else {\n                reject();\n            }\n        }, type);\n    });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n    const svg = document.getElementById(\"chartSvg\")!.cloneNode(true) as Element;\n    svg.removeAttribute(\"transform\");\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\"width\", String(Number(svg.getAttribute(\"width\")) / scale));\n    svg.setAttribute(\n        \"height\",\n        String(Number(svg.getAttribute(\"height\")) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute(\"transform\");\n    return svg;\n}\n\nasync function getSvgContentsWithInlinedImages() {\n    const svg = getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n}\n\nexport async function downloadSvg(filename: string | undefined) {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    saveAs(blob, filename ? filename + \".svg\" : \"genealogy.svg\");\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng(filename: string | undefined) {\n    const canvas = await drawOnCanvas();\n    const blob = await canvasToBlob(canvas, \"image/png\");\n    saveAs(blob, filename ? filename + \".png\" : \"genealogy.png\");\n}\n\nexport async function downloadPdf(filename: string | undefined) {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import(\"jspdf\");\n    const canvas = await drawOnCanvas();\n    const doc = new jspdf({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: \"pt\",\n        format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, \"PNG\", 0, 0, canvas.width, canvas.height, \"NONE\");\n    doc.save(filename ? filename + \".pdf\" : \"genealogy.pdf\");\n}\n\nexport async function downloadGedcom(gedcom: string, filename: string | undefined) {\n    const blob = new Blob([gedcom], {type: \"text/plain\"});\n    saveAs(blob, filename ? filename + \".ged\" : \"genealogy.ged\");\n}\n\ninterface GedcomTreeItem {\n    tag: string;\n    data: string;\n}\nexport function getFilename(gedcom: GedcomData | undefined) {\n    const filename = Object.entries(gedcom?.head || {})\n        .filter((k) => k[0] === \"tree\")\n        .map(_ => _[1])\n        .map(obj => obj.find((sub: GedcomTreeItem) => sub.tag === 'FILE'))\n        .map(file => file?.data)[0];\n    return !filename ? null : filename.substring(0, filename.lastIndexOf('.')) || filename; // Remove file extension (if any)\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n    Hourglass,\n    Relatives\n}\n\nfunction getChartType(chartType: ChartType) {\n    switch (chartType) {\n        case ChartType.Hourglass:\n            return HourglassChart;\n        case ChartType.Relatives:\n            return RelativesChart;\n        default:\n            return HourglassChart;\n    }\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n    [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n    [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n    [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n    [ChartColors.COLOR_BY_ETHNICITY, TopolaChartColors.COLOR_BY_ETHNICITY],\n    [ChartColors.COLOR_BY_NR_LANGUAGES, TopolaChartColors.COLOR_BY_NR_LANGUAGES],\n    [ChartColors.COLOR_BY_LANGUAGE, TopolaChartColors.COLOR_BY_LANGUAGE]\n]);\n\nexport interface ChartProps {\n    data: JsonGedcomData;\n    selection: IndiInfo;\n    chartType: ChartType;\n    onSelection: (indiInfo: IndiInfo) => void;\n    freezeAnimation?: boolean;\n    colors?: ChartColors;\n    selectedLanguage?: string | null;\n    hideLanguages?: LanguagesArg;\n    hideEthnicity?: EthnicityArg;\n    hideIds?: IdsArg;\n    hideSex?: SexArg;\n}\n\nclass ChartWrapper {\n    private chart?: ChartHandle;\n    /** Animation is in progress. */\n    private animating = false;\n    /** Rendering is required after the current animation finishes. */\n    private rerenderRequired = false;\n    /** The d3 zoom behavior object. */\n    private zoomBehavior?: ZoomBehavior<Element, any>;\n    /** Props that will be used for re-rendering. */\n    private rerenderProps?: ChartProps;\n    private rerenderResetPosition?: boolean;\n\n    zoom(factor: number) {\n        const parent = select(\"#svgContainer\") as Selection<Element, any, any, any>;\n        this.zoomBehavior!.scaleBy(parent, factor);\n    }\n\n    /**\n     * Renders the chart or performs a transition animation to a new state.\n     * If indiInfo is not given, it means that it is the initial render and no animation is performed.\n     */\n    renderChart(\n        props: ChartProps,\n        intl: IntlShape,\n        args: { initialRender: boolean; resetPosition: boolean } = {\n            initialRender: false,\n            resetPosition: false,\n        },\n    ) {\n        // Wait for animation to finish if animation is in progress.\n        if (!args.initialRender && this.animating) {\n            this.rerenderRequired = true;\n            this.rerenderProps = props;\n            this.rerenderResetPosition = args.resetPosition;\n            return;\n        }\n\n        // Freeze changing selection after initial rendering.\n        if (!args.initialRender && props.freezeAnimation) {\n            return;\n        }\n\n        if (args.initialRender) {\n            (select(\"#chart\").node() as HTMLElement).innerHTML = '';\n            this.chart = createChart({\n                json: props.data,\n                chartType: getChartType(props.chartType),\n                renderer: DetailedRenderer,\n                svgSelector: \"#chart\",\n                indiCallback: (info) => props.onSelection(info),\n                colors: chartColors.get(props.colors!),\n                selectedLanguage: props.selectedLanguage,\n                animate: true,\n                updateSvgSize: false,\n                locale: intl.locale,\n            });\n        } else {\n            this.chart!.setData(props.data);\n        }\n\n        const chartInfo = this.chart!.render({\n            startIndi: props.selection.id,\n            baseGeneration: props.selection.generation,\n        });\n        const svg = select(\"#chartSvg\");\n        const parent = select(\"#svgContainer\").node() as Element;\n        const scale = zoomTransform(parent).k;\n        const zoomOutFactor = min([\n            1,\n            scale,\n            parent.clientWidth / chartInfo.size[0],\n            parent.clientHeight / chartInfo.size[1],\n        ])!;\n        const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n        this.zoomBehavior = zoom()\n            .scaleExtent(extent)\n            .translateExtent([[0, 0], chartInfo.size])\n            .on(\"zoom\", (event) => zoomed(chartInfo.size, event));\n        select(parent).on(\"scroll\", scrolled).call(this.zoomBehavior);\n\n        const scrollTopTween = (scrollTop: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollTop, scrollTop);\n                return (t: number) => {\n                    parent.scrollTop = i(t);\n                };\n            };\n        };\n\n        const scrollLeftTween = (scrollLeft: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n                return (t: number) => {\n                    parent.scrollLeft = i(t);\n                };\n            };\n        };\n\n        const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n        const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n        const offsetX = max([\n            0,\n            (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n        ]);\n        const offsetY = max([\n            0,\n            (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n        ]);\n        const svgTransition = svg.transition().delay(200).duration(500);\n        const transition = args.initialRender ? svg : svgTransition;\n        transition\n            .attr(\"transform\", `translate(${offsetX}, ${offsetY})`)\n            .attr(\"width\", chartInfo.size[0] * scale)\n            .attr(\"height\", chartInfo.size[1] * scale);\n        if (args.resetPosition) {\n            if (args.initialRender) {\n                parent.scrollLeft = -dx;\n                parent.scrollTop = -dy;\n            } else {\n                svgTransition\n                    .tween(\"scrollLeft\", scrollLeftTween(-dx))\n                    .tween(\"scrollTop\", scrollTopTween(-dy));\n            }\n        }\n\n        // After the animation is finished, rerender the chart if required.\n        this.animating = true;\n        chartInfo.animationPromise.then(() => {\n            this.animating = false;\n            if (this.rerenderRequired) {\n                this.rerenderRequired = false;\n                // Use `this.rerenderProps` instead of the props in scope because\n                // the props may have been updated in the meantime.\n                this.renderChart(this.rerenderProps!, intl, {\n                    initialRender: false,\n                    resetPosition: !!this.rerenderResetPosition,\n                });\n            }\n        });\n    }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n    const chartWrapper = useRef(new ChartWrapper());\n    const prevProps = usePrevious(props);\n    const intl = useIntl();\n\n    useEffect(() => {\n        if (prevProps) {\n            const initialRender =\n                props.chartType !== prevProps?.chartType ||\n                props.colors !== prevProps?.colors ||\n                props.selectedLanguage !== prevProps?.selectedLanguage ||\n                props.hideLanguages !== prevProps?.hideLanguages ||\n                props.hideEthnicity !== prevProps?.hideEthnicity ||\n                props.hideIds !== prevProps?.hideIds ||\n                props.hideSex !== prevProps?.hideSex;\n            const resetPosition =\n                props.chartType !== prevProps?.chartType ||\n                props.data !== prevProps.data ||\n                props.selection !== prevProps.selection;\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender,\n                resetPosition,\n            });\n        } else {\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender: true,\n                resetPosition: true,\n            });\n        }\n    });\n\n    return (\n        <div id=\"svgContainer\">\n            <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n                <button className=\"zoom-in\" onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}>+</button>\n                <button className=\"zoom-out\" onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}>−</button>\n            </Media>\n            <svg id=\"chartSvg\">\n                <g id=\"chart\"/>\n            </svg>\n        </div>\n    );\n}\n","export interface Language {\n    id: string;\n    name: string;\n    iso?: string | null;\n    abbreviation?: string;\n}\n\nexport default class CSVLoader {\n    // Singleton\n    private static csvData: Language[] | null = null;\n\n    static async loadLanguages(filePath: string) {\n        if (CSVLoader.csvData) {\n            return CSVLoader.csvData;\n        }\n        try {\n            const data = await fetch(filePath);\n            const text = await data.text();\n\n            const rows = text.trim().split('\\n');\n            const headers = rows[0].split(',');\n\n            const idIndex = headers.indexOf('id');\n            const nameIndex = headers.indexOf('name');\n            const isoIndex = headers.indexOf('ISO 639-3');\n\n            CSVLoader.csvData = rows.slice(1).map(row => {\n                const values = row.split(',');\n                return {\n                    id: values[idIndex],\n                    name: CSVLoader.title_fn(values[nameIndex]),\n                    iso: values[isoIndex],\n                    abbreviation: values[isoIndex].toUpperCase() || (values[nameIndex].slice(0, 3).toUpperCase() + '*')\n                } as Language;\n            });\n            return CSVLoader.csvData;\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n\n    private static title_fn = (str: string) =>\n        str.split(/[-_\\s]/) // Split by hyphen, underscore, or space\n           .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n           .join('-');\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from './lib/topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {GedcomData, idToIndiMap, jsonToGedcom, TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n    Chart,\n    ChartType,\n    downloadGedcom,\n    downloadPdf,\n    downloadPng,\n    downloadSvg,\n    getFilename\n} from './chart';\nimport {\n    GedcomUrlDataSource,\n    getSelection,\n    UploadedDataSource,\n    UploadSourceSpec,\n    UrlSourceSpec\n} from './datasource/load_data';\nimport CSVLoader, {Language} from \"././model/languages-loader\";\nimport {\n    argsToConfig,\n    Config,\n    ConfigPanel,\n    configToArgs,\n    DEFAULT_CONFIG,\n    EthnicityArg,\n    IdsArg,\n    LanguagesArg,\n    SexArg\n} from './config';\nimport SidePanel from \"./menu/side_panel\";\n\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE\n}\n\ntype DataSourceSpec = UrlSourceSpec | UploadSourceSpec | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\nfunction startIndi(data: TopolaData | undefined) {\n    const egoGen = getEgoGen(data)\n    return {\n        id: getLowestId(data) || 'I0',  // lowest ID on the chart, focus at the root, not at the EGO\n        generation: egoGen !== undefined ? -parseInt(egoGen, 10) : 0\n    };\n}\n\nfunction getEgoGen(data: TopolaData | undefined) {\n    return getEgoRecord(data?.gedcom)\n        .map(([_, value]) => value.tree.find(sub => sub.tag === \"GEN\")?.data)\n        .find(data => data !== undefined);\n}\n\nexport function getEgoRecord(gedcom: GedcomData | undefined) {\n    return Object.entries(gedcom?.other || {}).filter(([_, value]) => value.tag === \"EGO\")\n}\n\nfunction getLowestId(data: TopolaData | undefined) {\n    return data?.chartData?.indis?.reduce((lowest, current) =>\n            current.id.startsWith('I') && parseInt(current.id.slice(1), 10) < parseInt(lowest.id.slice(1), 10)\n            ? current\n            : lowest,\n        data?.chartData?.indis?.[0]\n    )?.id;\n}\n\nfunction loadLanguageOptions(data: TopolaData | undefined, allLanguages: Language[]) {\n    const gedcomLanguages = Array.from(getGedcomLanguages(data));\n    return allLanguages.filter((l: Language) => gedcomLanguages.includes(l.name)).sort();\n}\n\nfunction getGedcomLanguages(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"LANG\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\nfunction getEthnicities(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"_ETHN\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded data.\n */\nfunction getArguments(location: H.Location<any>, allLanguages: Language[]): Arguments {\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n    const view = getParam(\"view\");\n    const chartTypes = new Map<string | undefined, ChartType>([\n        [\"relatives\", ChartType.Relatives]\n    ]);\n    const hash = getParam(\"file\");\n    const url = getParam(\"url\");\n    const embedded = getParam(\"embedded\") === \"true\"; // False by default.\n    let sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n            allLanguages: allLanguages\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            allLanguages: allLanguages,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            allLanguages: allLanguages,\n            handleCors: getParam(\"handleCors\") !== \"false\", // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam(\"indi\");\n    const parsedGen = Number(getParam(\"gen\"));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined\n\n    return {\n        sourceSpec,\n        selection,\n        chartType: chartTypes.get(view) || ChartType.Hourglass,\n        showSidePanel: getParam(\"sidePanel\") !== \"false\", // True by default.\n        standalone: getParam(\"standalone\") !== \"false\" && !embedded && !staticUrl,\n        freezeAnimation: getParam(\"freeze\") === \"true\", // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    const [gedcomString, setGedcomString] = useState<String>()\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n    /** All languages. */\n    const [allLanguages, setAllLanguages] = useState<Language[]>([]);\n\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (!selection || selection.id !== newSelection.id || selection!.generation !== newSelection.generation) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined, allLanguages: Language[]) {\n        if (data === undefined) {\n            return;\n        }\n        // Find if there are languages\n        config.languageOptions = loadLanguageOptions(data, allLanguages)\n        config.renderLanguagesOption = config.languageOptions.length > 0\n        // Find if there are ethnicities/tribes\n        config.renderEthnicityOption = Array.from(getEthnicities(data)).length > 0\n        idToIndiMap(data.chartData).forEach((indi) => {\n            indi.hideLanguages = config.languages === LanguagesArg.HIDE;\n            indi.hideEthnicity = config.ethnicity === EthnicityArg.HIDE;\n            indi.hideId = config.id === IdsArg.HIDE;\n            indi.hideSex = config.sex === SexArg.HIDE;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo, allLanguages?: Language[]) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                analyticsEvent('topola_gedcom_upload');\n                return uploadedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.GEDCOM_URL:\n                analyticsEvent('topola_url_load');\n                return gedcomUrlDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n        }\n    }\n\n    // Function to load languages from CSV\n    const loadAllLanguages = async () => {\n        const allLanguages = await CSVLoader.loadLanguages(\"data/languages.csv\") || [];\n        setAllLanguages(allLanguages);\n    };\n\n    // useEffect to load languages when pathname is '/view'\n    useEffect(() => {\n        loadAllLanguages();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        analyticsEvent(\"topola_landing\");\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add(\"bgLogo\");\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove(\"bgLogo\");\n        }\n\n        (async () => {\n            if (location.pathname !== \"/view\") {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location, allLanguages);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n            if (\n                state === AppState.INITIAL || isNewData(args.sourceSpec, args.selection)\n            ) {\n                setState(AppState.LOADING);\n                setSourceSpec(args.sourceSpec);\n                setStandalone(args.standalone);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    setData(data);\n                    setGedcomString(jsonToGedcom(data.gedcom))\n                    setSelection(args.selection !== undefined ? args.selection : startIndi(data));\n                    toggleDetails(args.config, data, allLanguages);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE\n            ) {\n                setChartType(args.chartType);\n                setState(AppState.SHOWING_CHART);\n                updateDisplay(args.selection !== undefined ? args.selection : startIndi(data));\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart. Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        try {\n            analyticsEvent(\"topola_download_pdf\");\n            const filename = getFilename(data?.gedcom)\n            await downloadPdf(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: \"error.failed_pdf\",\n                    defaultMessage: \"Failed to generate PDF file. Please try with a smaller diagram or download an SVG file.\",\n                })\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        try {\n            analyticsEvent(\"topola_download_png\");\n            const filename = getFilename(data?.gedcom)\n            await downloadPng(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: \"error.failed_png\",\n                    defaultMessage: \"Failed to generate PNG file. Please try with a smaller diagram or download an SVG file.\"\n                })\n            );\n        }\n    }\n\n    async function onDownloadSvg() {\n        analyticsEvent(\"topola_download_svg\");\n        const filename = getFilename(data?.gedcom)\n        await downloadSvg(filename);\n    }\n\n    async function onDownloadGedcom() {\n        analyticsEvent(\"topola_download_gedcom\");\n        const filename = getFilename(data?.gedcom)\n        await downloadGedcom(gedcomString as string, filename);\n    }\n\n    function onResetView() {\n        const s = startIndi(data);\n        const args = {\n            indi: s.id,\n            gen:  s.generation\n        };\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            delete search[key]\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({id: \"tab.info\", defaultMessage: \"Info\"}),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: \"tab.settings\",\n                            defaultMessage: \"Settings\",\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data, allLanguages);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            selectedLanguage={config.selectedLanguage}\n                            hideLanguages={config.languages}\n                            hideEthnicity={config.ethnicity}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        showingChart={\n                            history.location.pathname === \"/view\" &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                            onDownloadGedcom,\n                            onResetView,\n                        }}\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={\"/view\"}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_es from './translations/es.json';\nimport messages_pl from './translations/pl.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n    de: messages_de,\n    fr: messages_fr,\n    it: messages_it,\n    es: messages_es,\n    pl: messages_pl\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n    ReactDOM.render(\n        <p>Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.</p>,\n        document.querySelector('#root'),\n    );\n} else {\n    ReactDOM.render(\n        <IntlProvider locale={language} messages={messages[language]}>\n            <MediaContextProvider>\n                <style>{mediaStyles}</style>\n                <Router>\n                    <Route component={App}/>\n                </Router>\n            </MediaContextProvider>\n        </IntlProvider>,\n        document.querySelector('#root'),\n    );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from '../lib/topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n    ['abt', 'about'],\n    ['cal', 'calculated'],\n    ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n    const hasDay = date.day !== undefined;\n    const hasMonth = date.month !== undefined;\n    const hasYear = date.year !== undefined;\n    if (!hasDay && !hasMonth && !hasYear) {\n        return date.text || '';\n    }\n    const dateObject = toDateObject(date);\n    const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n    const formatOptions: Intl.DateTimeFormatOptions = {\n        day: hasDay ? 'numeric' : undefined,\n        month: hasMonth ? 'long' : undefined,\n        year: hasYear ? 'numeric' : undefined,\n    };\n    const translatedDate = new Intl.DateTimeFormat(\n        intl.locale,\n        formatOptions,\n    ).format(dateObject);\n\n    return [translatedQualifier, translatedDate]\n        .filter((dateElement) => dateElement)\n        .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to;\n    const translatedFromDate = fromDate && formatDate(fromDate, intl);\n    const translatedToDate = toDate && formatDate(toDate, intl);\n    if (translatedFromDate && translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.between',\n                defaultMessage: 'between {from} and {to}',\n            },\n            {from: translatedFromDate, to: translatedToDate},\n        );\n    }\n    if (translatedFromDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.after',\n                defaultMessage: 'after {from}',\n            },\n            {from: translatedFromDate},\n        );\n    }\n    if (translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.before',\n                defaultMessage: 'before {to}',\n            },\n            {to: translatedToDate},\n        );\n    }\n    return '';\n}\n\nexport function formatDateQualifier(\n    qualifier: string | undefined,\n    intl: IntlShape,\n): string {\n    const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n    return (\n        (lowerCaseQualifier &&\n            intl.formatMessage({\n                id: `date.${lowerCaseQualifier}`,\n                defaultMessage:\n                    DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n            })) ||\n        ''\n    );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n    intl: IntlShape,\n): string {\n    if (!dateOrRange) {\n        return '';\n    }\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, intl);\n    }\n    if (dateOrRange.dateRange) {\n        return formatDateRage(dateOrRange.dateRange, intl);\n    }\n    return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n    return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n    date1: TopolaDate | undefined,\n    date2: TopolaDate | undefined,\n): number {\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n        return 0;\n    }\n    if (date1.year !== date2.year) {\n        return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n        return 0;\n    }\n    if (date1.month !== date2.month) {\n        return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n        return date1.month - date2.month;\n    }\n    return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n    firstDateOrRange: DateOrRange | undefined,\n    secondDateOrRange: DateOrRange | undefined,\n): number {\n    const date1 =\n        firstDateOrRange &&\n        (firstDateOrRange.date ||\n            (firstDateOrRange.dateRange &&\n                (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n    const date2 =\n        secondDateOrRange &&\n        (secondDateOrRange.date ||\n            (secondDateOrRange.dateRange &&\n                (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n    return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n    range1: DateRange,\n    range2: DateRange,\n): boolean {\n    return (\n        compareTopolaDates(range1.from, range2.to) <= 0 &&\n        compareTopolaDates(range1.to, range2.from) >= 0\n    );\n}\n\nexport function isValidDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n): boolean {\n    // invalid when range is closed and start is before end\n    if (isDateRangeClosed(dateOrRange?.dateRange)) {\n        return (\n            compareTopolaDates(\n                dateOrRange?.dateRange?.from,\n                dateOrRange?.dateRange?.to,\n            ) <= 0\n        );\n    }\n    //valid when there is exact date or date range has start or end defined\n    return !!(\n        dateOrRange?.date ||\n        dateOrRange?.dateRange?.from ||\n        dateOrRange?.dateRange?.to\n    );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n    return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n    return new Date(\n        date.year !== undefined ? date.year! : 0,\n        date.month !== undefined ? date.month! - 1 : 0,\n        date.day !== undefined ? date.day! : 1,\n    );\n}\n","import {convertGedcom, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\nimport {Language} from \".././model/languages-loader\";\n\nexport interface UploadSourceSpec {\n    source: DataSourceEnum.UPLOADED;\n    gedcom: string;\n    allLanguages: Language[];\n    hash: string;\n    images?: Map<string, string>;\n}\n\nexport interface UrlSourceSpec {\n    source: DataSourceEnum.GEDCOM_URL;\n    url: string;\n    allLanguages: Language[];\n    handleCors: boolean;\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(data: JsonGedcomData, selection?: IndiInfo): IndiInfo {\n    // If ID is not given, or it doesn't exist in the data, use the first ID in the data.\n    const id = selection && data.indis.some((i) => i.id === selection.id)\n        ? selection.id\n        : data.indis[0].id;\n    return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n    gedcom: string,\n    cacheId: string,\n    allLanguages: Language[],\n    images?: Map<string, string>\n): TopolaData {\n    const data = convertGedcom(gedcom, allLanguages, images || new Map());\n    const serializedData = JSON.stringify(data);\n    try {\n        sessionStorage.setItem(cacheId, serializedData);\n    } catch (e) {\n        console.warn('Failed to store data in session storage: ' + e);\n    }\n    return data;\n}\n\nasync function loadGedzip(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n    const entries = zip.getEntries();\n    let gedcom = undefined;\n    const images = new Map<string, string>();\n    for (const entry of entries) {\n        if (entry.entryName.endsWith('.ged')) {\n            if (gedcom) {\n                console.warn('Multiple GEDCOM files found in zip archive.');\n            } else {\n                gedcom = entry.getData().toString();\n            }\n        } else {\n            // Save image for later.\n            images.set(\n                entry.entryName,\n                URL.createObjectURL(new Blob([entry.getData()])),\n            );\n        }\n    }\n    if (!gedcom) {\n        throw new Error('GEDCOM file not found in zip archive.');\n    }\n    return {gedcom, images};\n}\n\nexport async function loadFile(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const fileHeader = await blob.slice(0, 2).text();\n    if (fileHeader === 'PK') {\n        return loadGedzip(blob);\n    }\n    return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n    url: string,\n    handleCors: boolean,\n    allLanguages: Language[]\n) {\n    try {\n        const cachedData = sessionStorage.getItem(url);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n\n    // handle GoogleDrive files\n    const driveUrlMatch = url.match(\n        /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n    );\n    if (driveUrlMatch) {\n        url = `https://drive.google.com/uc?id=${driveUrlMatch[1]}&export=download`;\n    }\n\n    const urlToFetch = handleCors ? 'https://universal-cors-proxy.glitch.me/' + encodeURIComponent(url) : url;\n    const response = await fetch(urlToFetch);\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/zip\")) {\n        const data = await response.blob();\n        const {gedcom, images} = await loadFile(data)\n        return prepareData(gedcom, url, allLanguages, images);\n    } else if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json();\n        return prepareData(data.contents, url, allLanguages, new Map());\n    } else if (contentType && (contentType.includes(\"text/plain\") || contentType.includes(\"text/html\"))) {\n        let data = await response.text();\n        while (data.charCodeAt(0) > 127) {\n            data = data.slice(1);\n        }\n        return prepareData(data, url, allLanguages, new Map());\n    }\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n    hash: string,\n    gedcom?: string,\n    allLanguages?: Language[],\n    images?: Map<string, string>\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n    if ((!gedcom) || (!allLanguages)) {\n        throw new TopolaError('ERROR_LOADING_UPLOADED_FILE',\n            'Error loading data. Please upload your file again.',\n        );\n    }\n    return prepareData(gedcom, hash, allLanguages, images);\n}\n\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<UploadSourceSpec>,\n        oldSource: SourceSelection<UploadSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.hash !== oldSource.spec.hash;\n    }\n\n    async loadData(source: SourceSelection<UploadSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadGedcom(\n                source.spec.hash,\n                source.spec.gedcom,\n                source.spec.allLanguages,\n                source.spec.images,\n            );\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n    isNewData(newSource: SourceSelection<UrlSourceSpec>, oldSource: SourceSelection<UrlSourceSpec>, data?: TopolaData) {\n        return newSource.spec.url !== oldSource.spec.url;\n    }\n    async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadFromUrl(source.spec.url, source.spec.handleCors, source.spec.allLanguages);\n        } catch (error) {\n            throw error;\n        }\n    }\n}"],"sourceRoot":""}