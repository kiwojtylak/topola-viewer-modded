{"version":3,"sources":["util/error.ts","lib/topola/dist/chart-util.js","util/gedcom_util.ts","lib/topola/dist/ancestor-chart.js","lib/topola/dist/id-generator.js","lib/topola/dist/composite-renderer.js","lib/topola/dist/data.js","lib/topola/dist/date-format.js","lib/topola/dist/descendant-chart.js","lib/topola/dist/index.js","lib/topola/dist/api.js","lib/topola/dist/detailed-renderer.js","lib/topola/dist/gedcom.js","lib/topola/dist/hourglass-chart.js","lib/topola/dist/simple-api.js","datasource/data_source.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/top_bar.tsx","menu/url_menu.tsx","menu/convert_csv.tsx","config.tsx","chart.tsx","languages/languages-loader.ts","app.tsx","index.tsx","util/date_util.ts","datasource/load_data.ts"],"names":["TopolaError","code","message","args","Error","Object","defineProperty","exports","value","ChartUtil","getChartInfoWithoutMargin","getChartInfo","linkId","V_SPACING","H_SPACING","d3_selection_1","require","d3_flextree_1","d3_array_1","HIDE_TIME_MS","MOVE_TIME_MS","node","parent","id","_a","data","generation","child","additionalMarriage","nodes","x0","min","d","x","width","y0","y","height","size","max","origin","options","this","prototype","linkHorizontal","s","sAnchor","renderer","getFamilyAnchor","dAnchor","spouseParentNodeId","getSpouseAnchor","getIndiAnchor","sx","sy","_b","dx","dy","midX","linkVertical","midY","linkAdditionalMarriage","nodeIndex","children","findIndex","n","siblingNode","updateSvgDimensions","chartInfo","group","select","svgSelector","animate","transition","delay","duration","attr","layOutChart","root","layoutOptions","_this","svg","empty","append","text","getCss","each","depth","flipVertically","baseGeneration","updateNodes","descendants","vSizePerDepth","Map","maxVSize","horizontal","get","set","vSize","vSpacing","undefined","hSpacing","flextree","nodeSize","maxChildSize_1","maxChildSize","spacing","treemap","forEach","renderChart","getSvgForRendering","nodeAnimation","renderNodes","linkAnimation","renderLinks","Promise","all","resolve","boundNodes","selectAll","nodeEnter","enter","transitionsPending","exit","transitionDone","merge","style","on","render","remove","link","links","filter","boundLinks","path","insert","pointerToId","pointer","substring","length","idToIndiMap","map","indis","indi","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","compareDates","birth","birthDatesComparator","newFams","newChildren","sort","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","has","title","startsWith","filterImage","convertGedcom","allLanguages","parseGedcom","json","gedcomEntriesToJson","chartData","getName","person","names","subEntry","name","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","__assign","t","i","arguments","p","hasOwnProperty","call","apply","AncestorChart","getAncestorsTree","chart_util_1","d3_hierarchy_1","id_generator_1","ancestorChartOptions","startIndiFamilies","startIndi","getIndi","getFamiliesAsSpouse","startFam","getFam","getMother","swapStartSpouses","ancestorsRoot","createHierarchy","pop","util","famc","parents","stack","idGenerator","IdGenerator","getFamilyAsChild","getId","parentId","family","indiParentNodeId","getFather","father","mother","spouse","stratify","animationPromise","info","ids","num","getFamPositionHorizontal","getFamPositionVertical","CompositeRenderer","getPreferredFamSize","setPreferredIndiSize","getPreferredIndiSize","indiVSizePerDepth","maxIndiVSize","getIndiVSize","getFamVSize","getVSize","hSize","indiHSize","getHSize","x_1","famYOffset","famXOffset","indiWidth","spouseWidth","familyWidth","indiHeight","spouseHeight","familyHeight","JsonDataProvider","JsonIndiDetails","isEgo","getFirstName","firstName","getLastName","lastName","getBirthDate","getMaidenName","maidenName","getNumberOfChildren","numberOfChildren","getNumberOfMarriages","numberOfMarriages","getBirthPlace","place","getDeathDate","death","getDeathPlace","isConfirmedDeath","confirmed","getSex","sex","getLanguages","languages","getLanguagesLabel","abbreviations","lang","abbreviation","join","getEthnicity","ethnicity","getTribe","tribe","getImageUrl","getImages","getNotes","notes","getEvents","events","showLanguages","hideLanguages","showEthnicity","hideEthnicity","showId","hideId","showSex","hideSex","JsonFamDetails","husb","wife","getChildren","getMarriageDate","getMarriagePlace","formatDateOrRange","formatDate","MONTHS_EN","QUALIFIERS_I18N","shortMonthCache","getShortMonth","month","locale","Intl","DateTimeFormat","cacheKey","format","Date","getQualifier","qualifier","language","split","languageMap","formatDateOnly","day","year","date","dateOrRange","dateRange","from","to","DescendantChart","layOutDescendants","DUMMY_ROOT_NODE_ID","removeDummyNode","allNodes","slice","descendantsRoot","getNodes","famIds","famId","indiId","getSpouse","getFamNode","dummyNode_1","_loop_1","this_1","childId","childNodes","__createBinding","create","o","m","k","k2","enumerable","__exportStar","ChartColors","__extends","extendStatics","setPrototypeOf","__proto__","Array","TypeError","String","__","constructor","DetailedRenderer","getLength","_1","date_format_1","composite_renderer_1","DETAILS_HEIGHT","textLengthCache","textClass","g","getComputedTextLength","SEX_SYMBOLS","_super","getColoringClass","colors","NO_COLOR","COLOR_BY_GENERATION","COLOR_BY_SEX","COLOR_BY_ETHNICITY","COLOR_BY_NR_LANGUAGES","COLOR_BY_LANGUAGE","getIndiDetails","detailsList","birthDate","birthPlace","deathDate","deathPlace","symbol","listIndex","details","ethnicityHeight","languagesHeight","idAndSexHeight","maxDetailsWidth","detail","getFamDetails","marriageDate","marriagePlace","update","indiUpdate","xOffset","yOffset","indiEnter","renderIndi","familyEnter","familyUpdate","getFamTransform","renderFamily","xhr","XMLHttpRequest","open","send","status","responseText","statusText","error","console","selection","getSexClass","ethnicityCss","getEthnicityClass","buildEthnicityMap","egoEthnicity","values","e","log","getLanguagesClass","selectedLanguageId","Math","resetCss","clear","indiHrefFunc","indiCallback","event","background","selectedLanguage","getClipId","getDetailsWidth","languages_height_start","ethnicity_height_start","maxDetails","v","details_height_start","_loop_2","lineGroup","sexSymbol","border","famHrefFunc","famCallback","gedcomToJson","getDate","parse_gedcom_1","findTag","findTags","extractName","arr","trim","MONTHS","parseDate","parts","lastPart","fullText","firstPart","Number","gedcomDate","date_1","createNotes","notesTag","reduce","concat","createEvent","typeTag","dateTag","placeTag","type","createFam","husbTag","wifeTag","objects","ego","nameTags","isMaiden","nameTag","main","maiden","nchiTag","nmrTag","sexTag","gedcomLanguages","l","includes","ethnicityTag","tribeTag","famcTag","objeTags","realObjeTag","file","createIndi","gedcomContents","parse","HourglassChart","ancestor_chart_1","descendant_chart_1","ancestorNodes","descendantNodes","createChart","data_1","SimpleChartHandle","initialRender","renderOptions","chartOptions","indiUrl","famUrl","createChartOptions","chartType","updateSvgSize","setData","DataSourceEnum","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","defaultMessage","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","closeIcon","Icon","color","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","line","index","properties","target","eventSources","sources","intl","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","Tab","Pane","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","sub","familyEntry","spouseReference","familySubEntry","eventPlace","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","resolveDate","eventNotes","toEvent","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","eventEntry","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","getMultilineDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","reject","PARENT_READY","window","postMessage","READY","GEDCOM","loadGedcom","addEventListener","onMessage","getI18nMessage","formatMessage","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","initMultiLingualLunrWithoutTrimmer","field","boost","spouseLastName","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","pipelineFunctions","searchPipelineFunctions","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","searchPipeline","query","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","onResultSelect","onSelection","noResultsMessage","placeholder","selectFirstResult","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","gedcomFile","loadFile","URL","createObjectURL","imageFileNames","keys","hash","md5","state","htmlFor","accept","multiple","onChange","ScreenSize","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","href","Actions","Button","secondary","primary","ConvertCSVMenu","inputFiles","setInputFiles","convert2gedcom","handleUpload","disabled","TopBar","FileMenus","screenSize","menuOpen","setMenuOpen","cooldown","toggleMenu","setTimeout","standalone","LARGE","SMALL","ChartMenus","showingChart","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","onCenterView","Divider","greaterThanOrEqual","inverted","at","icon","LanguagesArg","EthnicityArg","IdsArg","SexArg","DEFAULT_CONFIG","HIDE","SHOW","renderLanguagesOption","renderEthnicityOption","languageOptions","COLOR_ARG","COLOR_ARG_INVERSE","LANGUAGES_ARG","LANGUAGES_ARG_INVERSE","ETHNICITY_ARG","ETHNICITY_ARG_INVERSE","ID_ARG","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","config","languagesEnabled","setLanguagesEnabled","ethnicityEnabled","setEthnicityEnabled","idsEnabled","setIdsEnabled","sexEnabled","setSexEnabled","Field","Checkbox","radio","checked","tagName","toggle","newState","ChartType","zoomed","scale","transform","offsetX","clientWidth","offsetY","clientHeight","scrollLeft","scrollTop","scrolled","zoomTransform","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","onload","inlineImage","baseVal","fetch","response","warn","inlineImages","getElementsByTagName","loadImage","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","resetPosition","freezeAnimation","innerHTML","zoomOutFactor","extent","scaleExtent","translateExtent","scrollTopTween","interpolateNumber","scrollLeftTween","svgTransition","tween","then","Chart","chartWrapper","prevProps","usePrevious","hideIds","CSVLoader","csvData","rows","headers","idIndex","indexOf","nameIndex","isoIndex","row","title_fn","iso","toUpperCase","str","word","charAt","AppState","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","egoGen","getEgoIndi","getEgoGen","parseInt","loadLanguageOptions","acc","Set","getGedcomLanguages","getArguments","chartTypes","Hourglass","getParamFromSearch","view","embedded","sourceSpec","GEDCOM_URL","handleCors","UPLOADED","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","de","messages_de","fr","messages_fr","it","messages_it","es","messages_es","pl","messages_pl","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","setAllLanguages","toggleDetails","getEthnicities","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","embeddedDataSource","isNewData","newSourceSpec","newSelection","spec","loadData","loadAllLanguages","loadLanguages","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","c","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","exact","DATE_QUALIFIERS","hasDay","hasMonth","hasYear","dateObject","toDateObject","formatOptions","lowerCaseQualifier","formatDateQualifier","dateElement","fromDate","toDate","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","prepareData","cacheId","serializedData","JSON","stringify","sessionStorage","setItem","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","cachedData","getItem","urlToFetch","encodeURIComponent","ok","contentType"],"mappings":"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","file":"static/js/main.4c70e224.chunk.js","sourcesContent":["/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n    constructor(\n        public readonly code: string,\n        message: string,\n        public readonly args: { [key: string]: string } = {},\n    ) {\n        super(message);\n    }\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.ChartUtil = exports.getChartInfoWithoutMargin = exports.getChartInfo = exports.linkId = exports.V_SPACING = exports.H_SPACING = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst d3_flextree_1 = require(\"d3-flextree\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\n\n/** Horizontal distance between boxes. */\nexports.H_SPACING = 15;\n/** Vertical distance between boxes. */\nexports.V_SPACING = 30;\n/** Margin around the whole drawing. */\nconst MARGIN = 15;\nconst HIDE_TIME_MS = 200;\nconst MOVE_TIME_MS = 500;\n\n/** Assigns an identifier to a link. */\nfunction linkId(node) {\n    if (!node.parent) {\n        return node.id + \":A\";\n    }\n    const _a = node.data.generation > node.parent.data.generation\n        ? [node.data, node.parent.data]\n        : [node.parent.data, node.data], child = _a[0], parent = _a[1];\n    if (child.additionalMarriage) {\n        return child.id + \":A\";\n    }\n    return parent.id + \":\" + child.id;\n}\nexports.linkId = linkId;\nfunction getChartInfo(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    }) - MARGIN;\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    }) - MARGIN;\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    }) + MARGIN;\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    }) + MARGIN;\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfo = getChartInfo;\nfunction getChartInfoWithoutMargin(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    });\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    });\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    });\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    });\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfoWithoutMargin = getChartInfoWithoutMargin;\n/** Utility class with common code for all chart types. */\nlet ChartUtil = /** @class */ (function () {\n    function ChartUtil(options) {\n        this.options = options;\n    }\n    /** Creates a path from parent to the child node (horizontal layout). */\n    ChartUtil.prototype.linkHorizontal = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midX = (s.x + s.data.width / 2 + d.x - d.data.width / 2) / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + midX + \" \" + sy + \",\\n              \" + midX + \" \" + dy + \",\\n              \" + dx + \" \" + dy;\n    };\n    /** Creates a path from parent to the child node (vertical layout). */\n    ChartUtil.prototype.linkVertical = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midY = s.y + s.data.height / 2 + exports.V_SPACING / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + sx + \" \" + midY + \",\\n              \" + dx + \" \" + midY + \",\\n              \" + dx + \" \" + dy;\n    };\n    ChartUtil.prototype.linkAdditionalMarriage = function (node) {\n        const nodeIndex = node.parent.children.findIndex(function (n) {\n            return n.data.id === node.data.id;\n        });\n        // Assert nodeIndex > 0.\n        const siblingNode = node.parent.children[nodeIndex - 1];\n        const sAnchor = this.options.renderer.getIndiAnchor(node.data);\n        const dAnchor = this.options.renderer.getIndiAnchor(siblingNode.data);\n        const _a = [node.x + sAnchor[0], node.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [siblingNode.x + dAnchor[0], siblingNode.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        return \"M \" + sx + \", \" + sy + \"\\n            L \" + dx + \", \" + dy;\n    };\n    ChartUtil.prototype.updateSvgDimensions = function (chartInfo) {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        const group = svg.select('g');\n        const transition = this.options.animate\n            ? group.transition().delay(HIDE_TIME_MS).duration(MOVE_TIME_MS)\n            : group;\n        transition.attr('transform', \"translate(\" + chartInfo.origin[0] + \", \" + chartInfo.origin[1] + \")\");\n    };\n    ChartUtil.prototype.layOutChart = function (root, layoutOptions) {\n        const _this = this;\n        if (layoutOptions === void 0) { layoutOptions = {}; }\n        // Add styles so that calculating text size is correct.\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('style').empty()) {\n            svg.append('style').text(this.options.renderer.getCss());\n        }\n        // Assign generation number.\n        root.each(function (node) {\n            node.data.generation =\n                node.depth * (layoutOptions.flipVertically ? -1 : 1) +\n                    (_this.options.baseGeneration || 0);\n        });\n        // Set preferred sizes.\n        this.options.renderer.updateNodes(root.descendants());\n        const vSizePerDepth = new Map();\n        root.each(function (node) {\n            const depth = node.depth;\n            const maxVSize = d3_array_1.max([\n                _this.options.horizontal ? node.data.width : node.data.height,\n                vSizePerDepth.get(depth),\n            ]);\n            vSizePerDepth.set(depth, maxVSize);\n        });\n        // Set sizes of whole nodes.\n        root.each(function (node) {\n            const vSize = vSizePerDepth.get(node.depth);\n            if (_this.options.horizontal) {\n                node.data.width = vSize;\n            }\n            else {\n                node.data.height = vSize;\n            }\n        });\n        const vSpacing = layoutOptions.vSpacing !== undefined ? layoutOptions.vSpacing : exports.V_SPACING;\n        const hSpacing = layoutOptions.hSpacing !== undefined ? layoutOptions.hSpacing : exports.H_SPACING;\n        // Assigns the x and y position for the nodes.\n        const treemap = d3_flextree_1.flextree()\n            .nodeSize(function (node) {\n                if (_this.options.horizontal) {\n                    const maxChildSize_1 = d3_array_1.max(node.children || [], function (n) {\n                        return n.data.width;\n                    }) || 0;\n                    return [\n                        node.data.height,\n                        (maxChildSize_1 + node.data.width) / 2 + vSpacing,\n                    ];\n                }\n                const maxChildSize = d3_array_1.max(node.children || [], function (n) {\n                    return n.data.height;\n                }) || 0;\n                return [\n                    node.data.width,\n                    (maxChildSize + node.data.height) / 2 + vSpacing,\n                ];\n            }).spacing(function () {\n                return hSpacing;\n            });\n        const nodes = treemap(root).descendants();\n        // Swap x-y coordinates for horizontal layout.\n        nodes.forEach(function (node) {\n            let _a;\n            if (layoutOptions.flipVertically) {\n                node.y = -node.y;\n            }\n            if (_this.options.horizontal) {\n                _a = [node.y, node.x];\n                node.x = _a[0];\n                node.y = _a[1];\n            }\n        });\n        return nodes;\n    };\n    ChartUtil.prototype.renderChart = function (nodes) {\n        const svg = this.getSvgForRendering();\n        const nodeAnimation = this.renderNodes(nodes, svg);\n        const linkAnimation = this.renderLinks(nodes, svg);\n        return Promise.all([\n            nodeAnimation,\n            linkAnimation,\n        ]);\n    };\n    ChartUtil.prototype.renderNodes = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const boundNodes = svg\n                .select('g')\n                .selectAll('g.node')\n                .data(nodes, function (d) {\n                    return d.id;\n                });\n            const nodeEnter = boundNodes.enter().append('g');\n            let transitionsPending = boundNodes.exit().size() + boundNodes.size() + nodeEnter.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            nodeEnter\n                .merge(boundNodes)\n                .attr('class', function (node) {\n                    return \"node generation\" + node.data.generation;\n                });\n            nodeEnter.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            if (_this.options.animate) {\n                nodeEnter\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            const updateTransition = _this.options.animate\n                ? boundNodes\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundNodes;\n            updateTransition.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            _this.options.renderer.render(nodeEnter, boundNodes);\n            if (_this.options.animate) {\n                boundNodes\n                    .exit()\n                    .transition()\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundNodes.exit().remove();\n            }\n        });\n    };\n    ChartUtil.prototype.renderLinks = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const link = function (parent, child) {\n                if (child.data.additionalMarriage) {\n                    return _this.linkAdditionalMarriage(child);\n                }\n                const flipVertically = parent.data.generation > child.data.generation;\n                if (_this.options.horizontal) {\n                    if (flipVertically) {\n                        return _this.linkHorizontal(child, parent);\n                    }\n                    return _this.linkHorizontal(parent, child);\n                }\n                if (flipVertically) {\n                    return _this.linkVertical(child, parent);\n                }\n                return _this.linkVertical(parent, child);\n            };\n            const links = nodes.filter(function (n) {\n                return !!n.parent || n.data.additionalMarriage;\n            });\n            const boundLinks = svg\n                .select('g')\n                .selectAll('path.link')\n                .data(links, linkId);\n            const path = boundLinks\n                .enter()\n                .insert('path', 'g')\n                .attr('class', function (node) {\n                    return node.data.additionalMarriage ? 'link additional-marriage' : 'link';\n                })\n                .attr('d', function (node) {\n                    return link(node.parent, node);\n                });\n            let transitionsPending = boundLinks.exit().size() + boundLinks.size() + path.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            const linkTransition = _this.options.animate\n                ? boundLinks\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundLinks;\n            linkTransition.attr('d', function (node) {\n                return link(node.parent, node);\n            });\n            if (_this.options.animate) {\n                path\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(2 * HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(0)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            if (_this.options.animate) {\n                boundLinks\n                    .exit()\n                    .transition()\n                    .duration(0)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundLinks.exit().remove();\n            }\n        });\n    };\n    ChartUtil.prototype.getSvgForRendering = function () {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('g').empty()) {\n            svg.append('g');\n        }\n        return svg;\n    };\n    return ChartUtil;\n}());\nexports.ChartUtil = ChartUtil;\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {gedcomEntriesToJson, JsonFam, JsonGedcomData, JsonImage, JsonIndi} from '../lib/topola';\nimport {compareDates} from './date_util';\nimport {Language} from \"../languages/languages-loader\";\n\nexport interface GedcomData {\n    /** The HEAD entry. */\n    head: GedcomEntry;\n    /** INDI entries mapped by id. */\n    indis: { [key: string]: GedcomEntry };\n    /** FAM entries mapped by id. */\n    fams: { [key: string]: GedcomEntry };\n    /** Other entries mapped by id, e.g. NOTE, SOUR. */\n    other: { [key: string]: GedcomEntry };\n}\n\nexport interface TopolaData {\n    chartData: JsonGedcomData;\n    gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n    return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n    const map = new Map<string, JsonIndi>();\n    data.indis.forEach((indi) => {\n        map.set(indi.id, indi);\n    });\n    return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n    const map = new Map<string, JsonFam>();\n    data.fams.forEach((fam) => {\n        map.set(fam.id, fam);\n    });\n    return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n    const head = entries.find((entry) => entry.tag === 'HEAD')!;\n    const indis: { [key: string]: GedcomEntry } = {};\n    const fams: { [key: string]: GedcomEntry } = {};\n    const other: { [key: string]: GedcomEntry } = {};\n    entries.forEach((entry) => {\n        if (entry.tag === 'INDI') {\n            indis[pointerToId(entry.pointer)] = entry;\n        } else if (entry.tag === 'FAM') {\n            fams[pointerToId(entry.pointer)] = entry;\n        } else if (entry.pointer) {\n            other[pointerToId(entry.pointer)] = entry;\n        }\n    });\n    return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n\n/** Birthdate comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n    const indiMap = idToIndiMap(gedcom);\n    return (indiId1: string, indiId2: string) => {\n        const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n        const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n        return (\n            compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n            strcmp(indiId1, indiId2)\n        );\n    };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n    const famMap = idToFamMap(gedcom);\n    return (famId1: string, famId2: string) => {\n        const fam1: JsonFam | undefined = famMap.get(famId1);\n        const fam2: JsonFam | undefined = famMap.get(famId2);\n        return (\n            compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n            strcmp(famId1, famId2)\n        );\n    };\n}\n\n/**\n * Sorts children by birthdate in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n    fam: JsonFam,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!fam.children) {\n        return fam;\n    }\n    const newChildren = fam.children.sort(comparator);\n    return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birthdate.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = birthDatesComparator(gedcom);\n    const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n    return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n    indi: JsonIndi,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!indi.fams) {\n        return indi;\n    }\n    const newFams = indi.fams.sort(comparator);\n    return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = marriageDatesComparator(gedcom);\n    const newIndis = gedcom.indis.map((indi) =>\n        sortIndiSpouses(indi, comparator),\n    );\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is returned.\n * Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    getterFunction: (gedcom: GedcomData) => { [key: string]: GedcomEntry },\n) {\n    if (entry.data) {\n        const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n        if (dereferenced) {\n            return dereferenced;\n        }\n    }\n    return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines.\n * Supports continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n    const result = [entry.data];\n    entry.tree.forEach((subentry) => {\n        if (subentry.tag === 'CONC' && subentry.data) {\n            const last = result.length - 1;\n            result[last] += subentry.data;\n        } else if (subentry.tag === 'CONT' && subentry.data) {\n            result.push(subentry.data);\n        }\n    });\n    return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n    return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n    const lowerName = fileName.toLowerCase();\n    return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n    if (!indi.images || indi.images.length === 0) {\n        return indi;\n    }\n    const newImages: JsonImage[] = [];\n    indi.images.forEach((image) => {\n        const filePath = image.url.replaceAll('\\\\', '/');\n        const fileName = filePath.match(/[^/]*$/)![0];\n        // If the image file has been loaded into memory, use it.\n        if (images.has(filePath)) {\n            newImages.push({url: images.get(filePath)!, title: image.title});\n        } else if (images.has(fileName)) {\n            newImages.push({url: images.get(fileName)!, title: image.title});\n        } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n            newImages.push(image);\n        }\n    });\n    return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n    gedcom: JsonGedcomData,\n    images: Map<string, string>,\n): JsonGedcomData {\n    const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birthdate\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param gedcom\n * @param images Map from file name to image URL. This is used to pass in uploaded images.\n * @param allLanguages\n */\nexport function convertGedcom(\n    gedcom: string,\n    allLanguages: Language[],\n    images: Map<string, string>\n): TopolaData {\n    const entries = parseGedcom(gedcom, allLanguages);\n    const json = gedcomEntriesToJson(entries, allLanguages);\n    if (\n        !json ||\n        !json.indis ||\n        !json.indis.length ||\n        !json.fams ||\n        !json.fams.length\n    ) {\n        throw new TopolaError('GEDCOM_READ_FAILED', 'Insufficient GEDCOM data');\n    }\n    return {\n        chartData: filterImages(normalizeGedcom(json), images),\n        gedcom: prepareGedcom(entries)\n    };\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n    const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n    const notMarriedName = names.find(\n        (subEntry) =>\n            subEntry.tree.filter(\n                (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n            ).length === 0,\n    );\n    const name = notMarriedName || names[0];\n    return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n    const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n    const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')?.data;\n    return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(objectEntry: GedcomEntry): GedcomEntry | undefined {\n    return objectEntry.tree.find(\n        (entry) =>\n            entry.tag === 'FILE' &&\n            entry.data.startsWith('http') &&\n            isImageFile(entry.data),\n    );\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AncestorChart = exports.getAncestorsTree = void 0;\nvar chart_util_1 = require(\"./chart-util\");\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar id_generator_1 = require(\"./id-generator\");\nfunction getAncestorsTree(options) {\n    var ancestorChartOptions = __assign({}, options);\n    var startIndiFamilies = options.startIndi\n        ? options.data.getIndi(options.startIndi).getFamiliesAsSpouse()\n        : [];\n    // If the start individual is set and this person has at least one spouse,\n    // start with the family instead.\n    if (startIndiFamilies.length) {\n        ancestorChartOptions.startFam = startIndiFamilies[0];\n        ancestorChartOptions.startIndi = undefined;\n        var fam = options.data.getFam(startIndiFamilies[0]);\n        if (fam.getMother() === options.startIndi) {\n            ancestorChartOptions.swapStartSpouses = true;\n        }\n    }\n    var ancestors = new AncestorChart(ancestorChartOptions);\n    var ancestorsRoot = ancestors.createHierarchy();\n    // Remove spouse's ancestors if there are multiple spouses\n    // to avoid showing ancestors of just one spouse.\n    if (startIndiFamilies.length > 1 &&\n        ancestorsRoot.children &&\n        ancestorsRoot.children.length > 1) {\n        ancestorsRoot.children.pop();\n        ancestorsRoot.data.spouseParentNodeId = undefined;\n    }\n    return ancestorsRoot;\n}\nexports.getAncestorsTree = getAncestorsTree;\n/** Renders an ancestors chart. */\nvar AncestorChart = /** @class */ (function () {\n    function AncestorChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    /** Creates a d3 hierarchy from the input data. */\n    AncestorChart.prototype.createHierarchy = function () {\n        let id;\n        let famc;\n        let indi;\n        var parents = [];\n        var stack = [];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        if (this.options.startIndi) {\n            indi = this.options.data.getIndi(this.options.startIndi);\n            famc = indi.getFamilyAsChild();\n            id = famc ? idGenerator.getId(famc) : undefined;\n            if (famc) {\n                stack.push({\n                    id: famc,\n                    parentId: this.options.startIndi,\n                    family: { id: famc },\n                });\n            }\n            parents.push({\n                id: this.options.startIndi,\n                indi: { id: this.options.startIndi },\n                indiParentNodeId: id,\n            });\n        }\n        else {\n            stack.push({\n                id: idGenerator.getId(this.options.startFam),\n                family: { id: this.options.startFam },\n            });\n        }\n        while (stack.length) {\n            var entry = stack.pop();\n            var fam = this.options.data.getFam(entry.family.id);\n            if (!fam) {\n                continue;\n            }\n            var _a = entry.family.id === this.options.startFam &&\n                this.options.swapStartSpouses\n                ? [fam.getMother(), fam.getFather()]\n                : [fam.getFather(), fam.getMother()], father = _a[0], mother = _a[1];\n            if (!father && !mother) {\n                continue;\n            }\n            if (mother) {\n                entry.spouse = { id: mother };\n                indi = this.options.data.getIndi(mother);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.spouseParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            if (father) {\n                entry.indi = { id: father };\n                indi = this.options.data.getIndi(father);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.indiParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            parents.push(entry);\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    AncestorChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = this.util.layOutChart(root, { flipVertically: true });\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return AncestorChart;\n}());\nexports.AncestorChart = AncestorChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdGenerator = void 0;\n/** Provides unique identifiers. */\nvar IdGenerator = /** @class */ (function () {\n    function IdGenerator() {\n        this.ids = new Map();\n    }\n    /**\n     * Returns the given identifier if it wasn't used before. Otherwise, appends\n     * a number to the given identifier to make it unique.\n     */\n    IdGenerator.prototype.getId = function (id) {\n        if (this.ids.has(id)) {\n            var num = this.ids.get(id);\n            this.ids.set(id, num + 1);\n            return id + \":\" + num;\n        }\n        this.ids.set(id, 1);\n        return id;\n    };\n    return IdGenerator;\n}());\nexports.IdGenerator = IdGenerator;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFamPositionHorizontal = exports.getFamPositionVertical = exports.CompositeRenderer = void 0;\n\nconst d3_array_1 = require(\"d3-array\");\n\n/**\n * Common code for tree nodes that are composed of individual and family boxes.\n */\nlet CompositeRenderer = /** @class */ (function () {\n\n    function CompositeRenderer(options) {\n        this.options = options;\n    }\n\n    CompositeRenderer.prototype.getPreferredFamSize = function (id) {\n        // No family box in the simple renderer.\n        return [0, 0];\n    };\n\n    CompositeRenderer.prototype.setPreferredIndiSize = function (indi) {\n        let _a;\n        if (!indi) {\n            return;\n        }\n        _a = this.getPreferredIndiSize(indi.id);\n        indi.width = _a[0];\n        indi.height = _a[1];\n    };\n\n    CompositeRenderer.prototype.updateNodes = function (nodes) {\n        const _this = this;\n        // Calculate individual vertical size per depth.\n        const indiVSizePerDepth = new Map();\n        nodes.forEach(function (node) {\n            let _a;\n            _this.setPreferredIndiSize(node.data.indi);\n            _this.setPreferredIndiSize(node.data.spouse);\n            const family = node.data.family;\n            if (family) {\n                _a = _this.getPreferredFamSize(family.id);\n                family.width = _a[0];\n                family.height = _a[1];\n            }\n            const depth = node.depth;\n            const maxIndiVSize = d3_array_1.max([\n                getIndiVSize(node.data, !!_this.options.horizontal),\n                indiVSizePerDepth.get(depth),\n            ]);\n            indiVSizePerDepth.set(depth, maxIndiVSize);\n        });\n        // Set same width for each depth.\n        nodes.forEach(function (node) {\n            let _a;\n            if (_this.options.horizontal) {\n                if (node.data.indi) {\n                    node.data.indi.width = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.width = indiVSizePerDepth.get(node.depth);\n                }\n            } else {\n                if (node.data.indi) {\n                    node.data.indi.height = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.height = indiVSizePerDepth.get(node.depth);\n                }\n            }\n            const vSize = getVSize(node.data, !!_this.options.horizontal);\n            const hSize = getHSize(node.data, !!_this.options.horizontal);\n            _a = _this.options.horizontal ? [vSize, hSize] : [hSize, vSize];\n            node.data.width = _a[0];\n            node.data.height = _a[1];\n        });\n    };\n\n    CompositeRenderer.prototype.getFamilyAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_1 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const famYOffset = node.family\n                ? d3_array_1.max([-getFamPositionHorizontal(node), 0])\n                : 0;\n            const y_1 = -(node.indi && node.spouse ? node.height / 2 - node.indi.height : 0) +\n                famYOffset;\n            return [x_1, y_1];\n        }\n        const famXOffset = node.family\n            ? d3_array_1.max([-getFamPositionVertical(node), 0])\n            : 0;\n        const x = -(node.indi && node.spouse ? node.width / 2 - node.indi.width : 0) +\n            famXOffset;\n        const y = -node.height / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getSpouseAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_2 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_2 = node.indi ? node.indi.height / 2 : 0;\n            return [x_2, y_2];\n        }\n        const x = node.indi ? node.indi.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getIndiAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_3 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_3 = node.spouse ? -node.spouse.height / 2 : 0;\n            return [x_3, y_3];\n        }\n        const x = node.spouse ? -node.spouse.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    return CompositeRenderer;\n}());\nexports.CompositeRenderer = CompositeRenderer;\n\n/**\n * Returns the relative position of the family box for the vertical layout.\n */\nfunction getFamPositionVertical(node) {\n    const indiWidth = node.indi ? node.indi.width : 0;\n    const spouseWidth = node.spouse ? node.spouse.width : 0;\n    const familyWidth = node.family.width;\n    if (!node.indi || !node.spouse || indiWidth + spouseWidth <= familyWidth) {\n        return (indiWidth + spouseWidth - familyWidth) / 2;\n    }\n    if (familyWidth / 2 >= spouseWidth) {\n        return indiWidth + spouseWidth - familyWidth;\n    }\n    if (familyWidth / 2 >= indiWidth) {\n        return 0;\n    }\n    return indiWidth - familyWidth / 2;\n}\nexports.getFamPositionVertical = getFamPositionVertical;\n\n/**\n * Returns the relative position of the family box for the horizontal layout.\n */\nfunction getFamPositionHorizontal(node) {\n    const indiHeight = node.indi ? node.indi.height : 0;\n    const spouseHeight = node.spouse ? node.spouse.height : 0;\n    const familyHeight = node.family.height;\n    if (!node.indi || !node.spouse) {\n        return (indiHeight + spouseHeight - familyHeight) / 2;\n    }\n    return indiHeight - familyHeight / 2;\n}\nexports.getFamPositionHorizontal = getFamPositionHorizontal;\n\n/** Returns the horizontal size. */\nfunction getHSize(node, horizontal) {\n    if (horizontal) {\n        return ((node.indi ? node.indi.height : 0) +\n            (node.spouse ? node.spouse.height : 0));\n    }\n    const indiHSize = (node.indi ? node.indi.width : 0) + (node.spouse ? node.spouse.width : 0);\n    return d3_array_1.max([indiHSize, node.family ? node.family.width : 0]);\n}\n\nfunction getFamVSize(node, horizontal) {\n    if (horizontal) {\n        return node.family ? node.family.width : 0;\n    }\n    return node.family ? node.family.height : 0;\n}\n\n/** Returns the vertical size of individual boxes. */\nfunction getIndiVSize(node, horizontal) {\n    if (horizontal) {\n        return d3_array_1.max([\n            node.indi ? node.indi.width : 0,\n            node.spouse ? node.spouse.width : 0,\n        ]);\n    }\n    return d3_array_1.max([\n        node.indi ? node.indi.height : 0,\n        node.spouse ? node.spouse.height : 0,\n    ]);\n}\n\n/** Returns the vertical size. */\nfunction getVSize(node, horizontal) {\n    return getIndiVSize(node, horizontal) + getFamVSize(node, horizontal);\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonDataProvider = void 0;\n/** Details of an individual based on Json input. */\nvar JsonIndiDetails = /** @class */ (function () {\n    function JsonIndiDetails(json) {\n        this.json = json;\n    }\n    JsonIndiDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonIndiDetails.prototype.isEgo = function () {\n        return this.json.isEgo;\n    };\n    JsonIndiDetails.prototype.getFamiliesAsSpouse = function () {\n        return this.json.fams || [];\n    };\n    JsonIndiDetails.prototype.getFamilyAsChild = function () {\n        return this.json.famc || null;\n    };\n    JsonIndiDetails.prototype.getFirstName = function () {\n        return this.json.firstName || null;\n    };\n    JsonIndiDetails.prototype.getLastName = function () {\n        return this.json.lastName || null;\n    };\n    JsonIndiDetails.prototype.getBirthDate = function () {\n        return this.json.birth || null;\n    };\n    JsonIndiDetails.prototype.getMaidenName = function () {\n        return this.json.maidenName || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfChildren = function () {\n        return this.json.numberOfChildren || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfMarriages = function () {\n        return this.json.numberOfMarriages || null;\n    };\n    JsonIndiDetails.prototype.getBirthPlace = function () {\n        return (this.json.birth && this.json.birth.place) || null;\n    };\n    JsonIndiDetails.prototype.getDeathDate = function () {\n        return this.json.death || null;\n    };\n    JsonIndiDetails.prototype.getDeathPlace = function () {\n        return (this.json.death && this.json.death.place) || null;\n    };\n    JsonIndiDetails.prototype.isConfirmedDeath = function () {\n        return !!this.json.death && !!this.json.death.confirmed;\n    };\n    JsonIndiDetails.prototype.getSex = function () {\n        return this.json.sex || null;\n    };\n    JsonIndiDetails.prototype.getLanguages = function () {\n        return this.json.languages || [];\n    };\n    JsonIndiDetails.prototype.getLanguagesLabel = function () {\n        const abbreviations = this.json.languages.map(lang => lang.abbreviation);\n        return abbreviations.length > 0 ? `${abbreviations.join(', ')}` : null;\n    };\n    JsonIndiDetails.prototype.getEthnicity = function () {\n        return this.json.ethnicity || null;\n    };\n    JsonIndiDetails.prototype.getTribe = function () {\n        return this.json.tribe || null;\n    };\n    JsonIndiDetails.prototype.getImageUrl = function () {\n        return ((this.json.images &&\n            this.json.images.length > 0 &&\n            this.json.images[0].url) ||\n            null);\n    };\n    JsonIndiDetails.prototype.getImages = function () {\n        return this.json.images || [];\n    };\n    JsonIndiDetails.prototype.getNotes = function () {\n        return this.json.notes || [];\n    };\n    JsonIndiDetails.prototype.getEvents = function () {\n        return this.json.events || [];\n    };\n    JsonIndiDetails.prototype.showLanguages = function () {\n        return !this.json.hideLanguages;\n    };\n    JsonIndiDetails.prototype.showEthnicity = function () {\n        return !this.json.hideEthnicity;\n    };\n    JsonIndiDetails.prototype.showId = function () {\n        return !this.json.hideId;\n    };\n    JsonIndiDetails.prototype.showSex = function () {\n        return !this.json.hideSex;\n    };\n    return JsonIndiDetails;\n}());\n/** Details of a family based on Json input. */\nvar JsonFamDetails = /** @class */ (function () {\n    function JsonFamDetails(json) {\n        this.json = json;\n    }\n    JsonFamDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonFamDetails.prototype.getFather = function () {\n        return this.json.husb || null;\n    };\n    JsonFamDetails.prototype.getMother = function () {\n        return this.json.wife || null;\n    };\n    JsonFamDetails.prototype.getChildren = function () {\n        return this.json.children || [];\n    };\n    JsonFamDetails.prototype.getMarriageDate = function () {\n        return this.json.marriage || null;\n    };\n    JsonFamDetails.prototype.getMarriagePlace = function () {\n        return (this.json.marriage && this.json.marriage.place) || null;\n    };\n    return JsonFamDetails;\n}());\n/** Implementation of the DataProvider interface based on Json input. */\nvar JsonDataProvider = /** @class */ (function () {\n    function JsonDataProvider(json) {\n        var _this = this;\n        this.json = json;\n        this.indis = new Map();\n        this.fams = new Map();\n        json.indis.forEach(function (indi) {\n            return _this.indis.set(indi.id, new JsonIndiDetails(indi));\n        });\n        json.fams.forEach(function (fam) { return _this.fams.set(fam.id, new JsonFamDetails(fam)); });\n    }\n    JsonDataProvider.prototype.getIndi = function (id) {\n        return this.indis.get(id) || null;\n    };\n    JsonDataProvider.prototype.getFam = function (id) {\n        return this.fams.get(id) || null;\n    };\n    return JsonDataProvider;\n}());\nexports.JsonDataProvider = JsonDataProvider;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDateOrRange = exports.formatDate = void 0;\n/** Month in English is used as fallback if a requested translation is not found. */\nvar MONTHS_EN = new Map([\n    [1, 'Jan'],\n    [2, 'Feb'],\n    [3, 'Mar'],\n    [4, 'Apr'],\n    [5, 'May'],\n    [6, 'Jun'],\n    [7, 'Jul'],\n    [8, 'Aug'],\n    [9, 'Sep'],\n    [10, 'Oct'],\n    [11, 'Nov'],\n    [12, 'Dec'],\n]);\n/** Translations of the GEDCOM date qualifiers. */\nvar QUALIFIERS_I18N = new Map([\n    [\n        'cs',\n        new Map([\n            ['cal', 'vypočt.'],\n            ['abt', 'o'],\n            ['est', 'ocenil'],\n            ['before', 'před'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'de',\n        new Map([\n            ['cal', 'errech.'],\n            ['abt', 'etwa'],\n            ['est', 'geschät.'],\n            ['before', 'vor'],\n            ['after', 'nach'],\n        ]),\n    ],\n    [\n        'fr',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'vers'],\n            ['est', 'est.'],\n            ['before', 'avant'],\n            ['after', 'après'],\n        ]),\n    ],\n    [\n        'it',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'circa il'],\n            ['est', 'stim.'],\n            ['before', 'prima del'],\n            ['after', 'dopo del'],\n        ]),\n    ],\n    [\n        'pl',\n        new Map([\n            ['cal', 'wyl.'],\n            ['abt', 'ok.'],\n            ['est', 'szac.'],\n            ['before', 'przed'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'ru',\n        new Map([\n            ['cal', 'выч.'],\n            ['abt', 'ок.'],\n            ['est', 'оцен.'],\n            ['before', 'до'],\n            ['after', 'после'],\n        ]),\n    ],\n]);\nvar shortMonthCache = new Map();\nfunction getShortMonth(month, locale) {\n    if (!Intl || !Intl.DateTimeFormat) {\n        return MONTHS_EN.get(month);\n    }\n    var cacheKey = month + \"|\" + (locale || '');\n    if (shortMonthCache.has(cacheKey)) {\n        return shortMonthCache.get(cacheKey);\n    }\n    var result = new Intl.DateTimeFormat(locale, { month: 'short' }).format(new Date(2000, month - 1));\n    shortMonthCache.set(cacheKey, result);\n    return result;\n}\nfunction getQualifier(qualifier, locale) {\n    var language = locale && locale.split(/[-_]/)[0];\n    var languageMap = language && QUALIFIERS_I18N.get(language);\n    return languageMap ? languageMap.get(qualifier) : qualifier;\n}\n/**\n * Formats the date consisting of day, month and year.\n * All parts of the date are optional.\n */\nfunction formatDateOnly(day, month, year, locale) {\n    if (!day && !month && !year) {\n        return '';\n    }\n    // Fall back to formatting the date manually in case of\n    // - locale not provided\n    // - English (to avoid formatting like 'Oct 11, 2009')\n    // - Lack of i18n support in the browser\n    if (!Intl || !Intl.DateTimeFormat || !locale || locale === 'en') {\n        return [day, month && getShortMonth(month, locale), year].join(' ');\n    }\n    var format = {\n        day: day ? 'numeric' : undefined,\n        month: month ? 'short' : undefined,\n        year: year ? 'numeric' : undefined,\n    };\n    return new Intl.DateTimeFormat(locale, format).format(new Date(year !== null && year !== void 0 ? year : 2000, month ? month - 1 : 1, day !== null && day !== void 0 ? day : 1));\n}\n/** Simple date formatter. */\nfunction formatDate(date, locale) {\n    return [\n        date.qualifier && getQualifier(date.qualifier, locale),\n        formatDateOnly(date.day, date.month, date.year, locale),\n        date.text,\n    ].join(' ');\n}\nexports.formatDate = formatDate;\n/** Formats a DateOrRange object. */\nfunction formatDateOrRange(dateOrRange, locale) {\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, locale);\n    }\n    if (!dateOrRange.dateRange) {\n        return '';\n    }\n    var from = dateOrRange.dateRange.from && formatDate(dateOrRange.dateRange.from);\n    var to = dateOrRange.dateRange.to && formatDate(dateOrRange.dateRange.to);\n    if (from && to) {\n        return from + \" .. \" + to;\n    }\n    if (from) {\n        return getQualifier('after', locale) + \" \" + from;\n    }\n    if (to) {\n        return getQualifier('before', locale) + \" \" + to;\n    }\n    return '';\n}\nexports.formatDateOrRange = formatDateOrRange;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescendantChart = exports.layOutDescendants = exports.DUMMY_ROOT_NODE_ID = void 0;\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar chart_util_1 = require(\"./chart-util\");\nvar id_generator_1 = require(\"./id-generator\");\nexports.DUMMY_ROOT_NODE_ID = 'DUMMY_ROOT_NODE';\nfunction layOutDescendants(options, layoutOptions) {\n    if (layoutOptions === void 0) { layoutOptions = {}; }\n    var descendants = new DescendantChart(options);\n    var descendantsRoot = descendants.createHierarchy();\n    return removeDummyNode(new chart_util_1.ChartUtil(options).layOutChart(descendantsRoot, layoutOptions));\n}\nexports.layOutDescendants = layOutDescendants;\n/** Removes the dummy root node if it was added in createHierarchy(). */\nfunction removeDummyNode(allNodes) {\n    if (allNodes[0].id !== exports.DUMMY_ROOT_NODE_ID) {\n        return allNodes;\n    }\n    var nodes = allNodes.slice(1);\n    // Move first node to (0, 0) coordinates.\n    var dx = -nodes[0].x;\n    var dy = -nodes[0].y;\n    nodes.forEach(function (node) {\n        if (node.parent &&\n            node.parent.id === exports.DUMMY_ROOT_NODE_ID &&\n            !node.data.additionalMarriage) {\n            node.parent = null;\n        }\n        node.x += dx;\n        node.y += dy;\n        node.data.generation--;\n    });\n    return nodes;\n}\n/** Returns the spouse of the given individual in the given family. */\nfunction getSpouse(indiId, fam) {\n    if (fam.getFather() === indiId) {\n        return fam.getMother();\n    }\n    return fam.getFather();\n}\n/** Renders a descendants chart. */\nvar DescendantChart = /** @class */ (function () {\n    function DescendantChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    DescendantChart.prototype.getNodes = function (id) {\n        var _this = this;\n        var indi = this.options.data.getIndi(id);\n        var famIds = indi.getFamiliesAsSpouse();\n        if (!famIds.length) {\n            // Single person.\n            return [\n                {\n                    id: id,\n                    indi: {\n                        id: id,\n                    },\n                },\n            ];\n        }\n        // Marriages.\n        var nodes = famIds.map(function (famId) {\n            var entry = {\n                id: famId,\n                indi: {\n                    id: id,\n                },\n                family: {\n                    id: famId,\n                },\n            };\n            var fam = _this.options.data.getFam(famId);\n            var spouse = getSpouse(id, fam);\n            if (spouse) {\n                entry.spouse = { id: spouse };\n            }\n            return entry;\n        });\n        nodes.slice(1).forEach(function (node) {\n            node.additionalMarriage = true;\n        });\n        return nodes;\n    };\n    DescendantChart.prototype.getFamNode = function (famId) {\n        var node = { id: famId, family: { id: famId } };\n        var fam = this.options.data.getFam(famId);\n        var father = fam.getFather();\n        if (father) {\n            node.indi = { id: father };\n        }\n        var mother = fam.getMother();\n        if (mother) {\n            node.spouse = { id: mother };\n        }\n        return node;\n    };\n    /** Creates a d3 hierarchy from the input data. */\n    DescendantChart.prototype.createHierarchy = function () {\n        var _this = this;\n        var parents = [];\n        var nodes = this.options.startIndi\n            ? this.getNodes(this.options.startIndi)\n            : [this.getFamNode(this.options.startFam)];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        nodes.forEach(function (node) { return (node.id = idGenerator.getId(node.id)); });\n        // If there are multiple root nodes, i.e. the start individual has multiple\n        // marriages, create a dummy root node.\n        // After layout is complete, the dummy node will be removed.\n        if (nodes.length > 1) {\n            var dummyNode_1 = {\n                id: exports.DUMMY_ROOT_NODE_ID,\n                height: 1,\n                width: 1,\n            };\n            parents.push(dummyNode_1);\n            nodes.forEach(function (node) { return (node.parentId = dummyNode_1.id); });\n        }\n        parents.push.apply(parents, nodes);\n        var stack = [];\n        nodes.forEach(function (node) {\n            if (node.family) {\n                stack.push(node);\n            }\n        });\n        var _loop_1 = function () {\n            var entry = stack.pop();\n            var fam = this_1.options.data.getFam(entry.family.id);\n            var children = fam.getChildren();\n            children.forEach(function (childId) {\n                var childNodes = _this.getNodes(childId);\n                childNodes.forEach(function (node) {\n                    node.parentId = entry.id;\n                    if (node.family) {\n                        node.id = \"\" + idGenerator.getId(node.family.id);\n                        stack.push(node);\n                    }\n                });\n                parents.push.apply(parents, childNodes);\n            });\n        };\n        var this_1 = this;\n        while (stack.length) {\n            _loop_1();\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    DescendantChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = removeDummyNode(this.util.layOutChart(root));\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return DescendantChart;\n}());\nexports.DescendantChart = DescendantChart;\n","var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\n\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"array-flat-polyfill\");\n__exportStar(require(\"./ancestor-chart\"), exports);\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./chart-util\"), exports);\n__exportStar(require(\"./composite-renderer\"), exports);\n__exportStar(require(\"./data\"), exports);\n__exportStar(require(\"./date-format\"), exports);\n__exportStar(require(\"./descendant-chart\"), exports);\n__exportStar(require(\"./detailed-renderer\"), exports);\n__exportStar(require(\"./gedcom\"), exports);\n__exportStar(require(\"./hourglass-chart\"), exports);\n__exportStar(require(\"./simple-api\"), exports);\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChartColors = void 0;\nlet ChartColors;\n(function (ChartColors) {\n    ChartColors[ChartColors[\"NO_COLOR\"] = 0] = \"NO_COLOR\";\n    ChartColors[ChartColors[\"COLOR_BY_GENERATION\"] = 1] = \"COLOR_BY_GENERATION\";\n    ChartColors[ChartColors[\"COLOR_BY_SEX\"] = 2] = \"COLOR_BY_SEX\";\n    ChartColors[ChartColors[\"COLOR_BY_ETHNICITY\"] = 3] = \"COLOR_BY_ETHNICITY\";\n    ChartColors[ChartColors[\"COLOR_BY_NR_LANGUAGES\"] = 4] = \"COLOR_BY_NR_LANGUAGES\";\n    ChartColors[ChartColors[\"COLOR_BY_LANGUAGE\"] = 5] = \"COLOR_BY_LANGUAGE\";\n})\n// eslint-disable-next-line\n(ChartColors = exports.ChartColors || (exports.ChartColors = {}));\n","var __extends = (this && this.__extends) || (function () {\n    let extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({__proto__: []} instanceof Array && function (d, b) {\n                d.__proto__ = b;\n            }) ||\n            function (d, b) {\n                for (const p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n            };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        if (b === null) {\n            d.prototype = Object.create(b);\n        } else {\n            __.prototype = b.prototype;  // Set the prototype of __ to b's prototype\n            d.prototype = new __();      // Create a new instance of __ to set as d's prototype\n        }\n    };\n})();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedRenderer = exports.getLength = void 0;\n\nconst d3_selection_1 = require(\"d3-selection\");\nconst _1 = require(\"./index\");\nconst date_format_1 = require(\"./date-format\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\nconst composite_renderer_1 = require(\"./composite-renderer\");\nconst INDI_MIN_HEIGHT = 44;\nconst INDI_MIN_WIDTH = 64;\nconst FAM_MIN_HEIGHT = 10;\nconst FAM_MIN_WIDTH = 15;\nconst IMAGE_WIDTH = 70;\n\n/** Minimum box height when an image is present. */\nconst IMAGE_HEIGHT = 90;\nconst ETHNICITY_HEIGHT = 17;\nconst LANGUAGES_HEIGHT = 17;\nconst DETAILS_HEIGHT = 17;\nconst ANIMATION_DELAY_MS = 200;\nconst ANIMATION_DURATION_MS = 500;\nconst textLengthCache = new Map();\n\n/** Calculates the length of the given text in pixels when rendered. */\nfunction getLength(text, textClass) {\n    const cacheKey = text + \"|\" + textClass;\n    if (textLengthCache.has(cacheKey)) {\n        return textLengthCache.get(cacheKey);\n    }\n    const g = d3_selection_1.select('svg').append('g').attr('class', 'detailed node');\n    const x = g.append('text').attr('class', textClass).text(text);\n    const length = x.node().getComputedTextLength();\n    g.remove();\n    textLengthCache.set(cacheKey, length);\n    return length;\n}\nexports.getLength = getLength;\n\nconst SEX_SYMBOLS = new Map([\n    ['F', '\\u2640'],\n    ['M', '\\u2642'],\n]);\n\n/**\n * Renders some details about a person such as date and place of birth\n * and death.\n */\nvar DetailedRenderer = /** @class */ (function (_super) {\n    __extends(DetailedRenderer, _super);\n\n    function DetailedRenderer(options) {\n        var _this = _super.call(this, options) || this;\n        _this.options = options;\n        return _this;\n    }\n\n    DetailedRenderer.prototype.getColoringClass = function () {\n        switch (this.options.colors) {\n            case _1.ChartColors.NO_COLOR:\n                return 'nocolor';\n            case _1.ChartColors.COLOR_BY_GENERATION:\n                return 'bygeneration';\n            case _1.ChartColors.COLOR_BY_SEX:\n                return 'bysex';\n            case _1.ChartColors.COLOR_BY_ETHNICITY:\n                return 'byethnicity';\n            case _1.ChartColors.COLOR_BY_NR_LANGUAGES:\n                return 'bylanguages';\n            case _1.ChartColors.COLOR_BY_LANGUAGE:\n                return 'bylanguages';\n            default:\n                return 'bygeneration';\n        }\n    };\n\n    /** Extracts lines of details for a person. */\n    DetailedRenderer.prototype.getIndiDetails = function (indi) {\n        const detailsList = [];\n        const birthDate = indi.getBirthDate() && date_format_1.formatDateOrRange(indi.getBirthDate(), this.options.locale);\n        const birthPlace = indi.getBirthPlace();\n        const deathDate = indi.getDeathDate() && date_format_1.formatDateOrRange(indi.getDeathDate(), this.options.locale);\n        const deathPlace = indi.getDeathPlace();\n        if (birthDate) {\n            detailsList.push({ symbol: '', text: birthDate });\n        }\n        if (birthPlace) {\n            detailsList.push({ symbol: '', text: birthPlace });\n        }\n        if (birthDate || birthPlace) {\n            detailsList[0].symbol = '*';\n        }\n        const listIndex = detailsList.length;\n        if (deathDate) {\n            detailsList.push({ symbol: '', text: deathDate });\n        }\n        if (deathPlace) {\n            detailsList.push({ symbol: '', text: deathPlace });\n        }\n        if (deathDate || deathPlace) {\n            detailsList[listIndex].symbol = '+';\n        }\n        else if (indi.isConfirmedDeath()) {\n            detailsList.push({ symbol: '+', text: '' });\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredIndiSize = function (id) {\n        // Height\n        const indi = this.options.data.getIndi(id);\n        const details = this.getIndiDetails(indi);\n        const ethnicityHeight = indi.showEthnicity() && indi.getEthnicity() != null ? ETHNICITY_HEIGHT : 0;\n        const languagesHeight = indi.showLanguages() && indi.getLanguages().length > 0 ? LANGUAGES_HEIGHT : 0;\n        const idAndSexHeight = indi.showId() || indi.showSex() ? DETAILS_HEIGHT : 0;\n        const height = d3_array_1.max([\n            INDI_MIN_HEIGHT + languagesHeight + ethnicityHeight + (details.length * DETAILS_HEIGHT) + idAndSexHeight,\n            indi.getImageUrl() ? IMAGE_HEIGHT : 0,\n        ]);\n        // Width\n        const maxDetailsWidth = d3_array_1.max(details.map(detail => getLength(detail.text, 'details')));\n        const width = d3_array_1.max([\n            maxDetailsWidth + 22,\n            getLength(indi.getFirstName() || '', 'name') + 8,\n            getLength(indi.getLastName() || '', 'name') + 8,\n            indi.showLanguages() && indi.getLanguages().length > 0 ? (getLength(indi.getLanguagesLabel(), 'languages') + 28) : 0,\n            indi.showEthnicity() && indi.getEthnicity() != null ? (getLength(indi.getEthnicity(), 'ethnicity') + 28) : 0,\n            getLength(id, 'id') + 32,\n            INDI_MIN_WIDTH,\n        ]) + (indi.getImageUrl() ? IMAGE_WIDTH : 0);\n        return [width, height];\n    };\n\n    /** Extracts lines of details for a family. */\n    DetailedRenderer.prototype.getFamDetails = function (fam) {\n        const detailsList = [];\n        const marriageDate = fam.getMarriageDate() &&\n            date_format_1.formatDateOrRange(fam.getMarriageDate(), this.options.locale);\n        const marriagePlace = fam.getMarriagePlace();\n        if (marriageDate) {\n            detailsList.push({ symbol: '', text: marriageDate });\n        }\n        if (marriagePlace) {\n            detailsList.push({ symbol: '', text: marriagePlace });\n        }\n        if (marriageDate || marriagePlace) {\n            detailsList[0].symbol = '\\u26AD';\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredFamSize = function (id) {\n        const fam = this.options.data.getFam(id);\n        const details = this.getFamDetails(fam);\n        const height = d3_array_1.max([10 + details.length * DETAILS_HEIGHT, FAM_MIN_HEIGHT]);\n        const maxDetailsWidth = d3_array_1.max(details.map(function (x) { return getLength(x.text, 'details'); }));\n        const width = d3_array_1.max([maxDetailsWidth + 22, FAM_MIN_WIDTH]);\n        return [width, height];\n    };\n\n    DetailedRenderer.prototype.render = function (enter, update) {\n        const _this = this;\n        enter = enter.append('g').attr('class', 'detailed');\n        update = update.select('g');\n        const indiUpdate = enter\n            .merge(update)\n            .selectAll('g.indi')\n            .data(function (node) {\n                const result = [];\n                const famXOffset = !_this.options.horizontal && node.data.family\n                ? d3_array_1.max([-composite_renderer_1.getFamPositionVertical(node.data), 0])\n                : 0;\n                const famYOffset = _this.options.horizontal && node.data.family\n                ? d3_array_1.max([-composite_renderer_1.getFamPositionHorizontal(node.data), 0])\n                : 0;\n            if (node.data.indi) {\n                result.push({\n                    indi: node.data.indi,\n                    generation: node.data.generation,\n                    xOffset: famXOffset,\n                    yOffset: 0,\n                });\n            }\n            if (node.data.spouse) {\n                result.push({\n                    indi: node.data.spouse,\n                    generation: node.data.generation,\n                    xOffset: !_this.options.horizontal && node.data.indi\n                        ? node.data.indi.width + famXOffset\n                        : 0,\n                    yOffset: _this.options.horizontal && node.data.indi\n                        ? node.data.indi.height + famYOffset\n                        : 0,\n                });\n            }\n            return result;\n        }, function (data) { return data.indi.id; });\n        const indiEnter = indiUpdate\n            .enter()\n            .append('g')\n            .attr('class', 'indi');\n        this.transition(indiEnter.merge(indiUpdate)).attr('transform', function (node) { return \"translate(\" + node.xOffset + \", \" + node.yOffset + \")\"; });\n        this.renderIndi(indiEnter, indiUpdate);\n        const familyEnter = enter\n            .select(function (node) {\n            return node.data.family ? this : null;\n        }).append('g').attr('class', 'family');\n        const familyUpdate = update\n            .select(function (node) {\n            return node.data.family ? this : null;\n        }).select('g.family');\n        this.transition(familyEnter.merge(familyUpdate)).attr('transform', function (node) {\n            return _this.getFamTransform(node.data);\n        });\n        this.renderFamily(familyEnter);\n    };\n\n    DetailedRenderer.prototype.getCss = function () {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', './styles/detailed-renderer.css', false);\n        try {\n            xhr.send();\n            if (xhr.status === 200) {\n                const cssCode = xhr.responseText\n                return cssCode;\n            } else {\n                throw new Error('Failed to load CSS file:' + xhr.statusText);\n            }\n        } catch (error) {\n            console.error('Error occurred while loading CSS:', error);\n            return null;\n        }\n    };\n\n    DetailedRenderer.prototype.transition = function (selection) {\n        return this.options.animate\n            ? selection\n                .transition()\n                .delay(ANIMATION_DELAY_MS)\n                .duration(ANIMATION_DURATION_MS)\n            : selection;\n    };\n\n    DetailedRenderer.prototype.getFamTransform = function (node) {\n        if (this.options.horizontal) {\n            return \"translate(\" + ((node.indi && node.indi.width) || node.spouse.width) + \", \" + d3_array_1.max([composite_renderer_1.getFamPositionHorizontal(node), 0]) + \")\";\n        }\n        return \"translate(\" + d3_array_1.max([composite_renderer_1.getFamPositionVertical(node), 0]) + \", \" + ((node.indi && node.indi.height) || node.spouse.height) + \")\";\n    };\n\n    DetailedRenderer.prototype.getSexClass = function (indiId) {\n        let _a;\n        const sex = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getSex();\n        switch (sex) {\n            case 'M':\n                return 'male';\n            case 'F':\n                return 'female';\n            default:\n                break;\n        }\n    };\n\n    const ethnicityCss = new Map();\n    DetailedRenderer.prototype.getEthnicityClass = function (indiId) {\n        if (ethnicityCss.size === 0) {\n            this.buildEthnicityMap()\n        }\n        let _a;\n        const ethnicity = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getEthnicity();\n        if (ethnicity) {\n            return ethnicityCss.get(ethnicity);\n        }\n        return ''  // Blank if no ethnicity\n    };\n\n    DetailedRenderer.prototype.buildEthnicityMap = function () {\n        try {\n            // Assign the ethnicity of the ego as eth0\n            if (!ethnicityCss.has(\"eth0\")) {\n                const egoEthnicity = Array.from(this.options.data.indis?.values() || []).find(indi => indi.isEgo())?.json.ethnicity\n                if (egoEthnicity) {\n                    ethnicityCss.set(egoEthnicity, \"ego\")\n                }\n            }\n            ethnicityCss.set(\"Blanco\", \"blanco\")\n            ethnicityCss.set(\"Afroamerican\", \"afroamerican\")\n            // Assign the ethnicities of the the rest individuals\n            Array.from(this.options.data.indis?.values() || [])\n                .filter(indi => indi.getEthnicity() != null)\n                .forEach(indi => {\n                    const ethnicity = indi.getEthnicity()\n                    if (!ethnicityCss.has(ethnicity)) {\n                        ethnicityCss.set(ethnicity, \"eth\" + ethnicityCss.size)\n                    }\n                    if (ethnicityCss.size > 14) {\n                        throw new Error('No CSS for more than 14 different ethnicities')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    DetailedRenderer.prototype.getLanguagesClass = function (indiId, selectedLanguageId) {\n        let _a;\n        const languages = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getLanguages();\n        if (selectedLanguageId != null) {\n            // By specific language\n            const hasSelectedLanguage = languages.some(language => language.id === selectedLanguageId);\n            if (hasSelectedLanguage) {\n                return \"l\" + selectedLanguageId;\n            }\n        } else {\n            // By nr. languages\n            return languages.length > 0 ? 'n' + Math.min(languages.length, 7) : '';\n        }\n        return '' // Blank if no language\n    }\n\n    DetailedRenderer.prototype.resetCss = function () {\n        ethnicityCss.clear()\n        console.log('Cleared CSS maps')\n    }\n\n    DetailedRenderer.prototype.renderIndi = function (enter, update) {\n        const _this = this;\n\n        if (this.options.indiHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr('href', function (data) { return _this.options.indiHrefFunc(data.indi.id); });\n            update = update.select('a');\n        }\n\n        if (this.options.indiCallback) {\n            enter.on('click', function (event, data) {\n                return _this.options.indiCallback({\n                    id: data.indi.id,\n                    generation: data.generation,\n                });\n            });\n        }\n\n        // Background\n        const background = enter\n            .append('rect')\n            .attr('rx', 5)\n            .attr('stroke-width', 0)\n            .attr('class', function (node) {\n                return \"background \"\n                    +_this.getColoringClass() + \" \"\n                    + _this.getSexClass(node.indi.id) + \" \"\n                    + _this.getEthnicityClass(node.indi.id) + \" \"\n                    + _this.getLanguagesClass(node.indi.id, _this.options.selectedLanguage) + \" \";\n            })\n            .merge(update.select('rect.background'));\n        this.transition(background)\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n\n        // Clip path\n        const getClipId = function (id) {\n            return \"clip-\" + id;\n        };\n        enter\n            .append('clipPath')\n            .attr('id', function (node) { return getClipId(node.indi.id); })\n            .append('rect')\n            .attr('rx', 5)\n            .merge(update.select('clipPath rect'))\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n        const getIndi = function (data) {\n            return _this.options.data.getIndi(data.indi.id);\n        };\n        const getDetailsWidth = function (data) {\n            return data.indi.width - (getIndi(data).getImageUrl() ? IMAGE_WIDTH : 0);\n        };\n\n        // Name\n        enter\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'name')\n            .attr('transform', function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 17)\"; })\n            .text(function (node) { return getIndi(node).getFirstName(); });\n        enter\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'name')\n            .attr('transform', function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 33)\"; })\n            .text(function (node) { return getIndi(node).getLastName(); })\n\n        // Languages\n        const languages = enter\n            .filter(function (node) {\n                return getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0\n            })\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'languages')\n            .text(function (node) {\n                return getIndi(node).getLanguagesLabel()\n            });\n        this.transition(languages).attr('transform', function (node) {\n            // if the indi does not have languages to show, the height start does not apply\n            const languages_height_start =  getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0 ? 52 : null\n            return \"translate(\" + getDetailsWidth(node) / 2 + \", \" + languages_height_start + \")\";\n        });\n\n        // Ethnicity\n        const ethnicity = enter\n            .filter(function (node) {\n                return getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null\n            })\n            .append('text')\n            .attr('class', 'ethnicity')\n            .text(function (node) {\n                return '¤ ' + getIndi(node).getEthnicity()\n            });\n        this.transition(ethnicity).attr('transform', function (node) {\n            let ethnicity_height_start =  null\n            if (getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) {\n                ethnicity_height_start = 71\n            } else if (getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) {\n                ethnicity_height_start = 55\n            }\n            return \"translate(5, \" + ethnicity_height_start + \")\";\n        });\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const indi = getIndi(node);\n            const detailsList = _this.getIndiDetails(indi);\n            details.set(node.indi.id, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        function details_height_start(node) {\n            return 55\n                + ((getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) ? LANGUAGES_HEIGHT : 0)\n                + ((getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) ? ETHNICITY_HEIGHT : 0)\n        }\n\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.indi.id).length > i;\n            });\n\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'middle')\n                .attr('class', 'details')\n                .attr('transform', function (node) {\n                    return \"translate(9, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].symbol;\n                });\n            lineGroup\n                .append('text')\n                .attr('class', 'details')\n                .attr('transform', function (node) {\n                    return \"translate(15, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n\n        // Render id\n        const id = enter\n            .append('text')\n            .attr('class', 'id')\n            .text(function (node) {\n                return (getIndi(node).showId() ? node.indi.id : '');\n            })\n            .merge(update.select('text.id'));\n        this.transition(id).attr('transform', function (node) { return \"translate(9, \" + (node.indi.height - 5) + \")\"; });\n\n        // Render sex\n        const sex = enter\n            .append('text')\n            .attr('class', 'details sex')\n            .attr('text-anchor', 'end')\n            .text(function (node) {\n                const sexSymbol = SEX_SYMBOLS.get(getIndi(node).getSex() || '') || '';\n                return getIndi(node).showSex() ? sexSymbol : '';\n            })\n            .merge(update.select('text.sex'));\n        this.transition(sex).attr('transform', function (node) {\n            return \"translate(\" + (getDetailsWidth(node) - 5) + \", \" + (node.indi.height - 5) + \")\";\n        });\n\n        // Image\n        enter.filter(function (node) { return !!getIndi(node).getImageUrl(); })\n            .append('image')\n            .attr('width', IMAGE_WIDTH)\n            .attr('height', function (node) { return node.indi.height; })\n            .attr('preserveAspectRatio', 'xMidYMin')\n            .attr('transform', function (node) { return \"translate(\" + (node.indi.width - IMAGE_WIDTH) + \", 0)\"; })\n            .attr('clip-path', function (node) { return \"url(#\" + getClipId(node.indi.id) + \")\"; })\n            .attr('href', function (node) { return getIndi(node).getImageUrl(); });\n\n        // Border on top\n        const border = enter\n            .append('rect')\n            .attr('rx', 5)\n            .attr('fill-opacity', 0)\n            .attr('class', 'border')\n            .merge(update.select('rect.border'));\n        this.transition(border)\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n    };\n\n    DetailedRenderer.prototype.renderFamily = function (enter) {\n        const _this = this;\n\n        if (this.options.famHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr('href', function (node) {\n                return _this.options.famHrefFunc(node.data.family.id);\n            });\n        }\n\n        if (this.options.famCallback) {\n            enter.on('click', function (event, node) {\n                return _this.options.famCallback({\n                    id: node.data.family.id,\n                    generation: node.data.generation,\n                });\n            });\n        }\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const famId = node.data.family.id;\n            const fam = _this.options.data.getFam(famId);\n            const detailsList = _this.getFamDetails(fam);\n            details.set(famId, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        // Box\n        enter.filter(function (node) {\n                const detail = details.get(node.data.family.id);\n                return 0 < detail.length;\n        }).append('rect')\n        .attr('class', this.getColoringClass())\n        .attr('rx', 5)\n        .attr('ry', 5)\n        .attr('width', function (node) { return node.data.family.width; })\n        .attr('height', function (node) { return node.data.family.height; });\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.data.family.id).length > i;\n            });\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'middle')\n                .attr('class', 'details')\n                .attr('transform', \"translate(9, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].symbol;\n                });\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'start')\n                .attr('class', 'details')\n                .attr('transform', \"translate(15, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n    };\n\n    return DetailedRenderer;\n}(composite_renderer_1.CompositeRenderer));\nexports.DetailedRenderer = DetailedRenderer;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.gedcomEntriesToJson = exports.gedcomToJson = exports.getDate = void 0;\nconst parse_gedcom_1 = require(\"parse-gedcom\");\n\n/** Returns the first entry with the given tag or undefined if not found. */\nfunction findTag(tree, tag) {\n    return tree.find(function (entry) { return entry.tag === tag; });\n}\n\n/** Returns all entries with the given tag. */\nfunction findTags(tree, tag) {\n    return tree.filter(function (entry) { return entry.tag === tag; });\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer) {\n    return pointer.substring(1, pointer.length - 1);\n}\n\n/** Extracts the first and last name from a GEDCOM name field. */\nfunction extractName(name) {\n    const arr = name.split('/');\n    if (arr.length === 1) {\n        return { firstName: arr[0].trim() };\n    }\n    return { firstName: arr[0].trim(), lastName: arr[1].trim() };\n}\n\n/** Maps month abbreviations used in GEDCOM to month numbers. */\nconst MONTHS = new Map([\n    ['jan', 1],\n    ['feb', 2],\n    ['mar', 3],\n    ['apr', 4],\n    ['may', 5],\n    ['jun', 6],\n    ['jul', 7],\n    ['aug', 8],\n    ['sep', 9],\n    ['oct', 10],\n    ['nov', 11],\n    ['dec', 12],\n]);\n\n/** Parses the GEDCOM date into the Date structure. */\nfunction parseDate(parts) {\n    let lastPart;\n    if (!parts || !parts.length) {\n        return undefined;\n    }\n    const result = {};\n    // Remove parentheses if they surround the text\n    if (parts[0].startsWith('(') && parts[parts.length - 1].endsWith(')')) {\n        parts[0] = parts[0].substring(1);\n        lastPart = parts[parts.length - 1];\n        parts[parts.length - 1] = lastPart.substring(0, lastPart.length - 1);\n    }\n    const fullText = parts.join(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart === 'cal' || firstPart === 'abt' || firstPart === 'est') {\n        result.qualifier = firstPart;\n        parts = parts.slice(1);\n    }\n    if (parts.length && parts[parts.length - 1].match(/^\\d{1,4}$/)) {\n        result.year = Number(parts[parts.length - 1]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        lastPart = parts[parts.length - 1].toLowerCase();\n        if (MONTHS.has(lastPart)) {\n            result.month = MONTHS.get(lastPart);\n            parts = parts.slice(0, parts.length - 1);\n        }\n    }\n    if (parts.length && parts[0].match(/^\\d\\d?$/)) {\n        result.day = Number(parts[0]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        // A part didn't get parsed. Return the whole text verbatim.\n        return { text: fullText };\n    }\n    return result;\n}\n\n/** Parses a GEDCOM date or date range. */\nfunction getDate(gedcomDate) {\n    const parts = gedcomDate.replace(/@.*@/, '').trim().split(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart.startsWith('bet')) {\n        const i = parts.findIndex(function (x) {\n            return x.toLowerCase() === 'and';\n        });\n        const from = parseDate(parts.slice(1, i));\n        const to = parseDate(parts.slice(i + 1));\n        return { dateRange: { from: from, to: to } };\n    }\n    if (firstPart.startsWith('bef') || firstPart.startsWith('aft')) {\n        const date_1 = parseDate(parts.slice(1));\n        if (firstPart.startsWith('bef')) {\n            return { dateRange: { to: date_1 } };\n        }\n        return { dateRange: { from: date_1 } };\n    }\n    const date = parseDate(parts);\n    if (date) {\n        return { date: date };\n    }\n    return undefined;\n}\nexports.getDate = getDate;\n\n/**\n * Tries to treat an input tag as NOTE and parse all lines of notes\n */\nfunction createNotes(notesTag) {\n    if (!notesTag || notesTag.tag !== 'NOTE')\n        return undefined;\n    return findTags(notesTag.tree, 'CONT')\n        .filter(function (x) { return x.data; })\n        .reduce(function (a, i) { return a.concat(i.data); }, [notesTag.data]);\n}\n\n/**\n * Creates a JsonEvent object from a GEDCOM entry.\n * Used for BIRT, DEAT and MARR tags.\n */\nfunction createEvent(entry) {\n    if (!entry) {\n        return undefined;\n    }\n    const typeTag = findTag(entry.tree, 'TYPE');\n    const dateTag = findTag(entry.tree, 'DATE');\n    const placeTag = findTag(entry.tree, 'PLAC');\n    const date = dateTag && dateTag.data && getDate(dateTag.data);\n    const place = placeTag && placeTag.data;\n    if (date || place) {\n        const result = date || {};\n        if (place) {\n            result.place = place;\n        }\n        result.confirmed = true;\n        result.type = typeTag ? typeTag.data : undefined;\n        result.notes = createNotes(findTag(entry.tree, 'NOTE'));\n        return result;\n    }\n    if (entry.data && entry.data.toLowerCase() === 'y') {\n        return { confirmed: true };\n    }\n    return undefined;\n}\n\n/** Creates a JsonIndi object from an INDI entry in GEDCOM. */\nfunction createIndi(entry, objects, ego, allLanguages) {\n    let firstName;\n    let lastName;\n    const id = pointerToId(entry.pointer);\n    const fams = findTags(entry.tree, 'FAMS').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const indi = {id: id, fams: fams};\n\n    // is Ego?\n    if (ego) {\n        indi.isEgo = pointerToId(ego.pointer) === id\n    }\n\n    // Name\n    const nameTags = findTags(entry.tree, 'NAME');\n    const isMaiden = function (nameTag) {\n        const type = findTag(nameTag.tree, 'TYPE');\n        return type !== undefined && type.data === 'maiden';\n    };\n    const main = nameTags.find(function (x) {\n        return !isMaiden(x);\n    });\n    const maiden = nameTags.find(isMaiden);\n    if (main) {\n        const _a = extractName(main.data);\n        firstName = _a.firstName;\n        lastName = _a.lastName;\n        if (firstName) {\n            indi.firstName = firstName;\n        }\n        if (lastName) {\n            indi.lastName = lastName;\n        }\n    }\n    if (maiden) {\n        let _b = extractName(maiden.data);\n        firstName = _b.firstName;\n        lastName = _b.lastName;\n        if (lastName) {\n            indi.maidenName = lastName;\n        }\n        if (firstName && !indi.firstName) {\n            indi.firstName = firstName;\n        }\n    }\n    // Number of children\n    const nchiTag = findTag(entry.tree, 'NCHI');\n    if (nchiTag) {\n        indi.numberOfChildren = +nchiTag.data;\n    }\n    // Number of marriages\n    const nmrTag = findTag(entry.tree, 'NMR');\n    if (nmrTag) {\n        indi.numberOfMarriages = +nmrTag.data;\n    }\n    // Sex\n    const sexTag = findTag(entry.tree, 'SEX');\n    if (sexTag) {\n        indi.sex = sexTag.data;\n    }\n    // Languages\n    const languageTags = findTags(entry.tree, 'LANG')\n    if (languageTags) {\n        const gedcomLanguages = findTags(entry.tree, 'LANG').map(lang => lang.data)\n        indi.languages = allLanguages.filter(l => gedcomLanguages.includes(l.name));\n    }\n    // Ethnicity\n    const ethnicityTag = findTag(entry.tree, '_ETHN');\n    if (ethnicityTag) {\n        indi.ethnicity = ethnicityTag.data;\n    }\n    // Tribe\n    const tribeTag = findTag(entry.tree, '_TRIB');\n    if (tribeTag) {\n        indi.tribe = tribeTag.data;\n    }\n    // Family with parents\n    const famcTag = findTag(entry.tree, 'FAMC');\n    if (famcTag) {\n        indi.famc = pointerToId(famcTag.data);\n    }\n    // Image URL\n    const objeTags = findTags(entry.tree, 'OBJE');\n    if (objeTags.length > 0) {\n        // Dereference OBJECT if needed\n        const getFileTag = function (tag) {\n            const realObjeTag = tag.data ? objects.get(pointerToId(tag.data)) : tag;\n            if (!realObjeTag)\n                return undefined;\n            const file = findTag(realObjeTag.tree, 'FILE');\n            const title = findTag(realObjeTag.tree, 'TITL');\n            if (!file)\n                return undefined;\n            return {\n                url: file.data,\n                title: title && title.data,\n            };\n        };\n        indi.images = objeTags\n            .map(getFileTag)\n            .filter(function (x) { return x !== undefined; });\n    }\n    // Birthdate and place\n    const birth = createEvent(findTag(entry.tree, 'BIRT'));\n    if (birth) {\n        indi.birth = birth;\n    }\n    // Death date and place\n    const death = createEvent(findTag(entry.tree, 'DEAT'));\n    if (death) {\n        indi.death = death;\n    }\n    // Notes\n    indi.notes = createNotes(findTag(entry.tree, 'NOTE'));\n    // Events\n    indi.events = findTags(entry.tree, 'EVEN')\n        .map(createEvent)\n        .filter(function (x) { return x !== null; });\n    return indi;\n}\n\n/** Creates a JsonFam object from an FAM entry in GEDCOM. */\nfunction createFam(entry) {\n    const id = pointerToId(entry.pointer);\n    const children = findTags(entry.tree, 'CHIL').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const fam = {id: id, children: children};\n    // Husband.\n    const husbTag = findTag(entry.tree, 'HUSB');\n    if (husbTag) {\n        fam.husb = pointerToId(husbTag.data);\n    }\n    // Wife.\n    const wifeTag = findTag(entry.tree, 'WIFE');\n    if (wifeTag) {\n        fam.wife = pointerToId(wifeTag.data);\n    }\n    // Marriage\n    const marriage = createEvent(findTag(entry.tree, 'MARR'));\n    if (marriage) {\n        fam.marriage = marriage;\n    }\n    return fam;\n}\n\n/** Creates a map from ID to entry from an array of entries. */\nfunction createMap(entries) {\n    return new Map(entries.map(function (entry) { return [pointerToId(entry.pointer), entry]; }));\n}\n\n/** Parses a GEDCOM file into a JsonGedcomData structure. */\nfunction gedcomToJson(gedcomContents, allLanguages) {\n    return gedcomEntriesToJson(parse_gedcom_1.parse(gedcomContents, allLanguages));\n}\nexports.gedcomToJson = gedcomToJson;\n\n/** Converts parsed GEDCOM entries into a JsonGedcomData structure. */\nfunction gedcomEntriesToJson(gedcom, allLanguages) {\n    const objects = createMap(findTags(gedcom, 'OBJE'));\n    const ego = findTags(gedcom, 'EGO')\n    const indis = findTags(gedcom, 'INDI').map(function (entry) {\n        return createIndi(entry, objects, ego.length > 0 ? ego[0] : undefined, allLanguages);\n    });\n    const fams = findTags(gedcom, 'FAM').map(createFam);\n    return { indis: indis, fams: fams };\n}\nexports.gedcomEntriesToJson = gedcomEntriesToJson;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.HourglassChart = void 0;\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar chart_util_1 = require(\"./chart-util\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\n/**\n * Renders an hourglass chart. It consists of an ancestor chart and\n * a descendant chart for a family.\n */\nvar HourglassChart = /** @class */ (function () {\n    function HourglassChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    HourglassChart.prototype.render = function () {\n        const ancestorsRoot = ancestor_chart_1.getAncestorsTree(this.options);\n        const ancestorNodes = this.util.layOutChart(ancestorsRoot, {\n            flipVertically: true,\n        });\n        const descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // slice(1) removes the duplicated start node.\n        const nodes = ancestorNodes.slice(1).concat(descendantNodes);\n        const animationPromise = this.util.renderChart(nodes);\n        const info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return HourglassChart;\n}());\nexports.HourglassChart = HourglassChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChart = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst data_1 = require(\"./data\");\nconst DEFAULT_SVG_SELECTOR = 'svg';\n\nfunction createChartOptions(chartOptions, renderOptions, options) {\n    const data = new data_1.JsonDataProvider(chartOptions.json);\n    const indiHrefFunc = chartOptions.indiUrl ? function (id) {\n            return chartOptions.indiUrl.replace(`${id}`, id);\n        } : undefined;\n    const famHrefFunc = chartOptions.famUrl ? function (id) {\n            return chartOptions.famUrl.replace(`${id}`, id);\n        } : undefined;\n    // If startIndi nor startFam is provided, select the first indi in the data.\n    if (!renderOptions.startIndi && !renderOptions.startFam) {\n        renderOptions.startIndi = chartOptions.json.indis[0].id;\n    }\n    const animate = !options.initialRender && chartOptions.animate;\n    return {\n        data: data,\n        renderer: new chartOptions.renderer({\n            data: data,\n            indiHrefFunc: indiHrefFunc,\n            famHrefFunc: famHrefFunc,\n            indiCallback: chartOptions.indiCallback,\n            famCallback: chartOptions.famCallback,\n            horizontal: chartOptions.horizontal,\n            colors: chartOptions.colors,\n            selectedLanguage: chartOptions.selectedLanguage,\n            animate: animate,\n            locale: chartOptions.locale,\n        }),\n        startIndi: renderOptions.startIndi,\n        startFam: renderOptions.startFam,\n        svgSelector: chartOptions.svgSelector || DEFAULT_SVG_SELECTOR,\n        horizontal: chartOptions.horizontal,\n        baseGeneration: renderOptions.baseGeneration,\n        animate: animate,\n    };\n}\n\nconst SimpleChartHandle = /** @class */ (function () {\n\n    function SimpleChartHandle(options) {\n        this.options = options;\n        this.initialRender = true;\n    }\n\n    SimpleChartHandle.prototype.render = function (renderOptions) {\n        if (renderOptions === void 0) {\n            renderOptions = {};\n        }\n        const chartOptions = createChartOptions(this.options, renderOptions, {\n            initialRender: this.initialRender\n        });\n        // Reset CSS maps\n        if (this.initialRender) {\n            chartOptions.renderer.resetCss();\n        }\n        this.initialRender = false;\n        const chart = new this.options.chartType(chartOptions);\n        const info = chart.render();\n        if (this.options.updateSvgSize !== false) {\n            d3_selection_1.select(chartOptions.svgSelector)\n                .attr('width', info.size[0])\n                .attr('height', info.size[1]);\n        }\n        return info;\n    };\n    /**\n     * Updates the chart input data.\n     * This is useful when the data is dynamically loaded and a different subset\n     * of data will be displayed.\n     */\n    SimpleChartHandle.prototype.setData = function (json) {\n        this.options.json = json;\n    };\n    return SimpleChartHandle;\n}());\n\nfunction createChart(options) {\n    return new SimpleChartHandle(options);\n}\nexports.createChart = createChart;\n","import {IndiInfo} from '../lib/topola';\nimport {TopolaData} from '../util/gedcom_util';\nimport {Language} from \"../languages/languages-loader\";\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n    UPLOADED,\n    GEDCOM_URL,\n    EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n    spec: SourceSpecT;\n    selection?: IndiInfo;\n    allLanguages?: Language[];\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n    /**\n     * Returns true if the application is now loading a completely new data set\n     * and the existing one should be wiped.\n     */\n    isNewData(\n        newSource: SourceSelection<SourceSpecT>,\n        oldSource: SourceSelection<SourceSpecT>,\n        data?: TopolaData,\n    ): boolean;\n\n    /** Loads data from the data source. */\n    loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n    ['ADOP', 'Adoption'],\n    ['BAPM', 'Baptism'],\n    ['BIRT', 'Birth'],\n    ['BURI', 'Burial'],\n    ['CENS', 'Census'],\n    ['CHR', 'Christening'],\n    ['CREM', 'Cremation'],\n    ['DEAT', 'Death'],\n    ['EDUC', 'Education'],\n    ['EMAIL', 'E-mail'],\n    ['EMIG', 'Emigration'],\n    ['EVEN', 'Event'],\n    ['FACT', 'Fact'],\n    ['IMMI', 'Immigration'],\n    ['MARR', 'Marriage'],\n    ['MARS', 'Marriage settlement'],\n    ['ETHN', 'Ethnic'],\n    ['TRIB', 'Clan'],\n    ['LANG', 'Language'],\n    ['DIV', 'Divorce'],\n    ['MILT', 'Military services'],\n    ['NATU', 'Naturalization'],\n    ['OCCU', 'Occupation'],\n    ['TITL', 'Title'],\n    ['WWW', 'WWW'],\n    ['birth', 'Birth name'],\n    ['married', 'Married name'],\n    ['maiden', 'Maiden name'],\n    ['immigrant', 'Immigrant name'],\n    ['aka', 'Also known as'],\n]);\n\ninterface Props {\n    tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n    const normalizedTag = props.tag.replace(/_/g, '');\n    return (\n        <FormattedMessage\n            id={`gedcom.${normalizedTag}`}\n            defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n        />\n    );\n}\n","import {\n    Container,\n    Icon,\n    Image,\n    Label,\n    Message,\n    Modal,\n    Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n    const [imageOpen, setImageOpen] = useState(false);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageFailed, setImageFailed] = useState(false);\n    const [imageSrc, setImageSrc] = useState('');\n\n    if (imageLoaded && imageSrc !== props.url) {\n        setImageLoaded(false);\n    }\n    return (\n        <>\n            <Image\n                className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n                onClick={() => setImageOpen(true)}\n                onLoad={() => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(false);\n                }}\n                onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(true);\n                    e.currentTarget.alt = '';\n                }}\n                src={props.url}\n                alt={props.title || props.filename}\n                centered={true}\n            />\n            <Placeholder className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}>\n                <Placeholder.Image square/>\n            </Placeholder>\n            {imageFailed && (\n                <Container fluid textAlign=\"center\">\n                    <Message negative compact>\n                        <Message.Header>\n                            <FormattedMessage\n                                id=\"error.failed_to_load_image\"\n                                defaultMessage={'Failed to load image file'}\n                            />\n                        </Message.Header>\n                    </Message>\n                </Container>\n            )}\n            <Modal\n                basic\n                size=\"large\"\n                closeIcon={<Icon name=\"close\" color=\"red\"/>}\n                open={imageOpen}\n                onClose={() => setImageOpen(false)}\n                onOpen={() => setImageOpen(true)}\n                centered={false}\n            >\n                <Modal.Header>{props.title}</Modal.Header>\n                <Modal.Content image>\n                    <Image\n                        className=\"modal-image\"\n                        src={props.url}\n                        alt={props.title || props.filename}\n                        label={<Label attached=\"bottom\" content={props.filename}/>}\n                        wrapped\n                    />\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n    lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n    return (\n        <>\n            {props.lines.map((line, index) => (\n                <div key={index}>\n                    <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n                    <br/>\n                </div>\n            ))}\n        </>\n    );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Icon, Item, List, Menu, MenuItemProps, Popup, Tab,} from 'semantic-ui-react';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from '../lib/topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport interface Source {\n    title?: string;\n    author?: string;\n    page?: string;\n    date?: DateOrRange;\n    publicationInfo?: string;\n}\n\ninterface Props {\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n    return (\n        !!images &&\n        images.map((image, index) => (\n            <List key={index}>\n                <List.Item>\n                    <WrappedImage\n                        url={image.url}\n                        filename={image.filename}\n                        title={image.title}\n                    />\n                </List.Item>\n            </List>\n        ))\n    );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n    return (\n        !!notes?.length &&\n        notes.map((note, index) => (\n            <div key={index}>\n                <MultilineText\n                    lines={note.map((line, index) => (\n                        <i key={index}>{line}</i>\n                    ))}\n                />\n            </div>\n        ))\n    );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n    return (\n        !!sources?.length && (\n            <List>\n                {sources.map((source, index) => (\n                    <List.Item key={index}>\n                        <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\"/>\n                        <List.Content>\n                            <List.Header>\n                                <Linkify properties={{target: '_blank'}}>\n                                    {[source.author, source.title, source.publicationInfo]\n                                        .filter((sourceElement) => sourceElement)\n                                        .join(', ')}\n                                </Linkify>\n                            </List.Header>\n                            <List.Description>\n                                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                                {source.date\n                                    ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                                    : null}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n                ))}\n            </List>\n        )\n    );\n}\n\nexport function EventExtras(props: Props) {\n    const intl = useIntl();\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [indi, setIndi] = useState('');\n\n    if (!indi || indi !== props.indi) {\n        setActiveIndex(-1);\n        setIndi(props.indi);\n    }\n\n    function handleTabOnClick(\n        event: React.MouseEvent<HTMLAnchorElement>,\n        menuItemProps: MenuItemProps,\n    ) {\n        menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n            ? setActiveIndex(menuItemProps.index)\n            : setActiveIndex(-1);\n    }\n\n    const imageTab = props.images?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"camera\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n    };\n\n    const noteTab = props.notes?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"sticky note outline\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n    };\n\n    const sourceTab = props.sources?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"quote right\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n    };\n\n    const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n        tab ? [tab] : [],\n    );\n\n    if (panes.length) {\n        return (\n            <Item.Description>\n                <Tab\n                    className=\"event-extras\"\n                    activeIndex={activeIndex}\n                    renderActiveOnly={true}\n                    menu={{\n                        tabular: true,\n                        attached: true,\n                        compact: true,\n                        borderless: true,\n                    }}\n                    panes={panes}\n                />\n            </Item.Description>\n        );\n    }\n    return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry,\n    getName,\n    pointerToId,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\nimport {DateOrRange, getDate} from '../lib/topola';\n\nfunction PersonLink(props: { person: GedcomEntry }) {\n    const location = useLocation();\n    const name = getName(props.person);\n    const search = queryString.parse(location.search);\n    search['indi'] = pointerToId(props.person.pointer);\n    return (\n        <Item.Meta>\n            <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n                {name ? (name) : (<FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>)}\n            </Link>\n        </Item.Meta>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n    entries: GedcomEntry[];\n}\n\ninterface EventData {\n    type: string;\n    date?: DateOrRange;\n    personLink?: GedcomEntry;\n    place?: string[];\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nconst EVENT_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'FAMS',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'MARS', 'DIV'];\n\nfunction EventHeader(props: { event: EventData }) {\n    const intl = useIntl();\n    return (\n        <div className=\"event-header\">\n            <Header as=\"span\" size=\"small\">\n                <TranslatedTag tag={props.event.type}/>\n            </Header>\n            {props.event.date ? (\n                <Header as=\"span\" textAlign=\"right\" sub>\n                    {formatDateOrRange(props.event.date, intl)}\n                </Header>\n            ) : null}\n        </div>\n    );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n    const spouseReference = familyEntry.tree\n        .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n        .find((familySubEntry) => !familySubEntry.data.includes(indi));\n    if (!spouseReference) {\n        return undefined;\n    }\n    return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n    const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n    return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n    return entry.tree\n        .filter((subEntry) => 'OBJE' === subEntry.tag)\n        .map((objectEntry) =>\n            dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n        )\n        .map((objectEntry) => getImageFileEntry(objectEntry))\n        .flatMap((imageFileEntry) =>\n            imageFileEntry ? [\n                    {\n                        url: imageFileEntry?.data || '',\n                        filename: getFileName(imageFileEntry) || '',\n                    },\n                ] : [],\n        );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n    return entry.tree\n        .filter((subEntry) => 'SOUR' === subEntry.tag)\n        .map((sourceEntryReference) => {\n            const sourceEntry = dereference(sourceEntryReference, gedcom, (gedcom) => gedcom.other);\n            const title = sourceEntry.tree.find((subEntry) => 'TITL' === subEntry.tag);\n            const abbr = sourceEntry.tree.find((subEntry) => 'ABBR' === subEntry.tag);\n            const author = sourceEntry.tree.find((subEntry) => 'AUTH' === subEntry.tag);\n            const publicationInfo = sourceEntry.tree.find((subEntry) => 'PUBL' === subEntry.tag);\n            const page = sourceEntryReference.tree.find((subEntry) => 'PAGE' === subEntry.tag);\n            const sourceData = sourceEntryReference.tree.find((subEntry) => 'DATA' === subEntry.tag);\n            const date = sourceData ? resolveDate(sourceData) : undefined;\n            return {\n                title: title?.data || abbr?.data,\n                author: author?.data,\n                page: page?.data,\n                date: date ? getDate(date.data) : undefined,\n                publicationInfo: publicationInfo?.data,\n            };\n        });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n    return entry.tree\n        .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n        .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n        .map((note) => getData(note));\n}\n\nfunction toEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    return entry.tag === 'FAMS' ? toFamilyEvents(entry, gedcom, indi) : toIndiEvent(entry, gedcom, indi);\n}\n\nfunction toIndiEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const date = resolveDate(entry) || null;\n    return [\n        {\n            date: date ? getDate(date.data) : undefined,\n            type: entry.tag,\n            place: eventPlace(entry),\n            images: eventImages(entry, gedcom),\n            notes: eventNotes(entry, gedcom),\n            sources: eventSources(entry, gedcom),\n            indi: indi,\n        },\n    ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n    return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n    return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n        family.tree.filter((entry) => entry.tag === tag),\n    ).map((familyMarriageEvent) => {\n        const date = resolveDate(familyMarriageEvent) || null;\n        return {\n            date: date ? getDate(date.data) : undefined,\n            type: familyMarriageEvent.tag,\n            personLink: getSpouse(indi, family, gedcom),\n            place: eventPlace(familyMarriageEvent),\n            images: eventImages(familyMarriageEvent, gedcom),\n            notes: eventNotes(familyMarriageEvent, gedcom),\n            sources: eventSources(familyMarriageEvent, gedcom),\n            indi: indi,\n        };\n    });\n}\n\nfunction Event(props: { event: EventData }) {\n    return (\n        <Item>\n            <Item.Content>\n                <EventHeader event={props.event}/>\n                {!!props.event.personLink && (<PersonLink person={props.event.personLink}/>)}\n                {!!props.event.place && (<Item.Description>{props.event.place}</Item.Description>)}\n                <EventExtras\n                    images={props.event.images}\n                    notes={props.event.notes}\n                    sources={props.event.sources}\n                    indi={props.event.indi}\n                />\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport function Events(props: Props) {\n    const events = flatMap(EVENT_TAGS, (tag) =>\n        props.entries\n            .filter((entry) => entry.tag === tag)\n            .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi))\n            .flatMap((events) => events)\n            .sort((event1, event2) => compareDates(event1.date, event2.date)),\n    );\n    if (events.length) {\n        return (\n            <>\n                {events.map((event, index) => (\n                    <Event event={event} key={index}/>\n                ))}\n            </>\n        );\n    }\n    return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n    'NAME',\n    'SEX',\n    'FAMC',\n    'FAMS',\n    'NOTE',\n    'SOUR',\n    'LANG',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n    const lines = [];\n    if (entry.data) {\n        lines.push(...getData(entry));\n    }\n    entry.tree\n        .filter((subentry) => subentry.tag === 'NOTE')\n        .forEach((note) =>\n            getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n        );\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <>\n            <Header sub>\n                <TranslatedTag tag={entry.tag}/>\n            </Header>\n            <span>\n                <MultilineText lines={lines}/>\n            </span>\n        </>\n    );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n    const imageFileEntry = getImageFileEntry(objectEntry);\n    return imageFileEntry ? (\n        <div className=\"person-image\">\n            <WrappedImage\n                url={imageFileEntry.data}\n                filename={getFileName(imageFileEntry) || ''}\n            />\n        </div>\n    ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n    return (\n        <MultilineText\n            lines={getData(entry).map((line, index) => (\n                <i key={index}>{line}</i>\n            ))}\n        />\n    );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n    const fullName = entry.data.replaceAll('/', '');\n    const nameType = entry.tree.find(\n        (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n    )?.data;\n    return (\n        <>\n            <Header as=\"span\" size=\"large\">\n                {fullName ? (\n                    fullName\n                ) : (\n                    <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>\n                )}\n            </Header>\n            {fullName && nameType && (\n                <Item.Meta>\n                    <TranslatedTag tag={nameType}/>\n                </Item.Meta>\n            )}\n        </>\n    );\n}\n\nfunction getDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n    return flatMap(tags, (tag) =>\n        entries\n            .filter((entry) => entry.tag === tag)\n            .map((entry) => detailsFunction(entry)),\n    )\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n    return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n    return entries\n        .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n        .filter(hasData)\n        .map((entry) => dataDetails(entry))\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\nfunction getMultilineDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    title: [string, string],\n) {\n    const lines= entries\n        .filter((entry) => tags.includes(entry.tag))\n        .filter(hasData)\n        .map((element) => element.data)\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <Item key=\"languages\">\n            <Item.Content>\n                <Header as=\"span\">\n                    <FormattedMessage id={title[0]} defaultMessage={title[1]}/>\n                </Header>\n                <span>\n                    <MultilineText lines={lines}/>\n                </span>\n            </Item.Content>\n        </Item>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n}\n\nexport function Details(props: Props) {\n    const entries = props.gedcom.indis[props.indi].tree;\n    const entriesWithData = entries\n        .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n        .filter(hasData);\n\n    return (\n        <div className=\"details\">\n            <Item.Group divided>\n                {getDetails(entries, ['NAME'], nameDetails)}\n                {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n                <Events gedcom={props.gedcom} entries={entries} indi={props.indi}/>\n                {getMultilineDetails(entriesWithData, ['LANG'], ['gedcom.languages', 'Languages'])}\n                {getOtherDetails(entriesWithData)}\n                {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n            </Item.Group>\n        </div>\n    );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\nimport {Language} from \"../languages/languages-loader\";\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n    GEDCOM = 'gedcom',\n    READY = 'ready',\n    PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n    message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n    message: EmbeddedMessageType.GEDCOM;\n    gedcom?: string;\n    allLanguages?: Language[]\n}\n\nexport interface EmbeddedSourceSpec {\n    source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<EmbeddedSourceSpec>,\n        oldSource: SourceSelection<EmbeddedSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        // Never reload data.\n        return false;\n    }\n\n    private async onMessage(\n        message: EmbeddedMessage,\n        resolve: (value: TopolaData) => void,\n        reject: (reason: any) => void,\n    ) {\n        if (message.message === EmbeddedMessageType.PARENT_READY) {\n            // Parent didn't receive the first 'ready' message, so we need to send it again.\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n        } else if (message.message === EmbeddedMessageType.GEDCOM) {\n            const gedcom = (message as GedcomMessage).gedcom;\n            const allLanguages = (message as GedcomMessage).allLanguages;\n            if (!gedcom || !allLanguages) {\n                return;\n            }\n            try {\n                const data = await loadGedcom('', gedcom, allLanguages);\n                resolve(data);\n            } catch (error) {\n                reject(error);\n            }\n        }\n    }\n\n    async loadData(source: SourceSelection<EmbeddedSourceSpec>): Promise<TopolaData> {\n        // Notify the parent window that we are ready.\n        return new Promise<TopolaData>((resolve, reject) => {\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n            window.addEventListener('message', (data) =>\n                this.onMessage(data.data, resolve, reject),\n            );\n        });\n    }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n    if (!(error instanceof TopolaError)) {\n        return error.message;\n    }\n    return intl.formatMessage(\n        {\n            id: `error.${error.code}`,\n            defaultMessage: error.message,\n        },\n        error.args,\n    );\n}\n","import {\n    Menu,\n    Dropdown,\n    MenuItemProps,\n    DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n    Menu,\n    Dropdown\n}\n\ninterface Props {\n    menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n    const newProps = {...props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n        <>\n            {props.menuType === MenuType.Menu? (\n                <Menu.Item {...newProps}>{props.children}</Menu.Item>\n            ) : (\n                <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n            )}\n        </>\n    );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n    breakpoints: {\n        small: 320,\n        large: 768,\n    },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from '../lib/topola';\n\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n    id: string;\n    indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n    search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n    return input\n        .toLocaleLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n    if (a.score !== b.score) {\n        return b.score - a.score;\n    }\n    return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n    indi: JsonIndi,\n    indiMap: Map<String, JsonIndi>,\n    famMap: Map<string, JsonFam>,\n): string {\n    return (indi.fams || [])\n        .map((famId) => famMap.get(famId))\n        .map((fam) => fam && fam.husb)\n        .map((husbId) => husbId && indiMap.get(husbId))\n        .map((husband) => husband && husband.lastName)\n        .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n    private index: lunr.Index | undefined;\n    private indiMap: Map<string, JsonIndi>;\n    private famMap: Map<string, JsonFam>;\n\n    constructor(data: JsonGedcomData) {\n        this.indiMap = idToIndiMap(data);\n        this.famMap = idToFamMap(data);\n    }\n\n    initialize() {\n        const self = this;\n        this.index = lunr(function () {\n            //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n            self.initMultiLingualLunrWithoutTrimmer(this, [\n                'de',\n                'en',\n                'fr',\n                'it',\n                'ru',\n            ]);\n            this.ref('id');\n            this.field('id');\n            this.field('name', {boost: 10});\n            this.field('normalizedName', {boost: 8});\n            this.field('spouseLastName', {boost: 2});\n            this.field('normalizedSpouseLastName', {boost: 2});\n\n            self.indiMap.forEach((indi) => {\n                const name = [indi.firstName, indi.lastName].join(' ');\n                const spouseLastName = getHusbandLastName(\n                    indi,\n                    self.indiMap,\n                    self.famMap,\n                );\n                this.add({\n                    id: indi.id,\n                    name,\n                    normalizedName: normalize(name),\n                    spouseLastName,\n                    normalizedSpouseLastName: normalize(spouseLastName),\n                });\n            });\n        });\n    }\n\n    private initMultiLingualLunrWithoutTrimmer(\n        lunrInstance: any,\n        languages: string[],\n    ): void {\n        let wordCharacters = '';\n        const pipelineFunctions: PipelineFunction[] = [];\n        const searchPipelineFunctions: PipelineFunction[] = [];\n        languages.forEach((language) => {\n            if (language === 'en') {\n                wordCharacters += '\\\\w';\n                pipelineFunctions.unshift(lunr.stopWordFilter);\n                pipelineFunctions.push(lunr.stemmer);\n                searchPipelineFunctions.push(lunr.stemmer);\n            } else {\n                wordCharacters += lunr[language].wordCharacters;\n                if (lunr[language].stopWordFilter) {\n                    pipelineFunctions.unshift(lunr[language].stopWordFilter);\n                }\n                if (lunr[language].stemmer) {\n                    pipelineFunctions.push(lunr[language].stemmer);\n                    searchPipelineFunctions.push(lunr[language].stemmer);\n                }\n            }\n        });\n        lunrInstance.pipeline.reset();\n        lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n        if (lunrInstance.searchPipeline) {\n            lunrInstance.searchPipeline.reset();\n            lunrInstance.searchPipeline.add.apply(\n                lunrInstance.searchPipeline,\n                searchPipelineFunctions,\n            );\n        }\n    }\n\n    public search(input: string): SearchResult[] {\n        const query = input\n            .split(' ')\n            .filter((s) => !!s)\n            .map((s) => `${s} ${s}*`)\n            .join(' ');\n        const results = this.index!.search(query);\n        return results\n            .sort(compare)\n            .slice(0, MAX_RESULTS)\n            .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n    }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n    const index = new LunrSearchIndex(data);\n    index.initialize();\n    return index;\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData, JsonIndi} from '../lib/topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n    const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n    if (result.id.length > 8) {\n        return name;\n    }\n    return (\n        <>\n            {name} <i>({result.id})</i>\n        </>\n    );\n}\n\ninterface Props {\n    /** Data used for the search index. */\n    data: JsonGedcomData;\n    onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n    const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n    const [searchString, setSearchString] = useState('');\n    const searchIndex = useRef<SearchIndex>();\n    const intl = useIntl();\n\n    function getDescriptionLine(indi: JsonIndi) {\n        const birthDate = formatDateOrRange(indi.birth, intl);\n        const deathDate = formatDateOrRange(indi.death, intl);\n        if (!deathDate) {\n            return birthDate;\n        }\n        return `${birthDate} – ${deathDate}`;\n    }\n\n    /** Produces an object that is displayed in the Semantic UI Search results. */\n    function displaySearchResult(result: SearchResult): SearchResultProps {\n        return {\n            id: result.id,\n            key: result.id,\n            title: getNameLine(result),\n            description: getDescriptionLine(result.indi),\n        } as SearchResultProps;\n    }\n\n    /** On search input change. */\n    function handleSearch(input: string | undefined) {\n        if (!input) {\n            return;\n        }\n        const results = searchIndex\n            .current!.search(input)\n            .map((result) => displaySearchResult(result));\n        setSearchResults(results);\n    }\n\n    const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n    /** On search result selected. */\n    function handleResultSelect(id: string) {\n        props.onSelection({id, generation: 0});\n        setSearchString('');\n    }\n\n    /** On search string changed. */\n    function onChange(value: string) {\n        debouncedHandleSearch.current(value);\n        setSearchString(value);\n    }\n\n    // Initialize the search index.\n    useEffect(() => {\n        searchIndex.current = buildSearchIndex(props.data);\n    }, [props.data]);\n\n    return (\n        <Search\n            onSearchChange={(_, data) => onChange(data.value!)}\n            onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n            results={searchResults}\n            noResultsMessage={intl.formatMessage({\n                id: 'menu.search.no_results',\n                defaultMessage: 'No results found',\n            })}\n            placeholder={intl.formatMessage({\n                id: 'menu.search.placeholder',\n                defaultMessage: 'Search for people',\n            })}\n            selectFirstResult={true}\n            value={searchString}\n            id=\"search\"\n        />\n    );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n    const lower = fileName.toLowerCase();\n    return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        const filesArray = Array.from(files);\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n        const gedcomFile =\n            filesArray.length === 1\n                ? filesArray[0]\n                : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n                filesArray[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Convert uploaded images to object URLs.\n        filesArray\n            .filter((file) => file.name !== gedcomFile.name && isImageFileName(file.name))\n            .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images}\n        });\n    }\n\n    const content = (\n        <>\n            <Icon name=\"folder open\"/>\n            <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\"/>\n        </>\n    );\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <label htmlFor=\"fileInput\">\n                    <Menu.Item as=\"a\">{content}</Menu.Item>\n                </label>\n            ) : (\n                <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                    {content}\n                </Dropdown.Item>\n            )}\n            <input className=\"hidden\"\n                type=\"file\"\n                accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n                id=\"fileInput\"\n                multiple\n                onChange={handleUpload}\n            />\n        </>\n    );\n}\n","import {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {useRef, useState} from \"react\";\nimport {ConvertCSVMenu} from \"./convert_csv\";\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n    onCenterView: () => void;\n}\n\ninterface Props {\n    showingChart: boolean;\n    data?: JsonGedcomData;\n    standalone: boolean;\n    eventHandlers: EventHandlers;\n}\n\nexport function TopBar(props: Props) {\n    useHistory();\n    useLocation();\n\n    function FileMenus(screenSize: ScreenSize) {\n        const [menuOpen, setMenuOpen] = useState(false);\n        const cooldown = useRef(false);\n\n        // Debug handler\n        const toggleMenu = (state: boolean) => {\n            if (!state) {\n                cooldown.current = true;\n                setMenuOpen(false);\n                setTimeout(() => {\n                    cooldown.current = false;\n                }, 150);\n            } else if (!cooldown.current) {\n                setMenuOpen(true);\n            }\n        };\n\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <Dropdown\n                        onOpen={() => toggleMenu(true)}\n                        onClose={() => toggleMenu(false)}\n                        open={menuOpen}\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\">\n                        <Dropdown.Menu onClick={() => toggleMenu(false)}>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                            <ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        <ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />\n                    </>\n                );\n        }\n    }\n\n    function ChartMenus(screenSize: ScreenSize) {\n        if (!props.showingChart) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\"/>\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage id=\"menu.pdf_file\" defaultMessage=\"PDF file\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage id=\"menu.png_file\" defaultMessage=\"PNG file\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage id=\"menu.svg_file\" defaultMessage=\"SVG file\"/>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                            <Icon name=\"eye\" />\n                            <FormattedMessage id=\"menu.view\" defaultMessage=\"Center view\" />\n                        </Menu.Item>\n\n                        <Menu.Menu position=\"right\">\n                            <SearchBar\n                                data={props.data!}\n                                onSelection={props.eventHandlers.onSelection}\n                                {...props}\n                            />\n                        </Menu.Menu>\n                    </>\n                );\n            case ScreenSize.SMALL:\n                if (!props.showingChart) {\n                    return (\n                        <>\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </>\n                    );\n                } else {\n                    return (\n                        <>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                                <Icon name=\"eye\" />\n                                <FormattedMessage id=\"menu.view\" defaultMessage=\"Center view\" />\n                            </Menu.Item>\n                        </>\n                    );\n                }\n        }\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {FileMenus(ScreenSize.LARGE)}\n                {ChartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {FileMenus(ScreenSize.SMALL)}\n                        {ChartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu as={Media} greaterThanOrEqual=\"large\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {desktopMenus()}\n            </Menu>\n            <Menu as={Media} at=\"small\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [url, setUrl] = useState('');\n    const inputRef = useRef<Input>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (dialogOpen) {\n            setUrl('');\n            inputRef.current!.focus();\n        }\n    }, [dialogOpen]);\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    function handleLoad() {\n        setDialogOpen(false);\n        if (url) {\n            history.push({\n                pathname: '/view',\n                search: queryString.stringify({url})\n            });\n        }\n    }\n\n    function loadFromUrlModal() {\n        return (\n            <Modal open={dialogOpen} onClose={() => setDialogOpen(false)} centered={false}>\n                <Header>\n                    <Icon name=\"cloud download\"/>\n                    <FormattedMessage id=\"load_from_url.title\" defaultMessage=\"Load from URL\"/>\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={handleLoad}>\n                        <Input\n                            placeholder=\"https://\"\n                            fluid\n                            value={url}\n                            onChange={(_, data) => setUrl(data.value)}\n                            ref={inputRef}\n                        />\n                        <p>\n                            <FormattedMessage\n                                id=\"load_from_url.comment\"\n                                defaultMessage={\n                                    'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                                }\n                                values={{\n                                    link: (\n                                        <a href=\"https://corsproxy.io/\">corsproxy.io</a>\n                                    ),\n                                }}\n                            />\n                        </p>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary onClick={handleLoad}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"cloud download\"/>\n                <FormattedMessage id=\"menu.load_from_url\" defaultMessage=\"Load from URL\"/>\n            </MenuItem>\n            {loadFromUrlModal()}\n        </>\n    );\n}\n","import {MenuItem, MenuType} from \"./menu_item\";\nimport {Button, Form, Header, Icon, Modal} from \"semantic-ui-react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {SyntheticEvent, useState} from \"react\";\nimport * as queryString from \"query-string\";\nimport {useHistory} from \"react-router\";\nimport {loadFile} from \"../datasource/load_data\";\nimport md5 from \"md5\";\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Convert CSV's\" menu. */\nexport function ConvertCSVMenu(props: Props) {\n    const[inputFiles, setInputFiles] = useState<File[]>([]);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const history = useHistory();\n\n    function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        setInputFiles(Array.from(files));\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    }\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    async function convert2gedcom() {\n        const gedcomFile = inputFiles.length === 1\n                ? inputFiles[0]\n                : inputFiles.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n            inputFiles[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(window.location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images}\n        });\n    }\n\n    function convertCSVModal() {\n        return (\n            <Modal open={dialogOpen} onClose={() => setDialogOpen(false)} centered={false}>\n                <Header>\n                    <Icon name=\"sitemap\"/>\n                    <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV's to GEDCOM\"/>\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={() => convert2gedcom()}>\n                        <input type=\"file\"\n                               accept=\".csv\"\n                               id=\"fileInput\"\n                               multiple\n                               onChange={(e) => handleUpload(e)}\n                        />\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    {/* TODO: enable */}\n                    <Button disabled={true} primary onClick={() => convert2gedcom()}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Generate\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"sitemap\"/>\n                <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV's\"/>\n            </MenuItem>\n            {convertCSVModal()}\n        </>\n    );\n}","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\nimport {Language} from \"./languages/languages-loader\";\nimport {useState} from \"react\";\n\nexport enum ChartColors {\n    NO_COLOR,\n    COLOR_BY_SEX,\n    COLOR_BY_GENERATION,\n    COLOR_BY_ETHNICITY,\n    COLOR_BY_NR_LANGUAGES = 4,\n    COLOR_BY_LANGUAGE = 5,\n}\n\nexport enum LanguagesArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum EthnicityArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum IdsArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum SexArg {\n    HIDE,\n    SHOW,\n}\n\nexport interface Config {\n    color: ChartColors;\n    languages: LanguagesArg;\n    ethnicity: EthnicityArg;\n    id: IdsArg;\n    sex: SexArg;\n    renderLanguagesOption: boolean\n    renderEthnicityOption: boolean\n    languageOptions: Language[],\n    selectedLanguage: string | null\n}\n\nexport const DEFAULT_CONFIG: Config = {\n    color: ChartColors.COLOR_BY_GENERATION,\n    languages: LanguagesArg.HIDE,\n    ethnicity: EthnicityArg.HIDE,\n    id: IdsArg.SHOW,\n    sex: SexArg.SHOW,\n    renderLanguagesOption: false,\n    renderEthnicityOption: false,\n    languageOptions: [],\n    selectedLanguage: null,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n    ['n', ChartColors.NO_COLOR],\n    ['g', ChartColors.COLOR_BY_GENERATION],\n    ['s', ChartColors.COLOR_BY_SEX],\n    ['e', ChartColors.COLOR_BY_ETHNICITY],\n    ['nl', ChartColors.COLOR_BY_NR_LANGUAGES],\n    ['l', ChartColors.COLOR_BY_LANGUAGE],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst LANGUAGES_ARG = new Map<string, LanguagesArg>([\n    ['h', LanguagesArg.HIDE],\n    ['s', LanguagesArg.SHOW],\n]);\nconst LANGUAGES_ARG_INVERSE = new Map<LanguagesArg, string>();\nLANGUAGES_ARG.forEach((v, k) => LANGUAGES_ARG_INVERSE.set(v, k));\n\nconst ETHNICITY_ARG = new Map<string, EthnicityArg>([\n    ['h', EthnicityArg.HIDE],\n    ['s', EthnicityArg.SHOW],\n]);\nconst ETHNICITY_ARG_INVERSE = new Map<EthnicityArg, string>();\nETHNICITY_ARG.forEach((v, k) => ETHNICITY_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, IdsArg>([\n    ['h', IdsArg.HIDE],\n    ['s', IdsArg.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<IdsArg, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, SexArg>([\n    ['h', SexArg.HIDE],\n    ['s', SexArg.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<SexArg, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n    const getParam = (name: string) => {\n        return typeof args[name] === 'string' || typeof args[name] === 'number' ? args[name] : undefined;\n    };\n    return {\n        color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n        languages: LANGUAGES_ARG.get(getParam('l') ?? '') ?? DEFAULT_CONFIG.languages,\n        selectedLanguage: getParam('n') ?? DEFAULT_CONFIG.selectedLanguage,\n        ethnicity: ETHNICITY_ARG.get(getParam('e') ?? '') ?? DEFAULT_CONFIG.ethnicity,\n        id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n        sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n        renderEthnicityOption: DEFAULT_CONFIG.renderEthnicityOption,\n        renderLanguagesOption: DEFAULT_CONFIG.renderLanguagesOption,\n        languageOptions: DEFAULT_CONFIG.languageOptions\n    };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n    return {\n        c: COLOR_ARG_INVERSE.get(config.color),\n        l: LANGUAGES_ARG_INVERSE.get(config.languages),\n        e: ETHNICITY_ARG_INVERSE.get(config.ethnicity),\n        i: ID_ARG_INVERSE.get(config.id),\n        s: SEX_ARG_INVERSE.get(config.sex),\n        n: config.selectedLanguage\n    };\n}\n\nexport function ConfigPanel(props: {config: Config; onChange: (config: Config) => void}) {\n    const [languagesEnabled, setLanguagesEnabled] = useState(props.config.languages === LanguagesArg.SHOW);\n    const [ethnicityEnabled, setEthnicityEnabled] = useState(props.config.ethnicity === EthnicityArg.SHOW);\n    const [idsEnabled, setIdsEnabled] = useState(props.config.id === IdsArg.SHOW);\n    const [sexEnabled, setSexEnabled] = useState(props.config.sex === SexArg.SHOW);\n\n    const toggleLanguages = (newState: LanguagesArg) => {\n        setLanguagesEnabled(!languagesEnabled);\n        props.onChange({...props.config, languages: newState});\n    };\n    const toggleEthnicity = (newState: EthnicityArg) => {\n        setEthnicityEnabled(!ethnicityEnabled);\n        props.onChange({...props.config, ethnicity: newState});\n    };\n    const toggleIds = (newState: IdsArg) => {\n        setIdsEnabled(!idsEnabled);\n        props.onChange({...props.config, id: newState});\n    };\n    const toggleSex = (newState: SexArg) => {\n        setSexEnabled(!sexEnabled);\n        props.onChange({...props.config, sex: newState});\n    };\n\n    const languageOptions = [];\n    for (let i = 0; i < props.config.languageOptions.length; i++) {\n        const language = props.config.languageOptions[i];\n        languageOptions.push(\n            <Form.Field key={i} className={!props.config.renderLanguagesOption ? 'hidden' : 'no-margin suboption'}>\n                <Checkbox\n                    radio\n                    label={language.name + \" (\" + language.abbreviation + \")\"}\n                    name=\"checkboxRadioGroup\"\n                    value={i}\n                    checked={props.config.selectedLanguage === language.id}\n                    onClick={\n                        () => {\n                            props.onChange({\n                                ...props.config,\n                                selectedLanguage: language.id,\n                                color: ChartColors.COLOR_BY_LANGUAGE,\n                                languages: LanguagesArg.SHOW,\n                            });\n                            setLanguagesEnabled(true);\n                        }\n                    }\n                />\n            </Form.Field>\n        );\n    }\n    return (\n        <Form className=\"details no-border-bottom\">\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Header sub>\n                            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\"/>\n                        </Header>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"none\"\n                                checked={props.config.color === ChartColors.NO_COLOR}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.NO_COLOR,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"generation\"\n                                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_GENERATION,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className=\"no-margin\">\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by sex\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"gender\"\n                                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_SEX,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderEthnicityOption ? 'hidden' : 'no-margin'}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_ETHNICITY\" defaultMessage=\"by ethnicity\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"ethnicity\"\n                                checked={props.config.color === ChartColors.COLOR_BY_ETHNICITY}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_ETHNICITY,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.SHOW,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(true);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderLanguagesOption ? 'hidden' : 'no-margin'}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_LANGUAGES\" defaultMessage=\"by no. languages\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"languages\"\n                                checked={props.config.color === ChartColors.COLOR_BY_NR_LANGUAGES}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_NR_LANGUAGES,\n                                            languages: LanguagesArg.SHOW,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(true);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        {languageOptions}\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"languages\"\n                                  checked={languagesEnabled}\n                                  onClick={() => toggleLanguages(languagesEnabled ? LanguagesArg.HIDE : LanguagesArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {languagesEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.languages\" defaultMessage=\"languages\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ethnicity\"\n                                  checked={ethnicityEnabled}\n                                  onClick={() => toggleEthnicity(ethnicityEnabled ? EthnicityArg.HIDE : EthnicityArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {ethnicityEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ethnicity\" defaultMessage=\"ethnicity\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ids\"\n                                  checked={idsEnabled}\n                                  onClick={() => toggleIds(idsEnabled ? IdsArg.HIDE : IdsArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {idsEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"sex\"\n                                  checked={sexEnabled}\n                                  onClick={() => toggleSex(sexEnabled ? SexArg.HIDE : SexArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {sexEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.sex\" defaultMessage=\"sex\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n            <div style={{textAlign: \"center\"}}>\n                <Form.Button primary onClick={\n                    () => {\n                        props.onChange(DEFAULT_CONFIG);\n                        setEthnicityEnabled(false);\n                        setLanguagesEnabled(false);\n                        setIdsEnabled(true);\n                        setSexEnabled(true);\n                    }\n                }>\n                    <FormattedMessage id=\"config.reset\" defaultMessage=\"Reset\"/>\n                </Form.Button>\n            </div>\n        </Form>\n\n);\n}\n","import {ChartColors, LanguagesArg, EthnicityArg, IdsArg, SexArg} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {D3ZoomEvent, zoom, ZoomBehavior, ZoomedElementBaseType, zoomTransform,} from 'd3-zoom';\nimport {\n    ChartColors as TopolaChartColors,\n    ChartHandle,\n    createChart,\n    DetailedRenderer,\n    HourglassChart,\n    IndiInfo,\n    JsonGedcomData,\n} from './lib/topola';\n\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n * @param event\n */\nfunction zoomed(\n    size: [number, number],\n    event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n    const parent = select('#svgContainer').node() as Element;\n    const scale = event.transform.k;\n    const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    select('#chartSvg')\n        .attr('width', size[0] * scale)\n        .attr('height', size[1] * scale)\n        .attr('transform', `translate(${offsetX}, ${offsetY})`);\n    select('#chart').attr('transform', `scale(${scale})`);\n    parent.scrollLeft = -event.transform.x;\n    parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n    const parent = select('#svgContainer').node() as Element;\n    const x = parent.scrollLeft + parent.clientWidth / 2;\n    const y = parent.scrollTop + parent.clientHeight / 2;\n    const scale = zoomTransform(parent).k;\n    select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise<string>((resolve) => {\n        reader.onload = (e) => resolve((e.target as FileReader).result as string);\n    });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n    const href = image.href.baseVal;\n    if (!href) {\n        return;\n    }\n    try {\n        const response = await fetch(href);\n        const blob = await response.blob();\n        image.href.baseVal = await loadAsDataUrl(blob);\n    } catch (e) {\n        console.warn('Failed to load image:', e);\n    }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n    const images = Array.from(svg.getElementsByTagName('image'));\n    await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    return new Promise<HTMLImageElement>((resolve) => {\n        image.addEventListener('load', () => resolve(image));\n    });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n    const canvas = document.createElement('canvas');\n    // Scale image for better quality.\n    canvas.width = image.width * 2;\n    canvas.height = image.height * 2;\n    const ctx = canvas.getContext('2d')!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob) {\n                resolve(blob);\n            } else {\n                reject();\n            }\n        }, type);\n    });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n    svg.removeAttribute('transform');\n    const parent = select('#svgContainer').node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n    svg.setAttribute(\n        'height',\n        String(Number(svg.getAttribute('height')) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute('transform');\n    return svg;\n}\n\nasync function getSvgContentsWithInlinedImages() {\n    const svg = getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n}\n\nexport async function downloadSvg() {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    saveAs(blob, 'genealogy.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\n    return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n    const canvas = await drawOnCanvas();\n    const blob = await canvasToBlob(canvas, 'image/png');\n    saveAs(blob, 'genealogy.png');\n}\n\nexport async function downloadPdf() {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import('jspdf');\n    const canvas = await drawOnCanvas();\n    const doc = new jspdf({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: 'pt',\n        format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n    doc.save('genealogy.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n    Hourglass\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n    [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n    [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n    [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n    [ChartColors.COLOR_BY_ETHNICITY, TopolaChartColors.COLOR_BY_ETHNICITY],\n    [ChartColors.COLOR_BY_NR_LANGUAGES, TopolaChartColors.COLOR_BY_NR_LANGUAGES],\n    [ChartColors.COLOR_BY_LANGUAGE, TopolaChartColors.COLOR_BY_LANGUAGE]\n]);\n\nexport interface ChartProps {\n    data: JsonGedcomData;\n    selection: IndiInfo;\n    chartType: ChartType;\n    onSelection: (indiInfo: IndiInfo) => void;\n    freezeAnimation?: boolean;\n    colors?: ChartColors;\n    selectedLanguage?: string | null;\n    hideLanguages?: LanguagesArg;\n    hideEthnicity?: EthnicityArg;\n    hideIds?: IdsArg;\n    hideSex?: SexArg;\n}\n\nclass ChartWrapper {\n    private chart?: ChartHandle;\n    /** Animation is in progress. */\n    private animating = false;\n    /** Rendering is required after the current animation finishes. */\n    private rerenderRequired = false;\n    /** The d3 zoom behavior object. */\n    private zoomBehavior?: ZoomBehavior<Element, any>;\n    /** Props that will be used for re-rendering. */\n    private rerenderProps?: ChartProps;\n    private rerenderResetPosition?: boolean;\n\n    zoom(factor: number) {\n        const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n        this.zoomBehavior!.scaleBy(parent, factor);\n    }\n\n    /**\n     * Renders the chart or performs a transition animation to a new state.\n     * If indiInfo is not given, it means that it is the initial render and no animation is performed.\n     */\n    renderChart(\n        props: ChartProps,\n        intl: IntlShape,\n        args: { initialRender: boolean; resetPosition: boolean } = {\n            initialRender: false,\n            resetPosition: false,\n        },\n    ) {\n        // Wait for animation to finish if animation is in progress.\n        if (!args.initialRender && this.animating) {\n            this.rerenderRequired = true;\n            this.rerenderProps = props;\n            this.rerenderResetPosition = args.resetPosition;\n            return;\n        }\n\n        // Freeze changing selection after initial rendering.\n        if (!args.initialRender && props.freezeAnimation) {\n            return;\n        }\n\n        if (args.initialRender) {\n            (select('#chart').node() as HTMLElement).innerHTML = '';\n            this.chart = createChart({\n                json: props.data,\n                chartType: HourglassChart,\n                renderer: DetailedRenderer,\n                svgSelector: '#chart',\n                indiCallback: (info) => props.onSelection(info),\n                colors: chartColors.get(props.colors!),\n                selectedLanguage: props.selectedLanguage,\n                animate: true,\n                updateSvgSize: false,\n                locale: intl.locale,\n            });\n        } else {\n            this.chart!.setData(props.data);\n        }\n\n        const chartInfo = this.chart!.render({\n            startIndi: props.selection.id,\n            baseGeneration: props.selection.generation,\n        });\n        const svg = select('#chartSvg');\n        const parent = select('#svgContainer').node() as Element;\n        const scale = zoomTransform(parent).k;\n        const zoomOutFactor = min([\n            1,\n            scale,\n            parent.clientWidth / chartInfo.size[0],\n            parent.clientHeight / chartInfo.size[1],\n        ])!;\n        const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n        this.zoomBehavior = zoom()\n            .scaleExtent(extent)\n            .translateExtent([[0, 0], chartInfo.size])\n            .on('zoom', (event) => zoomed(chartInfo.size, event));\n        select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n        const scrollTopTween = (scrollTop: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollTop, scrollTop);\n                return (t: number) => {\n                    parent.scrollTop = i(t);\n                };\n            };\n        };\n\n        const scrollLeftTween = (scrollLeft: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n                return (t: number) => {\n                    parent.scrollLeft = i(t);\n                };\n            };\n        };\n\n        const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n        const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n        const offsetX = max([\n            0,\n            (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n        ]);\n        const offsetY = max([\n            0,\n            (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n        ]);\n        const svgTransition = svg.transition().delay(200).duration(500);\n        const transition = args.initialRender ? svg : svgTransition;\n        transition\n            .attr('transform', `translate(${offsetX}, ${offsetY})`)\n            .attr('width', chartInfo.size[0] * scale)\n            .attr('height', chartInfo.size[1] * scale);\n        if (args.resetPosition) {\n            if (args.initialRender) {\n                parent.scrollLeft = -dx;\n                parent.scrollTop = -dy;\n            } else {\n                svgTransition\n                    .tween('scrollLeft', scrollLeftTween(-dx))\n                    .tween('scrollTop', scrollTopTween(-dy));\n            }\n        }\n\n        // After the animation is finished, rerender the chart if required.\n        this.animating = true;\n        chartInfo.animationPromise.then(() => {\n            this.animating = false;\n            if (this.rerenderRequired) {\n                this.rerenderRequired = false;\n                // Use `this.rerenderProps` instead of the props in scope because\n                // the props may have been updated in the meantime.\n                this.renderChart(this.rerenderProps!, intl, {\n                    initialRender: false,\n                    resetPosition: !!this.rerenderResetPosition,\n                });\n            }\n        });\n    }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n    const chartWrapper = useRef(new ChartWrapper());\n    const prevProps = usePrevious(props);\n    const intl = useIntl();\n\n    useEffect(() => {\n        if (prevProps) {\n            const initialRender =\n                props.chartType !== prevProps?.chartType ||\n                props.colors !== prevProps?.colors ||\n                props.selectedLanguage !== prevProps?.selectedLanguage ||\n                props.hideLanguages !== prevProps?.hideLanguages ||\n                props.hideEthnicity !== prevProps?.hideEthnicity ||\n                props.hideIds !== prevProps?.hideIds ||\n                props.hideSex !== prevProps?.hideSex;\n            const resetPosition =\n                props.chartType !== prevProps?.chartType ||\n                props.data !== prevProps.data ||\n                props.selection !== prevProps.selection;\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender,\n                resetPosition,\n            });\n        } else {\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender: true,\n                resetPosition: true,\n            });\n        }\n    });\n\n    return (\n        <div id=\"svgContainer\">\n            <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n                <button className=\"zoom-in\" onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}>+</button>\n                <button className=\"zoom-out\" onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}>−</button>\n            </Media>\n            <svg id=\"chartSvg\">\n                <g id=\"chart\"/>\n            </svg>\n        </div>\n    );\n}\n","export interface Language {\n    id: string;\n    name: string;\n    iso: string | null;\n    abbreviation: string;\n}\n\nexport default class CSVLoader {\n    // Singleton\n    private static csvData: Language[] | null = null;\n\n    static async loadLanguages(filePath: string) {\n        if (CSVLoader.csvData) {\n            return CSVLoader.csvData;\n        }\n        try {\n            const data = await fetch(filePath);\n            const text = await data.text();\n\n            const rows = text.trim().split('\\n');\n            const headers = rows[0].split(',');\n\n            const idIndex = headers.indexOf('id');\n            const nameIndex = headers.indexOf('name');\n            const isoIndex = headers.indexOf('ISO 639-3');\n\n            CSVLoader.csvData = rows.slice(1).map(row => {\n                const values = row.split(',');\n                return {\n                    id: values[idIndex],\n                    name: CSVLoader.title_fn(values[nameIndex]),\n                    iso: values[isoIndex],\n                    abbreviation: values[isoIndex].toUpperCase() || (values[nameIndex].slice(0, 3).toUpperCase() + '*')\n                } as Language;\n            });\n            return CSVLoader.csvData;\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n\n    private static title_fn = (str: string) =>\n        str.split(/[-_\\s]/) // Split by hyphen, underscore, or space\n           .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n           .join('-');\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from './lib/topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {idToIndiMap} from './util/gedcom_util';\nimport {Chart, ChartType, downloadPdf, downloadPng, downloadSvg} from './chart';\nimport {getSelection, UploadSourceSpec, UrlSourceSpec, GedcomUrlDataSource, UploadedDataSource} from './datasource/load_data';\nimport CSVLoader, {Language} from \"./languages/languages-loader\";\nimport {argsToConfig, Config, ConfigPanel, configToArgs, DEFAULT_CONFIG, LanguagesArg, EthnicityArg, IdsArg, SexArg} from './config';\n\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE,\n}\n\ntype DataSourceSpec = UrlSourceSpec | UploadSourceSpec | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\nfunction startIndi(data: TopolaData | undefined) {\n    const egoGen = getEgoGen(data)\n    return {\n        id: data?.chartData?.indis?.[0]?.id || 'I0',  // lowest ID on the chart, focus at the root, not at the EGO\n        generation: egoGen !== undefined ? -parseInt(egoGen, 10) : 0\n    };\n}\n\nfunction getEgoIndi(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.other || {}).filter(([_, value]) => value.tag === \"EGO\")\n}\n\nfunction getEgoGen(data: TopolaData | undefined) {\n    return getEgoIndi(data)\n        .map(([_, value]) => value.tree.find(sub => sub.tag === \"GEN\")?.data)\n        .find(data => data !== undefined);\n}\n\nfunction loadLanguageOptions(data: TopolaData | undefined, allLanguages: Language[]) {\n    const gedcomLanguages = Array.from(getGedcomLanguages(data));\n    return allLanguages.filter((l: Language) => gedcomLanguages.includes(l.name)).sort();\n}\n\nfunction getGedcomLanguages(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"LANG\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\nfunction getEthnicities(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"_ETHN\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\n// TODO: dismantle?\nfunction getTribes(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"_TRIB\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded data.\n */\nfunction getArguments(location: H.Location<any>, allLanguages: Language[]): Arguments {\n    const chartTypes = new Map<string | undefined, ChartType>([\n        ['hourglass', ChartType.Hourglass]\n    ]);\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n    const view = getParam('view');\n    const hash = getParam('file');\n    const url = getParam('url');\n    const embedded = getParam('embedded') === 'true'; // False by default.\n    let sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n            allLanguages: allLanguages\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            allLanguages: allLanguages,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            allLanguages: allLanguages,\n            handleCors: getParam('handleCors') !== 'false', // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined\n\n    return {\n        sourceSpec,\n        selection,\n        // Hourglass is the default view.\n        chartType: chartTypes.get(view) || ChartType.Hourglass,\n        showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n        standalone: getParam('standalone') !== 'false' && !embedded && !staticUrl,\n        freezeAnimation: getParam('freeze') === 'true', // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n    /** All languages. */\n    const [allLanguages, setAllLanguages] = useState<Language[]>([]);\n\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (!selection || selection.id !== newSelection.id || selection!.generation !== newSelection.generation) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined, allLanguages: Language[]) {\n        if (data === undefined) {\n            return;\n        }\n        // Find if there are languages\n        config.languageOptions = loadLanguageOptions(data, allLanguages)\n        config.renderLanguagesOption = config.languageOptions.length > 0\n        // Find if there are ethnicities/tribes\n        config.renderEthnicityOption = Array.from(getEthnicities(data)).length > 0\n        idToIndiMap(data.chartData).forEach((indi) => {\n            indi.hideLanguages = config.languages === LanguagesArg.HIDE;\n            indi.hideEthnicity = config.ethnicity === EthnicityArg.HIDE;\n            indi.hideId = config.id === IdsArg.HIDE;\n            indi.hideSex = config.sex === SexArg.HIDE;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo, allLanguages?: Language[]) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n        }\n    }\n\n    // Function to load languages from CSV\n    const loadAllLanguages = async () => {\n        const allLanguages = await CSVLoader.loadLanguages('data/languages.csv') || [];\n        setAllLanguages(allLanguages);\n    };\n\n    // useEffect to load languages when pathname is '/view'\n    useEffect(() => {\n        loadAllLanguages();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add('bgLogo');\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove('bgLogo');\n        }\n\n        (async () => {\n            if (location.pathname !== '/view') {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location, allLanguages);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n            if (\n                state === AppState.INITIAL || isNewData(args.sourceSpec, args.selection)\n            ) {\n                setState(AppState.LOADING);\n                setSourceSpec(args.sourceSpec);\n                setStandalone(args.standalone);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    setData(data);\n                    setSelection(args.selection !== undefined ? args.selection : startIndi(data));\n                    toggleDetails(args.config, data, allLanguages);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE\n            ) {\n                setChartType(args.chartType);\n                setState(AppState.SHOWING_CHART);\n                updateDisplay(args.selection !== undefined ? args.selection : startIndi(data));\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart. Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        try {\n            await downloadPdf();\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_pdf',\n                    defaultMessage:\n                        'Failed to generate PDF file.' +\n                        ' Please try with a smaller diagram or download an SVG file.',\n                }),\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        try {\n            await downloadPng();\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_png',\n                    defaultMessage:'Failed to generate PNG file. Please try with a smaller diagram or download an SVG file.'\n                }),\n            );\n        }\n    }\n\n    function onDownloadSvg() {\n        downloadSvg();\n    }\n\n    function onCenterView() {\n        onSelection(startIndi(data))\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({id: 'tab.info', defaultMessage: 'Info'}),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: 'tab.settings',\n                            defaultMessage: 'Settings',\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data, allLanguages);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            selectedLanguage={config.selectedLanguage}\n                            hideLanguages={config.languages}\n                            hideEthnicity={config.ethnicity}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        showingChart={\n                            history.location.pathname === '/view' &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                            onCenterView,\n                        }}\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/view'}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_es from './translations/es.json';\nimport messages_pl from './translations/pl.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n    de: messages_de,\n    fr: messages_fr,\n    it: messages_it,\n    es: messages_es,\n    pl: messages_pl\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n    ReactDOM.render(\n        <p>Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.</p>,\n        document.querySelector('#root'),\n    );\n} else {\n    ReactDOM.render(\n        <IntlProvider locale={language} messages={messages[language]}>\n            <MediaContextProvider>\n                <style>{mediaStyles}</style>\n                <Router>\n                    <Route component={App}/>\n                </Router>\n            </MediaContextProvider>\n        </IntlProvider>,\n        document.querySelector('#root'),\n    );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from '../lib/topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n    ['abt', 'about'],\n    ['cal', 'calculated'],\n    ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n    const hasDay = date.day !== undefined;\n    const hasMonth = date.month !== undefined;\n    const hasYear = date.year !== undefined;\n    if (!hasDay && !hasMonth && !hasYear) {\n        return date.text || '';\n    }\n    const dateObject = toDateObject(date);\n    const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n    const formatOptions: Intl.DateTimeFormatOptions = {\n        day: hasDay ? 'numeric' : undefined,\n        month: hasMonth ? 'long' : undefined,\n        year: hasYear ? 'numeric' : undefined,\n    };\n    const translatedDate = new Intl.DateTimeFormat(\n        intl.locale,\n        formatOptions,\n    ).format(dateObject);\n\n    return [translatedQualifier, translatedDate]\n        .filter((dateElement) => dateElement)\n        .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to;\n    const translatedFromDate = fromDate && formatDate(fromDate, intl);\n    const translatedToDate = toDate && formatDate(toDate, intl);\n    if (translatedFromDate && translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.between',\n                defaultMessage: 'between {from} and {to}',\n            },\n            {from: translatedFromDate, to: translatedToDate},\n        );\n    }\n    if (translatedFromDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.after',\n                defaultMessage: 'after {from}',\n            },\n            {from: translatedFromDate},\n        );\n    }\n    if (translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.before',\n                defaultMessage: 'before {to}',\n            },\n            {to: translatedToDate},\n        );\n    }\n    return '';\n}\n\nexport function formatDateQualifier(\n    qualifier: string | undefined,\n    intl: IntlShape,\n): string {\n    const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n    return (\n        (lowerCaseQualifier &&\n            intl.formatMessage({\n                id: `date.${lowerCaseQualifier}`,\n                defaultMessage:\n                    DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n            })) ||\n        ''\n    );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n    intl: IntlShape,\n): string {\n    if (!dateOrRange) {\n        return '';\n    }\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, intl);\n    }\n    if (dateOrRange.dateRange) {\n        return formatDateRage(dateOrRange.dateRange, intl);\n    }\n    return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n    return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n    date1: TopolaDate | undefined,\n    date2: TopolaDate | undefined,\n): number {\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n        return 0;\n    }\n    if (date1.year !== date2.year) {\n        return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n        return 0;\n    }\n    if (date1.month !== date2.month) {\n        return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n        return date1.month - date2.month;\n    }\n    return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n    firstDateOrRange: DateOrRange | undefined,\n    secondDateOrRange: DateOrRange | undefined,\n): number {\n    const date1 =\n        firstDateOrRange &&\n        (firstDateOrRange.date ||\n            (firstDateOrRange.dateRange &&\n                (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n    const date2 =\n        secondDateOrRange &&\n        (secondDateOrRange.date ||\n            (secondDateOrRange.dateRange &&\n                (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n    return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n    range1: DateRange,\n    range2: DateRange,\n): boolean {\n    return (\n        compareTopolaDates(range1.from, range2.to) <= 0 &&\n        compareTopolaDates(range1.to, range2.from) >= 0\n    );\n}\n\nexport function isValidDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n): boolean {\n    // invalid when range is closed and start is before end\n    if (isDateRangeClosed(dateOrRange?.dateRange)) {\n        return (\n            compareTopolaDates(\n                dateOrRange?.dateRange?.from,\n                dateOrRange?.dateRange?.to,\n            ) <= 0\n        );\n    }\n    //valid when there is exact date or date range has start or end defined\n    return !!(\n        dateOrRange?.date ||\n        dateOrRange?.dateRange?.from ||\n        dateOrRange?.dateRange?.to\n    );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n    return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n    return new Date(\n        date.year !== undefined ? date.year! : 0,\n        date.month !== undefined ? date.month! - 1 : 0,\n        date.day !== undefined ? date.day! : 1,\n    );\n}\n","import {convertGedcom, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\nimport {Language} from \"../languages/languages-loader\";\n\nexport interface UploadSourceSpec {\n    source: DataSourceEnum.UPLOADED;\n    gedcom: string;\n    allLanguages: Language[];\n    hash: string;\n    images?: Map<string, string>;\n}\n\nexport interface UrlSourceSpec {\n    source: DataSourceEnum.GEDCOM_URL;\n    url: string;\n    allLanguages: Language[];\n    handleCors: boolean;\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(data: JsonGedcomData, selection?: IndiInfo): IndiInfo {\n    // If ID is not given, or it doesn't exist in the data, use the first ID in the data.\n    const id = selection && data.indis.some((i) => i.id === selection.id)\n        ? selection.id\n        : data.indis[0].id;\n    return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n    gedcom: string,\n    cacheId: string,\n    allLanguages: Language[],\n    images?: Map<string, string>\n): TopolaData {\n    const data = convertGedcom(gedcom, allLanguages, images || new Map());\n    const serializedData = JSON.stringify(data);\n    try {\n        sessionStorage.setItem(cacheId, serializedData);\n    } catch (e) {\n        console.warn('Failed to store data in session storage: ' + e);\n    }\n    return data;\n}\n\nasync function loadGedzip(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n    const entries = zip.getEntries();\n    let gedcom = undefined;\n    const images = new Map<string, string>();\n    for (const entry of entries) {\n        if (entry.entryName.endsWith('.ged')) {\n            if (gedcom) {\n                console.warn('Multiple GEDCOM files found in zip archive.');\n            } else {\n                gedcom = entry.getData().toString();\n            }\n        } else {\n            // Save image for later.\n            images.set(\n                entry.entryName,\n                URL.createObjectURL(new Blob([entry.getData()])),\n            );\n        }\n    }\n    if (!gedcom) {\n        throw new Error('GEDCOM file not found in zip archive.');\n    }\n    return {gedcom, images};\n}\n\nexport async function loadFile(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const fileHeader = await blob.slice(0, 2).text();\n    if (fileHeader === 'PK') {\n        return loadGedzip(blob);\n    }\n    return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n    url: string,\n    handleCors: boolean,\n    allLanguages: Language[]\n) {\n    try {\n        const cachedData = sessionStorage.getItem(url);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n\n    const urlToFetch = handleCors ? 'https://corsproxy.io/?' + encodeURIComponent(url) : url;\n    const response = await fetch(urlToFetch);\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/zip\")) {\n        const data = await response.blob();\n        const {gedcom, images} = await loadFile(data)\n        return prepareData(gedcom, url, allLanguages, images);\n    } else if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json();\n        return prepareData(data.contents, url, allLanguages, new Map());\n    } else if (contentType && contentType.includes(\"text/plain\")) {\n        const data = await response.text();\n        return prepareData(data, url, allLanguages, new Map());\n    }\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n    hash: string,\n    gedcom?: string,\n    allLanguages?: Language[],\n    images?: Map<string, string>\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n    if ((!gedcom) || (!allLanguages)) {\n        throw new TopolaError('ERROR_LOADING_UPLOADED_FILE',\n            'Error loading data. Please upload your file again.',\n        );\n    }\n    return prepareData(gedcom, hash, allLanguages, images);\n}\n\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n\n    isNewData(\n        newSource: SourceSelection<UploadSourceSpec>,\n        oldSource: SourceSelection<UploadSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.hash !== oldSource.spec.hash;\n    }\n\n    async loadData(source: SourceSelection<UploadSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadGedcom(\n                source.spec.hash,\n                source.spec.gedcom,\n                source.spec.allLanguages,\n                source.spec.images,\n            );\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n    isNewData(newSource: SourceSelection<UrlSourceSpec>, oldSource: SourceSelection<UrlSourceSpec>, data?: TopolaData) {\n        return newSource.spec.url !== oldSource.spec.url;\n    }\n    async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadFromUrl(source.spec.url, source.spec.handleCors, source.spec.allLanguages);\n        } catch (error) {\n            throw error;\n        }\n    }\n}"],"sourceRoot":""}