{"version":3,"sources":["util/gedcom_util.ts","util/date_util.ts","datasource/data_source.ts","util/age_util.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/top_bar.tsx","menu/url_menu.tsx","config.tsx","chart.tsx","datasource/wikitree.ts","app.tsx","index.tsx","util/error.ts","datasource/load_data.ts"],"names":["pointerToId","pointer","substring","length","idToIndiMap","data","map","Map","indis","forEach","indi","set","id","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","compareDates","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","has","title","startsWith","filterImage","convertGedcom","parseGedcom","json","gedcomEntriesToJson","TopolaError","chartData","getSoftware","sour","name","getName","person","names","filter","subEntry","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","DATE_QUALIFIERS","formatDate","date","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","dateElement","join","lowerCaseQualifier","formatMessage","defaultMessage","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","areDateRangesOverlapped","range1","range2","isValidDateOrRange","isDateRangeClosed","range","Date","DataSourceEnum","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","e","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","size","closeIcon","Icon","color","open","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","line","index","properties","target","eventSources","sources","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","event","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","render","Tab","Pane","notes","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","type","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","eventNotes","toEvent","family","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","events","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","message","resolve","reject","PARENT_READY","window","parent","postMessage","READY","GEDCOM","loadGedcom","Promise","addEventListener","onMessage","getI18nMessage","error","code","args","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","initMultiLingualLunrWithoutTrimmer","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","languages","pipelineFunctions","searchPipelineFunctions","language","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","apply","searchPipeline","query","split","s","slice","getNameLine","trim","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","generation","noResultsMessage","placeholder","selectFirstResult","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","gedcomFile","file","loadFile","URL","createObjectURL","imageFileNames","keys","hash","md5","state","htmlFor","accept","multiple","onChange","ScreenSize","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","values","link","href","Actions","Button","secondary","primary","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","standalone","greaterThanOrEqual","inverted","at","icon","ChartColors","Ids","Sex","DEFAULT_CONFIG","COLOR_BY_GENERATION","SHOW","sex","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","v","k","ID_ARG","HIDE","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","onload","inlineImage","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","getElementsByTagName","all","loadImage","drawImageOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","startIndi","selection","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","hideIds","hideSex","WIKITREE_APP_ID","PRIVATE_ID_PREFIX","getSessionStorageItem","sessionStorage","getItem","setSessionStorageItem","setItem","getApiOptions","handleCors","appId","apiUrl","getAncestors","cacheKey","cachedData","JSON","parse","getAncestorsApi","stringify","getRelatives","keysToFetch","getRelativesApi","getChildren","getSpouses","Name","concat","logInIfNeeded","authcode","getLoggedInUserName","clientLogin","clear","getFirstPerson","getSpouseKeys","Spouses","getAllAncestors","ancestors","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","getAllDescendants","everyone","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","loadData","hostname","firstPerson","spouseKeys","allAncestors","allDescendants","convertIndis","families","getFamilyId","getSet","spouse","getFamilies","hideId","FirstName","RealName","LastNameAtBirth","famc","Gender","BirthDate","BirthLocation","BirthDateDecade","parseDate","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","Photo","convertPerson","convertFams","idToName","spouses","wife","familySpouses","child","marriage_date","marriage_location","parsedDate","loadWikiTree","personNames","convertPersonNames","fullSizePhotoUrls","path","buildGedcom","spouse1","spouse2","getMarriedName","LastNameCurrent","nameParts","spousePersonNamePart","personNamePart","name1","name2","StringUtils","compareSimilarityPercent","married","aka","LastNameOther","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","nameToGedcom","level","eventToGedcom","imageToGedcom","fullSizePhotoUrl","pop","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","Set","AppState","WikiTreeDataSource","spec","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getParamFromSearch","getArguments","chartTypes","embedded","sourceSpec","GEDCOM_URL","windowSearch","WIKITREE","UPLOADED","EMBEDDED","parsedGen","isNaN","showSidePanel","showWikiTreeMenus","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setShowWikiTreeMenus","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","toggleDetails","shouldHideIds","shouldHideSex","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","remove","loadMoreFromWikitree","exact","Error","prepareData","cacheId","serializedData","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText"],"mappings":"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","file":"static/js/main.8215007d.chunk.js","sourcesContent":["import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const filePath = image.url.replaceAll('\\\\', '/');\n    const fileName = filePath.match(/[^/]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(filePath)) {\n      newImages.push({url: images.get(filePath)!, title: image.title});\n    } else if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n  const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n  const notMarriedName = names.find(\n    (subEntry) =>\n      subEntry.tree.filter(\n        (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n      ).length === 0,\n  );\n  const name = notMarriedName || names[0];\n  return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n  const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n\n  const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\n    ?.data;\n\n  return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(\n  objectEntry: GedcomEntry,\n): GedcomEntry | undefined {\n  return objectEntry.tree.find(\n    (entry) =>\n      entry.tag === 'FILE' &&\n      entry.data.startsWith('http') &&\n      isImageFile(entry.data),\n  );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = toDateObject(date);\n  const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate]\n    .filter((dateElement) => dateElement)\n    .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\nexport function formatDateQualifier(\n  qualifier: string | undefined,\n  intl: IntlShape,\n): string {\n  const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n  return (\n    (lowerCaseQualifier &&\n      intl.formatMessage({\n        id: `date.${lowerCaseQualifier}`,\n        defaultMessage:\n          DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n      })) ||\n    ''\n  );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n  date1: TopolaDate | undefined,\n  date2: TopolaDate | undefined,\n): number {\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange &&\n        (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange &&\n        (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n  return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n  range1: DateRange,\n  range2: DateRange,\n): boolean {\n  return (\n    compareTopolaDates(range1.from, range2.to) <= 0 &&\n    compareTopolaDates(range1.to, range2.from) >= 0\n  );\n}\n\nexport function isValidDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n): boolean {\n  // invalid when range is closed and start is before end\n  if (isDateRangeClosed(dateOrRange?.dateRange)) {\n    return (\n      compareTopolaDates(\n        dateOrRange?.dateRange?.from,\n        dateOrRange?.dateRange?.to,\n      ) <= 0\n    );\n  }\n  //valid when there is exact date or date range has start or end defined\n  return !!(\n    dateOrRange?.date ||\n    dateOrRange?.dateRange?.from ||\n    dateOrRange?.dateRange?.to\n  );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n  return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n  return new Date(\n    date.year !== undefined ? date.year! : 0,\n    date.month !== undefined ? date.month! - 1 : 0,\n    date.day !== undefined ? date.day! : 1,\n  );\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import {Date as TopolaDate} from 'topola/dist/data';\nimport {IntlShape} from 'react-intl';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  areDateRangesOverlapped,\n  compareDates,\n  formatDateQualifier,\n  isDateRangeClosed,\n  isValidDateOrRange,\n  toDateObject,\n} from './date_util';\n\nfunction formatExactAge(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  const qualifier = birthDate.qualifier || deathDate.qualifier;\n  const translatedQualifier =\n    qualifier && formatDateQualifier(qualifier, intl) + ' ';\n\n  return intl.formatMessage(\n    {\n      id: 'age.exact',\n      defaultMessage:\n        '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears, qualifier: translatedQualifier},\n  );\n}\n\nfunction formatAgeMoreThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.more',\n      defaultMessage:\n        'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeLessThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.less',\n      defaultMessage:\n        'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeBetween(\n  birthDateFrom: TopolaDate,\n  birthDateTo: TopolaDate,\n  deathDateFrom: TopolaDate,\n  deathDateTo: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\n  const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\n  return intl.formatMessage(\n    {\n      id: 'age.between',\n      defaultMessage:\n        'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\n  );\n}\n\nfunction canCalculateAge(\n  birthDate: DateOrRange | undefined,\n  deathDate: DateOrRange | undefined,\n): boolean {\n  if (birthDate && deathDate) {\n    // cannot calculate if there is no valid birth or death date\n    if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\n      return false;\n    }\n    //cannot calculate if death date is before birth date\n    if (compareDates(birthDate, deathDate) > 0) {\n      return false;\n    }\n    // cannot calculate if closed date range for birth or death are overlapping\n    if (\n      birthDate.dateRange &&\n      deathDate.dateRange &&\n      isDateRangeClosed(birthDate?.dateRange) &&\n      isDateRangeClosed(deathDate?.dateRange)\n    ) {\n      return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction calcDateDifferenceInYears(\n  firstDate: TopolaDate,\n  secondDate: TopolaDate,\n): number {\n  const firstDateObject = toDateObject(firstDate);\n  const secondDateObject = toDateObject(secondDate);\n\n  const startYear = firstDateObject.getUTCFullYear();\n\n  let yearDiff = secondDateObject.getUTCFullYear() - startYear;\n  let monthDiff =\n    secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\n  if (monthDiff < 0) {\n    yearDiff--;\n    monthDiff += 12;\n  }\n  const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\n  if (dayDiff < 0) {\n    if (monthDiff <= 0) {\n      yearDiff--;\n    }\n  }\n  return Math.abs(yearDiff);\n}\n\nexport function calcAge(\n  birthGedcomDate: string | undefined,\n  deathGedcomDate: string | undefined,\n  intl: IntlShape,\n): string | undefined {\n  if (birthGedcomDate && deathGedcomDate) {\n    const birthDateOrRange = getDate(birthGedcomDate);\n    const deathDateOrRange = getDate(deathGedcomDate);\n    if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\n      if (birthDateOrRange?.date) {\n        if (deathDateOrRange?.date) {\n          return formatExactAge(\n            birthDateOrRange.date,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange.date,\n            birthDateOrRange.date,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (\n        birthDateOrRange?.dateRange?.from &&\n        birthDateOrRange?.dateRange?.to\n      ) {\n        if (deathDateOrRange?.date) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.date,\n            deathDateOrRange?.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.from) {\n        if (deathDateOrRange?.date) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.to) {\n        if (deathDateOrRange?.date) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n      }\n    }\n  }\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n  ['birth', 'Birth name'],\n  ['married', 'Married name'],\n  ['maiden', 'Maiden name'],\n  ['immigrant', 'Immigrant name'],\n  ['aka', 'Also known as'],\n]);\n\ninterface Props {\n  tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n  const normalizedTag = props.tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n","import {\n  Container,\n  Icon,\n  Image,\n  Label,\n  Message,\n  Modal,\n  Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageFailed, setImageFailed] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n\n  if (imageLoaded && imageSrc !== props.url) {\n    setImageLoaded(false);\n  }\n  return (\n    <>\n      <Image\n        className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n        onClick={() => setImageOpen(true)}\n        onLoad={() => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(false);\n        }}\n        onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(true);\n          e.currentTarget.alt = '';\n        }}\n        src={props.url}\n        alt={props.title || props.filename}\n        centered={true}\n      />\n      <Placeholder\n        className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\n      >\n        <Placeholder.Image square />\n      </Placeholder>\n      {imageFailed && (\n        <Container fluid textAlign=\"center\">\n          <Message negative compact>\n            <Message.Header>\n              <FormattedMessage\n                id=\"error.failed_to_load_image\"\n                defaultMessage={'Failed to load image file'}\n              />\n            </Message.Header>\n          </Message>\n        </Container>\n      )}\n      <Modal\n        basic\n        size=\"large\"\n        closeIcon={<Icon name=\"close\" color=\"red\" />}\n        open={imageOpen}\n        onClose={() => setImageOpen(false)}\n        onOpen={() => setImageOpen(true)}\n        centered={false}\n      >\n        <Modal.Header>{props.title}</Modal.Header>\n        <Modal.Content image>\n          <Image\n            className=\"modal-image\"\n            src={props.url}\n            alt={props.title || props.filename}\n            label={<Label attached=\"bottom\" content={props.filename} />}\n            wrapped\n          />\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n  return (\n    <>\n      {props.lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {\n  Icon,\n  Item,\n  List,\n  Menu,\n  MenuItemProps,\n  Popup,\n  Tab,\n} from 'semantic-ui-react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport * as React from 'react';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from 'topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport interface Source {\n  title?: string;\n  author?: string;\n  page?: string;\n  date?: DateOrRange;\n  publicationInfo?: string;\n}\n\ninterface Props {\n  images?: Image[];\n  notes?: string[][];\n  sources?: Source[];\n  indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n  return (\n    !!images &&\n    images.map((image, index) => (\n      <List key={index}>\n        <List.Item>\n          <WrappedImage\n            url={image.url}\n            filename={image.filename}\n            title={image.title}\n          />\n        </List.Item>\n      </List>\n    ))\n  );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n  return (\n    !!notes?.length &&\n    notes.map((note, index) => (\n      <div key={index}>\n        <MultilineText\n          lines={note.map((line, index) => (\n            <i key={index}>{line}</i>\n          ))}\n        />\n      </div>\n    ))\n  );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n  return (\n    !!sources?.length && (\n      <List>\n        {sources.map((source, index) => (\n          <List.Item key={index}>\n            <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\" />\n            <List.Content>\n              <List.Header>\n                <Linkify properties={{target: '_blank'}}>\n                  {[source.author, source.title, source.publicationInfo]\n                    .filter((sourceElement) => sourceElement)\n                    .join(', ')}\n                </Linkify>\n              </List.Header>\n              <List.Description>\n                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                {source.date\n                  ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                  : null}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    )\n  );\n}\n\nexport function EventExtras(props: Props) {\n  const intl = useIntl();\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [indi, setIndi] = useState('');\n\n  if (!indi || indi !== props.indi) {\n    setActiveIndex(-1);\n    setIndi(props.indi);\n  }\n\n  function handleTabOnClick(\n    event: React.MouseEvent<HTMLAnchorElement>,\n    menuItemProps: MenuItemProps,\n  ) {\n    menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n      ? setActiveIndex(menuItemProps.index)\n      : setActiveIndex(-1);\n  }\n\n  const imageTab = props.images?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"camera\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n  };\n\n  const noteTab = props.notes?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"sticky note outline\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n  };\n\n  const sourceTab = props.sources?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"quote right\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n  };\n\n  const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n    tab ? [tab] : [],\n  );\n\n  if (panes.length) {\n    return (\n      <Item.Description>\n        <Tab\n          className=\"event-extras\"\n          activeIndex={activeIndex}\n          renderActiveOnly={true}\n          menu={{\n            tabular: true,\n            attached: true,\n            compact: true,\n            borderless: true,\n          }}\n          panes={panes}\n        />\n      </Item.Description>\n    );\n  }\n  return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {calcAge} from '../util/age_util';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getImageFileEntry,\n  getFileName,\n  getName,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {pointerToId} from '../util/gedcom_util';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\n\nfunction PersonLink(props: {person: GedcomEntry}) {\n  const location = useLocation();\n\n  const name = getName(props.person);\n\n  const search = queryString.parse(location.search);\n  search['indi'] = pointerToId(props.person.pointer);\n\n  return (\n    <Item.Meta>\n      <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n        {name ? (\n          name\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Link>\n    </Item.Meta>\n  );\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface EventData {\n  type: string;\n  date?: DateOrRange;\n  age?: string;\n  personLink?: GedcomEntry;\n  place?: string[];\n  images?: Image[];\n  notes?: string[][];\n  sources?: Source[];\n  indi: string;\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction EventHeader(props: {event: EventData}) {\n  const intl = useIntl();\n  return (\n    <div className=\"event-header\">\n      <Header as=\"span\" size=\"small\">\n        <TranslatedTag tag={props.event.type} />\n      </Header>\n      {props.event.date ? (\n        <Header as=\"span\" textAlign=\"right\" sub>\n          {formatDateOrRange(props.event.date, intl)}\n        </Header>\n      ) : null}\n    </div>\n  );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (!spouseReference) {\n    return undefined;\n  }\n  return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction getAge(\n  eventEntry: GedcomEntry,\n  indi: string,\n  gedcom: GedcomData,\n  intl: IntlShape,\n): string | undefined {\n  if (eventEntry.tag !== 'DEAT') {\n    return undefined;\n  }\n  const deathDate = resolveDate(eventEntry);\n\n  const birthDate = gedcom.indis[indi].tree\n    .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\n    .map((birthEvent) => resolveDate(birthEvent))\n    .find((topolaDate) => topolaDate);\n\n  if (!birthDate || !deathDate) {\n    return undefined;\n  }\n  return calcAge(birthDate?.data, deathDate?.data, intl);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n  return entry.tree\n    .filter((subEntry) => 'OBJE' === subEntry.tag)\n    .map((objectEntry) =>\n      dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n    )\n    .map((objectEntry) => getImageFileEntry(objectEntry))\n    .flatMap((imageFileEntry) =>\n      imageFileEntry\n        ? [\n            {\n              url: imageFileEntry?.data || '',\n              filename: getFileName(imageFileEntry) || '',\n            },\n          ]\n        : [],\n    );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n  return entry.tree\n    .filter((subEntry) => 'SOUR' === subEntry.tag)\n    .map((sourceEntryReference) => {\n      const sourceEntry = dereference(\n        sourceEntryReference,\n        gedcom,\n        (gedcom) => gedcom.other,\n      );\n\n      const title = sourceEntry.tree.find(\n        (subEntry) => 'TITL' === subEntry.tag,\n      );\n\n      const abbr = sourceEntry.tree.find(\n          (subEntry) => 'ABBR' === subEntry.tag,\n      );\n\n      const author = sourceEntry.tree.find(\n        (subEntry) => 'AUTH' === subEntry.tag,\n      );\n\n      const publicationInfo = sourceEntry.tree.find(\n        (subEntry) => 'PUBL' === subEntry.tag,\n      );\n\n      const page = sourceEntryReference.tree.find(\n        (subEntry) => 'PAGE' === subEntry.tag,\n      );\n\n      const sourceData = sourceEntryReference.tree.find(\n        (subEntry) => 'DATA' === subEntry.tag,\n      );\n\n      const date = sourceData ? resolveDate(sourceData) : undefined;\n\n      return {\n        title: title?.data || abbr?.data,\n        author: author?.data,\n        page: page?.data,\n        date: date ? getDate(date.data) : undefined,\n        publicationInfo: publicationInfo?.data,\n      };\n    });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n  return entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => getData(note));\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      age: getAge(entry, indi, gedcom, intl),\n      place: eventPlace(entry),\n      images: eventImages(entry, gedcom),\n      notes: eventNotes(entry, gedcom),\n      sources: eventSources(entry, gedcom),\n      indi: indi,\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n): EventData[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      personLink: getSpouse(indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      images: eventImages(familyMarriageEvent, gedcom),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n      sources: eventSources(familyMarriageEvent, gedcom),\n      indi: indi,\n    };\n  });\n}\n\nfunction Event(props: {event: EventData}) {\n  return (\n    <Item>\n      <Item.Content>\n        <EventHeader event={props.event} />\n        {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\n        {!!props.event.personLink && (\n          <PersonLink person={props.event.personLink} />\n        )}\n        {!!props.event.place && (\n          <Item.Description>{props.event.place}</Item.Description>\n        )}\n        <EventExtras\n          images={props.event.images}\n          notes={props.event.notes}\n          sources={props.event.sources}\n          indi={props.event.indi}\n        />\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport function Events(props: Props) {\n  const intl = useIntl();\n\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    props.entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date)),\n  );\n  if (events.length) {\n    return (\n      <>\n        {events.map((event, index) => (\n          <Event event={event} key={index} />\n        ))}\n      </>\n    );\n  }\n  return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getFileName,\n  getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <Header sub>\n        <TranslatedTag tag={entry.tag} />\n      </Header>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n  const imageFileEntry = getImageFileEntry(objectEntry);\n\n  return imageFileEntry ? (\n    <div className=\"person-image\">\n      <WrappedImage\n        url={imageFileEntry.data}\n        filename={getFileName(imageFileEntry) || ''}\n      />\n    </div>\n  ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  const fullName = entry.data.replaceAll('/', '');\n\n  const nameType = entry.tree.find(\n    (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n  )?.data;\n\n  return (\n    <>\n      <Header as=\"span\" size=\"large\">\n        {fullName ? (\n          fullName\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Header>\n      {fullName && nameType && (\n        <Item.Meta>\n          <TranslatedTag tag={nameType} />\n        </Item.Meta>\n      )}\n    </>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nexport function Details(props: Props) {\n  const entries = props.gedcom.indis[props.indi].tree;\n  const entriesWithData = entries\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n    .filter(hasData);\n\n  return (\n    <div className=\"details\">\n      <Item.Group divided>\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n        <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </Item.Group>\n    </div>\n  );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        resolve(data);\n      } catch (error) {\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","import {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n  const newProps = {...props};\n  // Remove menuType from props to avoid error message in the console.\n  delete newProps.menuType;\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\n      ) : (\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n      )}\n    </>\n  );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n      self.initMultiLingualLunrWithoutTrimmer(this, [\n        'de',\n        'en',\n        'fr',\n        'it',\n        'ru',\n      ]);\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  private initMultiLingualLunrWithoutTrimmer(\n    lunrInstance: any,\n    languages: string[],\n  ): void {\n    let wordCharacters = '';\n    const pipelineFunctions: PipelineFunction[] = [];\n    const searchPipelineFunctions: PipelineFunction[] = [];\n    languages.forEach((language) => {\n      if (language === 'en') {\n        wordCharacters += '\\\\w';\n        pipelineFunctions.unshift(lunr.stopWordFilter);\n        pipelineFunctions.push(lunr.stemmer);\n        searchPipelineFunctions.push(lunr.stemmer);\n      } else {\n        wordCharacters += lunr[language].wordCharacters;\n        if (lunr[language].stopWordFilter) {\n          pipelineFunctions.unshift(lunr[language].stopWordFilter);\n        }\n        if (lunr[language].stemmer) {\n          pipelineFunctions.push(lunr[language].stemmer);\n          searchPipelineFunctions.push(lunr[language].stemmer);\n        }\n      }\n    });\n    lunrInstance.pipeline.reset();\n    lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n    if (lunrInstance.searchPipeline) {\n      lunrInstance.searchPipeline.reset();\n      lunrInstance.searchPipeline.add.apply(\n        lunrInstance.searchPipeline,\n        searchPipelineFunctions,\n      );\n    }\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `${s} ${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n  const [searchString, setSearchString] = useState('');\n  const searchIndex = useRef<SearchIndex>();\n  const intl = useIntl();\n\n  function getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, intl);\n    const deathDate = formatDateOrRange(indi.death, intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  function displaySearchResult(result: SearchResult): SearchResultProps {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: getDescriptionLine(result.indi),\n    } as SearchResultProps;\n  }\n\n  /** On search input change. */\n  function handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = searchIndex\n      .current!.search(input)\n      .map((result) => displaySearchResult(result));\n    setSearchResults(results);\n  }\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n  /** On search result selected. */\n  function handleResultSelect(id: string) {\n    // analyticsEvent('search_result_selected');\n    props.onSelection({id, generation: 0});\n    setSearchString('');\n  }\n\n  /** On search string changed. */\n  function onChange(value: string) {\n    debouncedHandleSearch.current(value);\n    setSearchString(value);\n  }\n\n  // Initialize the search index.\n  useEffect(() => {\n    searchIndex.current = buildSearchIndex(props.data);\n  }, [props.data]);\n\n  return (\n    <Search\n      onSearchChange={(_, data) => onChange(data.value!)}\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n      results={searchResults}\n      noResultsMessage={intl.formatMessage({\n        id: 'menu.search.no_results',\n        defaultMessage: 'No results found',\n      })}\n      placeholder={intl.formatMessage({\n        id: 'menu.search.placeholder',\n        defaultMessage: 'Search for people',\n      })}\n      selectFirstResult={true}\n      value={searchString}\n      id=\"search\"\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n    const {gedcom, images} = await loadFile(gedcomFile);\n\n    // Convert uploaded images to object URLs.\n    filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n    // Hash GEDCOM contents with uploaded image file names.\n    const imageFileNames = Array.from(images.keys()).sort().join('|');\n    const hash = md5(md5(gedcom) + imageFileNames);\n\n    // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n    const search = queryString.parse(location.search);\n    const historyPush = search.file === hash ? history.replace : history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data: gedcom, images},\n    });\n  }\n\n  const content = (\n    <>\n      <Icon name=\"folder open\" />\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n    </>\n  );\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">{content}</Menu.Item>\n        </label>\n      ) : (\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n          {content}\n        </Dropdown.Item>\n      )}\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n        id=\"fileInput\"\n        multiple\n        onChange={handleUpload}\n      />\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n}\n\ninterface Props {\n    /** True if the application is currently showing a chart. */\n    showingChart: boolean;\n    /** Data used for the search index. */\n    data?: JsonGedcomData;\n    standalone: boolean;\n    /** Whether to show the \"All relatives\" chart type in the menu. */\n    allowAllRelativesChart: boolean;\n    eventHandlers: EventHandlers;\n    /** Whether to show additional WikiTree menus. */\n    showWikiTreeMenus: boolean;\n}\n\nexport function TopBar(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    function changeView(view: string) {\n        const search = queryString.parse(location.search);\n        if (search.view !== view) {\n            search.view = view;\n            location.search = queryString.stringify(search);\n            history.push(location);\n        }\n    }\n\n    function chartMenus(screenSize: ScreenSize) {\n        if (!props.showingChart) {\n            return null;\n        }\n        const chartTypeItems = (\n            <>\n                <Dropdown.Item onClick={() => changeView('hourglass')}>\n                    <Icon name=\"hourglass\"/>\n                    <FormattedMessage\n                        id=\"menu.hourglass\"\n                        defaultMessage=\"Hourglass chart\"\n                    />\n                </Dropdown.Item>\n                {props.allowAllRelativesChart ? (\n                    <Dropdown.Item onClick={() => changeView('relatives')}>\n                        <Icon name=\"users\"/>\n                        <FormattedMessage\n                            id=\"menu.relatives\"\n                            defaultMessage=\"All relatives\"\n                        />\n                    </Dropdown.Item>\n                ) : null}\n            </>\n        );\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage\n                                        id=\"menu.download\"\n                                        defaultMessage=\"Download\"\n                                    />\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage\n                                        id=\"menu.pdf_file\"\n                                        defaultMessage=\"PDF file\"\n                                    />\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage\n                                        id=\"menu.png_file\"\n                                        defaultMessage=\"PNG file\"\n                                    />\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage\n                                        id=\"menu.svg_file\"\n                                        defaultMessage=\"SVG file\"\n                                    />\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"eye\"/>\n                                    <FormattedMessage id=\"menu.view\" defaultMessage=\"View\"/>\n                                </div>\n                            }\n                            className=\"item\"\n                        >\n                            <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n                        </Dropdown>\n                        <SearchBar\n                            data={props.data!}\n                            onSelection={props.eventHandlers.onSelection}\n                            {...props}\n                        />\n                    </>\n                );\n\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                            <Icon name=\"download\"/>\n                            <FormattedMessage\n                                id=\"menu.download_pdf\"\n                                defaultMessage=\"Download PDF\"\n                            />\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                            <Icon name=\"download\"/>\n                            <FormattedMessage\n                                id=\"menu.download_png\"\n                                defaultMessage=\"Download PNG\"\n                            />\n                        </Dropdown.Item>\n                        <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                            <Icon name=\"download\"/>\n                            <FormattedMessage\n                                id=\"menu.download_svg\"\n                                defaultMessage=\"Download SVG\"\n                            />\n                        </Dropdown.Item>\n\n                        <Dropdown.Divider/>\n                        {chartTypeItems}\n                        <Dropdown.Divider/>\n                    </>\n                );\n        }\n    }\n\n    function fileMenus(screenSize: ScreenSize) {\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                // Show dropdown if chart is shown, otherwise show individual menu items.\n                const menus = props.showingChart ? (\n                    <Dropdown\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\"\n                    >\n                        <Dropdown.Menu>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                ) : (\n                    <>\n                        <UploadMenu menuType={MenuType.Menu} {...props} />\n                        <UrlMenu menuType={MenuType.Menu} {...props} />\n                    </>\n                );\n                return menus;\n\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        <Dropdown.Divider/>\n                    </>\n                );\n        }\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {fileMenus(ScreenSize.SMALL)}\n                        {chartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {fileMenus(ScreenSize.LARGE)}\n                {chartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu\n                as={Media}\n                greaterThanOrEqual=\"large\"\n                attached=\"top\"\n                inverted\n                color=\"blue\"\n                size=\"large\"\n            >\n                {desktopMenus()}\n            </Menu>\n            <Menu\n                as={Media}\n                at=\"small\"\n                attached=\"top\"\n                inverted\n                color=\"blue\"\n                size=\"large\"\n            >\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setUrl('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  function handleLoad() {\n    setDialogOpen(false);\n    if (url) {\n      // analyticsEvent('url_selected');\n      history.push({\n        pathname: '/view',\n        search: queryString.stringify({url}),\n      });\n    }\n  }\n\n  function loadFromUrlModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleLoad}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              value={url}\n              onChange={(_, data) => setUrl(data.value)}\n              ref={inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topolaproxy.bieda.it/\">\n                      topolaproxy.bieda.it (cors-anywhere proxy)\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleLoad}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </MenuItem>\n      {loadFromUrlModal()}\n    </>\n  );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport enum Ids {\n  HIDE,\n  SHOW,\n}\n\nexport enum Sex {\n  HIDE,\n  SHOW,\n}\n\nexport interface Config {\n  color: ChartColors;\n  id: Ids;\n  sex: Sex;\n}\n\nexport const DEFAULT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n  id: Ids.SHOW,\n  sex: Sex.SHOW,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, Ids>([\n  ['h', Ids.HIDE],\n  ['s', Ids.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<Ids, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, Sex>([\n  ['h', Sex.HIDE],\n  ['s', Sex.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<Sex, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n    id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n    sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {\n    c: COLOR_ARG_INVERSE.get(config.color),\n    i: ID_ARG_INVERSE.get(config.id),\n    s: SEX_ARG_INVERSE.get(config.sex),\n  };\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <Form className=\"details\">\n      <Item.Group>\n        <Item>\n          <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"none\"\n                checked={props.config.color === ChartColors.NO_COLOR}\n                onClick={() =>\n                  props.onChange({...props.config, color: ChartColors.NO_COLOR})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"generation\"\n                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                onClick={() =>\n                  props.onChange({...props.config, color: ChartColors.COLOR_BY_GENERATION})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by sex\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"gender\"\n                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                onClick={() =>\n                  props.onChange({...props.config, color: ChartColors.COLOR_BY_SEX})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n        <Item>\n        <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.ids.HIDE\" defaultMessage=\"hide\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"hide\"\n                checked={props.config.id === Ids.HIDE}\n                onClick={() =>\n                  props.onChange({...props.config, id: Ids.HIDE})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.ids.SHOW\" defaultMessage=\"show\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"show\"\n                checked={props.config.id === Ids.SHOW}\n                onClick={() =>\n                  props.onChange({...props.config, id: Ids.SHOW})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n        <Item>\n        <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.sex\" defaultMessage=\"Sex\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.sex.HIDE\" defaultMessage=\"hide\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"hide\"\n                checked={props.config.sex === Sex.HIDE}\n                onClick={() =>\n                  props.onChange({...props.config, sex: Sex.HIDE})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage tagName=\"label\" id=\"config.sex.SHOW\" defaultMessage=\"show\"/>\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"show\"\n                checked={props.config.sex === Sex.SHOW}\n                onClick={() =>\n                  props.onChange({...props.config, sex: Sex.SHOW})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    </Form>\n  );\n}\n","import {ChartColors, Ids, Sex} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n  svg.removeAttribute('transform');\n  const parent = select('#svgContainer').node() as Element;\n  const scale = zoomTransform(parent).k;\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n  svg.setAttribute(\n    'height',\n    String(Number(svg.getAttribute('height')) / scale),\n  );\n  svg.querySelector('#chart')!.removeAttribute('transform');\n\n  return svg;\n}\n\nfunction getSvgContents() {\n  return new XMLSerializer().serializeToString(getStrippedSvg());\n}\n\nasync function getSvgContentsWithInlinedImages() {\n  const svg = getStrippedSvg();\n  await inlineImages(svg);\n  return new XMLSerializer().serializeToString(svg);\n}\n\n/** Shows the print dialog to print the currently displayed chart. */\nexport function printChart() {\n  const printWindow = document.createElement('iframe');\n  printWindow.style.position = 'absolute';\n  printWindow.style.top = '-1000px';\n  printWindow.style.left = '-1000px';\n  printWindow.onload = () => {\n    printWindow.contentDocument!.open();\n    printWindow.contentDocument!.write(getSvgContents());\n    printWindow.contentDocument!.close();\n    // Doesn't work on Firefox without the setTimeout.\n    setTimeout(() => {\n      printWindow.contentWindow!.focus();\n      printWindow.contentWindow!.print();\n      printWindow.parentNode!.removeChild(printWindow);\n    }, 500);\n  };\n  document.body.appendChild(printWindow);\n}\n\nexport async function downloadSvg() {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  saveAs(blob, 'topola.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n  const canvas = await drawOnCanvas();\n  const blob = await canvasToBlob(canvas, 'image/png');\n  saveAs(blob, 'topola.png');\n}\n\nexport async function downloadPdf() {\n  // Lazy load jspdf.\n  const {default: jspdf} = await import('jspdf');\n  const canvas = await drawOnCanvas();\n  const doc = new jspdf({\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\n    unit: 'pt',\n    format: [canvas.width, canvas.height],\n  });\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n  doc.save('topola.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Hourglass:\n      return HourglassChart;\n    case ChartType.Relatives:\n      return RelativesChart;\n    case ChartType.Fancy:\n      return FancyChart;\n    default:\n      // Fall back to hourglass chart.\n      return HourglassChart;\n  }\n}\n\nfunction getRendererType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Fancy:\n      return CircleRenderer;\n    default:\n      // Use DetailedRenderer by default.\n      return DetailedRenderer;\n  }\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n  hideIds?: Ids;\n  hideSex?: Sex;\n}\n\nclass ChartWrapper {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n  /** Props that will be used for rerendering. */\n  private rerenderProps?: ChartProps;\n  private rerenderResetPosition?: boolean;\n\n  zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  renderChart(\n    props: ChartProps,\n    intl: IntlShape,\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      this.rerenderProps = props;\n      this.rerenderResetPosition = args.resetPosition;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: props.data,\n        chartType: getChartType(props.chartType),\n        renderer: getRendererType(props.chartType),\n        svgSelector: '#chart',\n        indiCallback: (info) => props.onSelection(info),\n        colors: chartColors.get(props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: intl.locale,\n      });\n    } else {\n      this.chart!.setData(props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: props.selection.id,\n      baseGeneration: props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        // Use `this.rerenderProps` instead of the props in scope because\n        // the props may have been updated in the meantime.\n        this.renderChart(this.rerenderProps!, intl, {\n          initialRender: false,\n          resetPosition: !!this.rerenderResetPosition,\n        });\n      }\n    });\n  }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n  const chartWrapper = useRef(new ChartWrapper());\n  const prevProps = usePrevious(props);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (prevProps) {\n      const initialRender =\n        props.chartType !== prevProps?.chartType ||\n        props.colors !== prevProps?.colors ||\n        props.hideIds !== prevProps?.hideIds ||\n        props.hideSex !== prevProps?.hideSex;\n      const resetPosition =\n        props.chartType !== prevProps?.chartType ||\n        props.data !== prevProps.data ||\n        props.selection !== prevProps.selection;\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender,\n        resetPosition,\n      });\n    } else {\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender: true,\n        resetPosition: true,\n      });\n    }\n  });\n\n  return (\n    <div id=\"svgContainer\">\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n        <button\n          className=\"zoom-in\"\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\n        >\n          +\n        </button>\n        <button\n          className=\"zoom-out\"\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\n        >\n          −\n        </button>\n      </Media>\n      <svg id=\"chartSvg\">\n        <g id=\"chart\" />\n      </svg>\n    </div>\n  );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\nimport {isValidDateOrRange} from '../util/date_util';\nimport {StringUtils} from 'turbocommons-ts';\nimport {\n  getAncestors as getAncestorsApi,\n  getRelatives as getRelativesApi,\n  clientLogin,\n  getLoggedInUserName,\n  Person,\n} from 'wikitree-js';\n\nconst WIKITREE_APP_ID = 'topola-viewer';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\nfunction getApiOptions(handleCors: boolean) {\n  return Object.assign(\n    {appId: WIKITREE_APP_ID},\n    handleCors\n      ? {\n          apiUrl:\n            'https://topolaproxy.bieda.it/https://api.wikitree.com/api.php',\n        }\n      : {},\n  );\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const result = await getAncestorsApi(key, {}, getApiOptions(handleCors));\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await getRelativesApi(\n    keysToFetch,\n    {getChildren: true, getSpouses: true},\n    getApiOptions(handleCors),\n  );\n  if (!response) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  response.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(response);\n}\n\nasync function logInIfNeeded(\n  authcode: string | undefined,\n  handleCors: boolean,\n) {\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode, {appId: WIKITREE_APP_ID});\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n}\n\nasync function getFirstPerson(key: string, handleCors: boolean) {\n  const person = (await getRelatives([key], handleCors))[0];\n  if (!person?.Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n  return person;\n}\n\nfunction getSpouseKeys(person: Person) {\n  return Object.values(person.Spouses || {}).map((s) => s.Name);\n}\n\nasync function getAllAncestors(keys: string[], handleCors: boolean) {\n  const ancestors = await Promise.all(\n    keys.map((key) => getAncestors(key, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n\n  return ancestorDetails.concat(privateAncestors);\n}\n\nasync function getAllDescendants(key: string, handleCors: boolean) {\n  const everyone: Person[] = [];\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children || {}).map((c) => c.Name),\n    );\n    generation++;\n  }\n  return everyone;\n}\n\nasync function loadData(key: string, authcode?: string) {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  await logInIfNeeded(authcode, handleCors);\n\n  const firstPerson = await getFirstPerson(key, handleCors);\n  const spouseKeys = getSpouseKeys(firstPerson);\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const allAncestors = getAllAncestors([key].concat(spouseKeys), handleCors);\n  // Fetch descendants and their spouses.\n  const allDescendants = getAllDescendants(key, handleCors);\n\n  const everyone: Person[] = [\n    ...(await allAncestors),\n    ...(await allDescendants),\n  ];\n  // Make sure the list contains unique elements.\n  return Array.from(\n    new Map(everyone.map((person) => [person.Id, person])).values(),\n  );\n}\n\nfunction getFamilies(people: Person[]) {\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  people.forEach((person) => {\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n    }\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n      });\n    }\n  });\n  return families;\n}\n\nfunction getChildren(people: Person[]) {\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n\n  people.forEach((person) => {\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(children, famId).add(person.Id);\n    }\n  });\n  return children;\n}\n\nfunction getSpouses(people: Person[]) {\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n\n  people.forEach((person) => {\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n  });\n  return spouses;\n}\n\nfunction convertIndis(people: Person[], intl: IntlShape) {\n  const families = getFamilies(people);\n  return people.map((person) => {\n    const indi = convertPerson(person, intl);\n    indi.fams = Array.from(getSet(families, person.Id));\n    return indi;\n  });\n}\n\nfunction convertFams(people: Person[]) {\n  // Map from numerical id to human-readable id.\n  const idToName = new Map(people.map((person) => [person.Id, person.Name]));\n  const children = getChildren(people);\n  const spouses = getSpouses(people);\n  return Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n}\n\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  const everyone = await loadData(key, authcode);\n\n  const indis = convertIndis(everyone, intl);\n  const fams = convertFams(everyone);\n  const chartData = normalizeGedcom({indis, fams});\n\n  //Map from human-readable person id to person names\n  const personNames = new Map(\n    everyone.map((person) => [person.Name, convertPersonNames(person)]),\n  );\n  // Map from human-readable person id to fullSizeUrl of person photo.\n  const fullSizePhotoUrls = new Map(\n    everyone\n      .filter((person) => person.PhotoData?.path)\n      .map((person) => [\n        person.Name,\n        `https://www.wikitree.com${person.PhotoData!.path}`,\n      ]),\n  );\n  const gedcom = buildGedcom(chartData, fullSizePhotoUrls, personNames);\n\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      (person.DataStatus && person.DataStatus.BirthDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      (person.DataStatus && person.DataStatus.DeathDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [\n      {\n        url: `https://www.wikitree.com${person.PhotoData.url}`,\n        title: person.Photo,\n      },\n    ];\n  }\n  return indi;\n}\n\nfunction isSimilarName(name1: string, name2: string) {\n  return StringUtils.compareSimilarityPercent(name1, name2) >= 75;\n}\n\nfunction getMarriedName(person: Person) {\n  if (\n    !person.Spouses ||\n    person.LastNameCurrent === 'Unknown' ||\n    person.LastNameCurrent === person.LastNameAtBirth\n  ) {\n    return undefined;\n  }\n  const nameParts = person.LastNameCurrent.split(/[- ,]/);\n  // In some languages the same names can differ a bit between genders,\n  // so regular equals comparison cannot be used.\n  // To verify if spouse has the same name, person name is split to include\n  // people with double names, then there is a check if any name part is\n  // at least 75% similar to spouse name.\n  const matchingNames = Object.entries(person.Spouses)\n    .flatMap(([, spousePerson]) => spousePerson.LastNameAtBirth.split(/[- ,]/))\n    .some((spousePersonNamePart) =>\n      nameParts.some((personNamePart) =>\n        isSimilarName(spousePersonNamePart, personNamePart),\n      ),\n    );\n  return matchingNames ? person.LastNameCurrent : undefined;\n}\n\n/**\n * Resolve birth name, married name and aka name with following logic:\n * - birth name is always prioritized and is set if exists and is not unknown\n * - married name is based on LastNameCurrent and is set if it's different than\n *   birth name and one of the spouses has it as their birth name\n * - aka name is based on LastNameOther and is set if it's different than others\n */\nfunction convertPersonNames(person: Person) {\n  const birth =\n    person.LastNameAtBirth !== 'Unknown' ? person.LastNameAtBirth : undefined;\n  const married = getMarriedName(person);\n  const aka =\n    person.LastNameOther !== 'Unknown' &&\n    person.LastNameAtBirth !== person.LastNameOther &&\n    person.LastNameCurrent !== person.LastNameOther\n      ? person.LastNameOther\n      : undefined;\n  return {birth, married, aka};\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction nameToGedcom(type: string, firstName?: string, lastName?: string) {\n  return {\n    level: 1,\n    pointer: '',\n    tag: 'NAME',\n    data: `${firstName || ''} /${lastName || ''}/`,\n    tree: [\n      {\n        level: 2,\n        pointer: '',\n        tag: 'TYPE',\n        data: type,\n        tree: [],\n      },\n    ],\n  };\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (isValidDateOrRange(event)) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction imageToGedcom(\n  image: JsonImage,\n  fullSizePhotoUrl: string | undefined,\n): GedcomEntry[] {\n  return [\n    {\n      level: 2,\n      pointer: '',\n      tag: 'FILE',\n      data: fullSizePhotoUrl || image.url,\n      tree: [\n        {\n          level: 3,\n          pointer: '',\n          tag: 'FORM',\n          data: image.title?.split('.').pop() || '',\n          tree: [],\n        },\n        {\n          level: 3,\n          pointer: '',\n          tag: 'TITL',\n          data: image.title?.split('.')[0] || '',\n          tree: [],\n        },\n      ],\n    },\n  ];\n}\n\nfunction indiToGedcom(\n  indi: JsonIndi,\n  fullSizePhotoUrl: Map<string, string>,\n  personNames: {birth?: string; married?: string; aka?: string},\n): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [],\n  };\n\n  if (personNames.birth) {\n    record.tree.push(nameToGedcom('birth', indi.firstName, personNames.birth));\n  }\n  if (personNames.married) {\n    record.tree.push(\n      nameToGedcom('married', indi.firstName, personNames.married),\n    );\n  }\n  if (personNames.aka) {\n    record.tree.push(nameToGedcom('aka', indi.firstName, personNames.aka));\n  }\n\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  (indi.images || []).forEach((image) => {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'OBJE',\n      data: '',\n      tree: imageToGedcom(image, fullSizePhotoUrl.get(indi.id)),\n    });\n  });\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach((child) =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }),\n  );\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(\n  data: JsonGedcomData,\n  fullSizePhotoUrls: Map<string, string>,\n  personNames: Map<string, {birth?: string; married?: string; aka?: string}>,\n): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(\n      indi,\n      fullSizePhotoUrls,\n      personNames.get(indi.id) || {},\n    );\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      // analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      // analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {idToIndiMap} from './util/gedcom_util';\nimport {\n    Chart,\n    ChartType,\n    downloadPdf,\n    downloadPng,\n    downloadSvg,\n    printChart,\n} from './chart';\nimport {\n    argsToConfig,\n    Config,\n    ConfigPanel,\n    configToArgs,\n    DEFAULT_CONFIG,\n    Ids,\n    Sex,\n} from './config';\nimport {\n    getSelection,\n    UploadSourceSpec,\n    UrlSourceSpec,\n    GedcomUrlDataSource,\n    UploadedDataSource,\n} from './datasource/load_data';\nimport {\n    loadWikiTree,\n    PRIVATE_ID_PREFIX,\n    WikiTreeDataSource,\n    WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE,\n}\n\ntype DataSourceSpec =\n    | UrlSourceSpec\n    | UploadSourceSpec\n    | WikiTreeSourceSpec\n    | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    showWikiTreeMenus: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n\n    const view = getParam('view');\n    const chartTypes = new Map<string | undefined, ChartType>([\n        ['relatives', ChartType.Relatives],\n        ['fancy', ChartType.Fancy],\n    ]);\n\n    const hash = getParam('file');\n    const url = getParam('url');\n    const embedded = getParam('embedded') === 'true'; // False by default.\n    var sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n        };\n    } else if (getParam('source') === 'wikitree') {\n        const windowSearch = queryString.parse(window.location.search);\n        sourceSpec = {\n            source: DataSourceEnum.WIKITREE,\n            authcode: getParam('authcode') || getParamFromSearch('authcode', windowSearch),\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            handleCors: getParam('handleCors') !== 'false', // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined;\n\n    return {\n        sourceSpec,\n        selection,\n        // Hourglass is the default view.\n        chartType: chartTypes.get(view) || ChartType.Relatives,\n        showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n        standalone: getParam('standalone') !== 'false' && !embedded && !staticUrl,\n        showWikiTreeMenus: getParam('showWikiTreeMenus') !== 'false', // True by default.\n        freezeAnimation: getParam('freeze') === 'true', // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /**\n     * Whether the app should display WikiTree-specific menus when showing data\n     * from WikiTree.\n     */\n    const [showWikiTreeMenus, setShowWikiTreeMenus] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (\n            !selection ||\n            selection.id !== newSelection.id ||\n            selection!.generation !== newSelection.generation\n        ) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined) {\n        if (data === undefined) {\n            return;\n        }\n        let shouldHideIds = config.id === Ids.HIDE;\n        let shouldHideSex = config.sex === Sex.HIDE;\n        let indiMap = idToIndiMap(data.chartData);\n        indiMap.forEach((indi) => {\n            indi.hideId = shouldHideIds;\n            indi.hideSex = shouldHideSex;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const wikiTreeDataSource = new WikiTreeDataSource(intl);\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data.\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.WIKITREE:\n                return wikiTreeDataSource.isNewData(\n                    newSource as SourceSelection<WikiTreeSourceSpec>,\n                    oldSource as SourceSelection<WikiTreeSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n            case DataSourceEnum.WIKITREE:\n                return wikiTreeDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({\n                    spec: newSourceSpec,\n                    selection: newSelection,\n                });\n        }\n    }\n\n    useEffect(() => {\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add('bgLogo');\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove('bgLogo');\n        }\n\n        (async () => {\n            if (location.pathname !== '/view') {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n\n            if (\n                state === AppState.INITIAL ||\n                isNewData(args.sourceSpec, args.selection)\n            ) {\n                // Set loading state.\n                setState(AppState.LOADING);\n                // Set state from URL parameters.\n                setSourceSpec(args.sourceSpec);\n                setSelection(args.selection);\n                setStandalone(args.standalone);\n                setShowWikiTreeMenus(args.showWikiTreeMenus);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    // Set state with data.\n                    setData(data);\n                    toggleDetails(args.config, data);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART ||\n                state === AppState.LOADING_MORE\n            ) {\n                // Update selection if it has changed in the URL.\n                const loadMoreFromWikitree =\n                    args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n                    (!selection || selection.id !== args.selection?.id);\n                setChartType(args.chartType);\n                setState(\n                    loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\n                );\n                updateDisplay(args.selection!);\n                if (loadMoreFromWikitree) {\n                    try {\n                        const data = await loadWikiTree(args.selection!.id, intl);\n                        const newSelection = getSelection(data.chartData, args.selection);\n                        setData(data);\n                        setSelection(newSelection);\n                        setState(AppState.SHOWING_CHART);\n                    } catch (error: any) {\n                        setState(AppState.SHOWING_CHART);\n                        displayErrorPopup(\n                            intl.formatMessage(\n                                {\n                                    id: 'error.failed_wikitree_load_more',\n                                    defaultMessage: 'Failed to load data from WikiTree. {error}',\n                                },\n                                {error},\n                            ),\n                        );\n                    }\n                }\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart.\n     * Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        // Don't allow selecting WikiTree private profiles.\n        if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n            return;\n        }\n        // analyticsEvent('selection_changed');\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function onPrint() {\n        // analyticsEvent('print');\n        printChart();\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        // analyticsEvent('download_pdf');\n        try {\n            await downloadPdf();\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_pdf',\n                    defaultMessage:\n                        'Failed to generate PDF file.' +\n                        ' Please try with a smaller diagram or download an SVG file.',\n                }),\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        // analyticsEvent('download_png');\n        try {\n            await downloadPng();\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_png',\n                    defaultMessage:\n                        'Failed to generate PNG file.' +\n                        ' Please try with a smaller diagram or download an SVG file.',\n                }),\n            );\n        }\n    }\n\n    function onDownloadSvg() {\n        downloadSvg();\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({\n                            id: 'tab.info',\n                            defaultMessage: 'Info',\n                        }),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: 'tab.settings',\n                            defaultMessage: 'Settings',\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        allowAllRelativesChart={sourceSpec?.source !== DataSourceEnum.WIKITREE}\n                        showingChart={\n                            history.location.pathname === '/view' &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                        }}\n                        showWikiTreeMenus={\n                            sourceSpec?.source === DataSourceEnum.WIKITREE && showWikiTreeMenus\n                        }\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/view'}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\nasync function loadGedzip(\n  blob: Blob,\n): Promise<{gedcom: string; images: Map<string, string>}> {\n  const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n  const entries = zip.getEntries();\n\n  let gedcom = undefined;\n  const images = new Map<string, string>();\n  for (const entry of entries) {\n    if (entry.entryName.endsWith('.ged')) {\n      if (gedcom) {\n        console.warn('Multiple GEDCOM files found in zip archive.');\n      } else {\n        gedcom = entry.getData().toString();\n      }\n    } else {\n      // Save image for later.\n      images.set(\n        entry.entryName,\n        URL.createObjectURL(new Blob([entry.getData()])),\n      );\n    }\n  }\n  if (!gedcom) {\n    throw new Error('GEDCOM file not found in zip archive.');\n  }\n  return {gedcom, images};\n}\n\nexport async function loadFile(\n  blob: Blob,\n): Promise<{gedcom: string; images: Map<string, string>}> {\n  const fileHeader = await blob.slice(0, 2).text();\n  if (fileHeader === 'PK') {\n    return loadGedzip(blob);\n  }\n  return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors ? 'https://topolaproxy.bieda.it/' + url : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n\n  const {gedcom, images} = await loadFile(await response.blob());\n  return prepareData(gedcom, url, images);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n"],"sourceRoot":""}