{"version":3,"sources":["util/error.ts","lib/topola/dist/chart-util.js","util/gedcom_util.ts","lib/topola/dist/ancestor-chart.js","lib/topola/dist/id-generator.js","lib/topola/dist/composite-renderer.js","lib/topola/dist/data.js","lib/topola/dist/date-format.js","lib/topola/dist/descendant-chart.js","lib/topola/dist/index.js","lib/topola/dist/api.js","lib/topola/dist/detailed-renderer.js","lib/topola/dist/gedcom.js","lib/topola/dist/hourglass-chart.js","lib/topola/dist/simple-api.js","datasource/data_source.ts","util/analytics.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/embedded.ts","util/error_i18n.ts","menu/menu_item.tsx","util/media.ts","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/convert_tables.tsx","languages/validate_csv.ts","languages/individual.ts","languages/family.ts","languages/convert_csv.ts","menu/convert_menu.tsx","menu/top_bar.tsx","config.tsx","chart.tsx","languages/languages-loader.ts","app.tsx","index.tsx","util/date_util.ts","datasource/load_data.ts"],"names":["TopolaError","code","message","args","Error","Object","defineProperty","exports","value","ChartUtil","getChartInfoWithoutMargin","getChartInfo","linkId","V_SPACING","H_SPACING","d3_selection_1","require","d3_flextree_1","d3_array_1","HIDE_TIME_MS","MOVE_TIME_MS","node","parent","id","_a","data","generation","child","additionalMarriage","nodes","x0","min","d","x","width","y0","y","height","size","max","origin","options","this","prototype","linkHorizontal","s","sAnchor","renderer","getFamilyAnchor","dAnchor","spouseParentNodeId","getSpouseAnchor","getIndiAnchor","sx","sy","_b","dx","dy","midX","linkVertical","midY","linkAdditionalMarriage","nodeIndex","children","findIndex","n","siblingNode","updateSvgDimensions","chartInfo","group","select","svgSelector","animate","transition","delay","duration","attr","layOutChart","root","layoutOptions","_this","svg","empty","append","text","getCss","each","depth","flipVertically","baseGeneration","updateNodes","descendants","vSizePerDepth","Map","maxVSize","horizontal","get","set","vSize","vSpacing","undefined","hSpacing","flextree","nodeSize","maxChildSize_1","maxChildSize","spacing","treemap","forEach","renderChart","getSvgForRendering","nodeAnimation","renderNodes","linkAnimation","renderLinks","Promise","all","resolve","boundNodes","selectAll","nodeEnter","enter","transitionsPending","exit","transitionDone","merge","style","on","render","remove","link","links","filter","boundLinks","path","insert","pointerToId","pointer","substring","length","idToIndiMap","map","indis","indi","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","a","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","compareDates","birth","birthDatesComparator","newFams","newChildren","sort","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","toLowerCase","some","ext","endsWith","filterImages","images","newImages","image","filePath","url","replaceAll","match","has","title","startsWith","filterImage","convertGedcom","allLanguages","parseGedcom","json","gedcomEntriesToJson","chartData","getName","person","names","subEntry","name","nameEntry","replace","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","jsonToGedcom","gedcomData","processNode","level","line","values","record","trim","__assign","t","i","arguments","p","hasOwnProperty","call","apply","AncestorChart","getAncestorsTree","chart_util_1","d3_hierarchy_1","id_generator_1","ancestorChartOptions","startIndiFamilies","startIndi","getIndi","getFamiliesAsSpouse","startFam","getFam","getMother","swapStartSpouses","ancestorsRoot","createHierarchy","pop","util","famc","parents","stack","idGenerator","IdGenerator","getFamilyAsChild","getId","parentId","family","indiParentNodeId","getFather","father","mother","spouse","stratify","animationPromise","info","ids","num","getFamPositionHorizontal","getFamPositionVertical","CompositeRenderer","getPreferredFamSize","setPreferredIndiSize","getPreferredIndiSize","indiVSizePerDepth","maxIndiVSize","getIndiVSize","getFamVSize","getVSize","hSize","indiHSize","getHSize","x_1","famYOffset","famXOffset","indiWidth","spouseWidth","familyWidth","indiHeight","spouseHeight","familyHeight","JsonDataProvider","JsonIndiDetails","isEgo","getFirstName","firstName","getLastName","lastName","toUpperCase","getBirthDate","getMaidenName","maidenName","getNumberOfChildren","numberOfChildren","getNumberOfMarriages","numberOfMarriages","getBirthPlace","place","getDeathDate","death","getDeathPlace","isConfirmedDeath","confirmed","getSex","sex","getLanguages","languages","getLanguagesLabel","abbreviations","lang","abbreviation","join","getEthnicity","ethnicity","getTribe","tribe","getImageUrl","getImages","getNotes","notes","getEvents","events","showLanguages","hideLanguages","showEthnicity","hideEthnicity","showId","hideId","showSex","hideSex","JsonFamDetails","husb","wife","getChildren","getMarriageDate","getMarriagePlace","formatDateOrRange","formatDate","MONTHS_EN","QUALIFIERS_I18N","shortMonthCache","getShortMonth","month","locale","Intl","DateTimeFormat","cacheKey","format","Date","getQualifier","qualifier","language","split","languageMap","formatDateOnly","day","year","date","dateOrRange","dateRange","from","to","DescendantChart","layOutDescendants","DUMMY_ROOT_NODE_ID","removeDummyNode","allNodes","slice","descendantsRoot","getNodes","famIds","famId","indiId","getSpouse","getFamNode","dummyNode_1","_loop_1","this_1","childId","childNodes","__createBinding","create","o","m","k","k2","enumerable","__exportStar","ChartColors","__extends","extendStatics","setPrototypeOf","__proto__","Array","TypeError","String","__","constructor","DetailedRenderer","getLength","_1","date_format_1","composite_renderer_1","DETAILS_HEIGHT","textLengthCache","textClass","g","getComputedTextLength","SEX_SYMBOLS","_super","getColoringClass","colors","NO_COLOR","COLOR_BY_GENERATION","COLOR_BY_SEX","COLOR_BY_ETHNICITY","COLOR_BY_NR_LANGUAGES","COLOR_BY_LANGUAGE","getIndiDetails","detailsList","birthDate","birthPlace","deathDate","deathPlace","symbol","listIndex","details","ethnicityHeight","languagesHeight","idAndSexHeight","maxDetailsWidth","detail","getFamDetails","marriageDate","marriagePlace","update","indiUpdate","hiddenRelatives","xOffset","yOffset","indiEnter","renderIndi","familyEnter","familyUpdate","getFamTransform","renderFamily","xhr","XMLHttpRequest","open","send","status","responseText","statusText","error","console","selection","getSexClass","ethnicityCss","getEthnicityClass","buildEthnicityMap","egoEthnicity","classNum","keys","e","log","getLanguagesClass","selectedLanguageId","Math","resetCss","clear","indiHrefFunc","indiCallback","event","background","selectedLanguage","getClipId","getDetailsWidth","languages_height_start","ethnicity_height_start","maxDetails","v","details_height_start","_loop_2","lineGroup","sexSymbol","border","famHrefFunc","famCallback","gedcomToJson","getDate","parse_gedcom_1","findTag","findTags","extractName","arr","MONTHS","parseDate","parts","lastPart","fullText","firstPart","Number","gedcomDate","date_1","createNotes","notesTag","reduce","concat","createEvent","typeTag","dateTag","placeTag","type","createFam","husbTag","wifeTag","objects","ego","nameTags","isMaiden","nameTag","main","maiden","nchiTag","nmrTag","sexTag","gedcomLanguages","l","includes","ethnicityTag","tribeTag","famcTag","objeTags","realObjeTag","file","createIndi","gedcomContents","parse","HourglassChart","ancestor_chart_1","descendant_chart_1","markHiddenRelatives","selectedIndi","displayedNodes","flatMap","parseInt","c","markHiddenRelativesForIndi","f","ancestorNodes","descendantNodes","createChart","data_1","SimpleChartHandle","initialRender","renderOptions","chartOptions","indiUrl","famUrl","createChartOptions","chartType","updateSvgSize","setData","DataSourceEnum","analyticsEvent","action","window","gtag","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","defaultMessage","WrappedImage","useState","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","className","onClick","onLoad","onError","currentTarget","alt","src","filename","centered","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","Header","Modal","basic","closeIcon","Icon","color","onClose","onOpen","Content","label","Label","attached","content","wrapped","MultilineText","lines","index","properties","target","eventSources","sources","intl","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","Tab","Pane","note","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","sub","familyEntry","spouseReference","familySubEntry","eventPlace","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","abbr","sourceData","resolveDate","eventNotes","toEvent","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","eventEntry","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","getMultilineDetails","Details","entriesWithData","Group","divided","EmbeddedMessageType","EmbeddedDataSource","newSource","oldSource","reject","PARENT_READY","postMessage","READY","GEDCOM","loadGedcom","addEventListener","onMessage","getI18nMessage","formatMessage","MenuType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","MenuItem","newProps","menuType","Dropdown","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","initMultiLingualLunrWithoutTrimmer","field","boost","spouseLastName","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","lunrInstance","pipelineFunctions","searchPipelineFunctions","unshift","stopWordFilter","stemmer","wordCharacters","pipeline","reset","searchPipeline","query","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","useEffect","initialize","buildSearchIndex","Search","onSearchChange","_","onResultSelect","onSelection","noResultsMessage","placeholder","selectFirstResult","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","gedcomFile","loadFile","URL","createObjectURL","imageFileNames","hash","md5","state","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","href","Actions","Button","secondary","primary","IndividualsTableExample","headerColor","Table","TableHeader","TableRow","TableHeaderCell","TableBody","TableCell","disabled","RelationshipsTableExample","FamiliesTableExample","IndividualsLanguagesTableExample","Papa","columnsValidation","valuesValidation","validateCSV","parsedData","header","skipEmptyLines","errors","rows","requiredColumns","headers","missingColumns","col","checkColumns","cellErrors","row","column","checkMissingValues","indiIdErrors","famIdErrors","langIdErrors","isNaN","checkIdFormat","Sex","Graph","shortestPath","Individual","params","givenName","surname","nickname","birthYear","familySpouses","familyChild","relationships","indID","fatherId","motherId","hasNode","addNode","addEdge","minValue","singleSourceLength","capitalize","famID","str","word","charAt","Family","marriaged","divorced","csvToGedcom","languagesContents","individualsContent","relationshipsContent","familiesContent","individualsLanguagesContent","egoIndiId","individuals","parseIndividuals","parseRelationships","families","parseFamilies","mapFamiliesChildren","mapIndividualsSpouses","parseLanguages","individualsLanguages","parseIndividualsLanguages","mapIndividualsLanguages","createGedcomString","parseCSV","personId","langIds","individual","ind","langId","egoIndi","lowestEgoIndi","egoGeneration","_i","prev","createHeader","indiRecords","asGedcom","famRecords","createTail","tail","egoId","egoGen","fetch","headerFile","headerTemplate","toLocaleDateString","replaced","egoSection","repoSection","uid","uuidv4","repo","char","tailFile","tailTemplate","acc","ScreenSize","initialHeaderColors","ConvertCSVMenu","inputFiles","setInputFiles","headerColors","setHeaderColors","setEgoIndiId","setErrors","closeDialog","handleUpload","validFilenames","validateFilenames","fileReadPromises","reader","FileReader","readAsText","onload","fileContent","validFile","onerror","then","validFiles","newHeaderColors","changeHeaderColors","egoTag","document","querySelector","parentElement","setProperty","convert2gedcom","individualsFile","relationshipsFile","familiesFile","individualsLanguagesFile","readFileContents","languagesFile","gedcomString","Blob","float","marginBottom","every","labelPosition","icon","_e","TopBar","FileMenus","screenSize","menuOpen","setMenuOpen","cooldown","toggleMenu","setTimeout","standalone","LARGE","SMALL","ChartMenus","showingChart","eventHandlers","onDownloadPdf","onDownloadPng","onDownloadSvg","Divider","onDownloadGedcom","onCenterView","greaterThanOrEqual","inverted","at","LanguagesArg","EthnicityArg","IdsArg","SexArg","DEFAULT_CONFIG","HIDE","SHOW","renderLanguagesOption","renderEthnicityOption","languageOptions","COLOR_ARG","COLOR_ARG_INVERSE","LANGUAGES_ARG","LANGUAGES_ARG_INVERSE","ETHNICITY_ARG","ETHNICITY_ARG_INVERSE","ID_ARG","ID_ARG_INVERSE","SEX_ARG","SEX_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","config","languagesEnabled","setLanguagesEnabled","ethnicityEnabled","setEthnicityEnabled","idsEnabled","setIdsEnabled","sexEnabled","setSexEnabled","Field","Checkbox","radio","checked","tagName","toggle","newState","ChartType","zoomed","scale","transform","offsetX","clientWidth","offsetY","clientHeight","scrollLeft","scrollTop","scrolled","zoomTransform","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","response","warn","inlineImages","getElementsByTagName","loadImage","drawImageOnCanvas","canvas","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","getAttribute","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","downloadSvg","contents","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","downloadGedcom","getFilename","obj","lastIndexOf","chartColors","TopolaChartColors","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","resetPosition","freezeAnimation","innerHTML","zoomOutFactor","extent","scaleExtent","translateExtent","scrollTopTween","interpolateNumber","scrollLeftTween","svgTransition","tween","Chart","chartWrapper","prevProps","usePrevious","hideIds","CSVLoader","csvData","idIndex","indexOf","nameIndex","isoIndex","title_fn","iso","AppState","staticUrl","process","REACT_APP_STATIC_URL","ErrorMessage","ErrorPopup","Portal","onDismiss","getEgoGen","getLowestId","lowest","loadLanguageOptions","Set","getGedcomLanguages","getArguments","getParamFromSearch","embedded","sourceSpec","GEDCOM_URL","handleCors","UPLOADED","EMBEDDED","parsedGen","Hourglass","showSidePanel","messages","de","messages_de","fr","messages_fr","it","messages_it","es","messages_es","pl","messages_pl","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setGedcomString","setFreezeAnimation","setConfig","setAllLanguages","toggleDetails","getEthnicities","uploadedDataSource","UploadedDataSource","gedcomUrlDataSource","GedcomUrlDataSource","embeddedDataSource","isNewData","newSourceSpec","newSelection","spec","loadData","loadAllLanguages","loadLanguages","updateUrl","gen","displayErrorPopup","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","updatedSelection","getSelection","sidePanelTabs","configToArgs","Loader","active","ERROR","LOADING","rootElement","classList","exact","DATE_QUALIFIERS","hasDay","hasMonth","hasYear","dateObject","toDateObject","formatOptions","lowerCaseQualifier","formatDateQualifier","dateElement","fromDate","toDate","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","firstDateOrRange","secondDateOrRange","prepareData","cacheId","serializedData","JSON","stringify","sessionStorage","setItem","loadGedzip","AdmZip","Buffer","arrayBuffer","zip","getEntries","entryName","toString","loadFromUrl","cachedData","getItem","driveUrlMatch","urlToFetch","encodeURIComponent","ok","contentType","charCodeAt"],"mappings":"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","file":"static/js/main.8b6e71e2.chunk.js","sourcesContent":["/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n    constructor(\n        public readonly code: string,\n        message: string,\n        public readonly args: { [key: string]: string } = {},\n    ) {\n        super(message);\n    }\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\n\nexports.ChartUtil = exports.getChartInfoWithoutMargin = exports.getChartInfo = exports.linkId = exports.V_SPACING = exports.H_SPACING = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst d3_flextree_1 = require(\"d3-flextree\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\n\n/** Horizontal distance between boxes. */\nexports.H_SPACING = 15;\n/** Vertical distance between boxes. */\nexports.V_SPACING = 30;\n/** Margin around the whole drawing. */\nconst MARGIN = 15;\nconst HIDE_TIME_MS = 200;\nconst MOVE_TIME_MS = 500;\n\n/** Assigns an identifier to a link. */\nfunction linkId(node) {\n    if (!node.parent) {\n        return node.id + \":A\";\n    }\n    const _a = node.data.generation > node.parent.data.generation\n        ? [node.data, node.parent.data]\n        : [node.parent.data, node.data], child = _a[0], parent = _a[1];\n    if (child.additionalMarriage) {\n        return child.id + \":A\";\n    }\n    return parent.id + \":\" + child.id;\n}\nexports.linkId = linkId;\n\nfunction getChartInfo(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    }) - MARGIN;\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    }) - MARGIN;\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    }) + MARGIN;\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    }) + MARGIN;\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfo = getChartInfo;\n\nfunction getChartInfoWithoutMargin(nodes) {\n    // Calculate chart boundaries.\n    const x0 = d3_array_1.min(nodes, function (d) {\n        return d.x - d.data.width / 2;\n    });\n    const y0 = d3_array_1.min(nodes, function (d) {\n        return d.y - d.data.height / 2;\n    });\n    const x1 = d3_array_1.max(nodes, function (d) {\n        return d.x + d.data.width / 2;\n    });\n    const y1 = d3_array_1.max(nodes, function (d) {\n        return d.y + d.data.height / 2;\n    });\n    return { size: [x1 - x0, y1 - y0], origin: [-x0, -y0] };\n}\nexports.getChartInfoWithoutMargin = getChartInfoWithoutMargin;\n\n/** Utility class with common code for all chart types. */\nlet ChartUtil = /** @class */ (function () {\n\n    function ChartUtil(options) {\n        this.options = options;\n    }\n\n    /** Creates a path from parent to the child node (horizontal layout). */\n    ChartUtil.prototype.linkHorizontal = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midX = (s.x + s.data.width / 2 + d.x - d.data.width / 2) / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + midX + \" \" + sy + \",\\n              \" + midX + \" \" + dy + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    /** Creates a path from parent to the child node (vertical layout). */\n    ChartUtil.prototype.linkVertical = function (s, d) {\n        const sAnchor = this.options.renderer.getFamilyAnchor(s.data);\n        const dAnchor = s.id === d.data.spouseParentNodeId\n            ? this.options.renderer.getSpouseAnchor(d.data)\n            : this.options.renderer.getIndiAnchor(d.data);\n        const _a = [s.x + sAnchor[0], s.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [d.x + dAnchor[0], d.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        const midY = s.y + s.data.height / 2 + exports.V_SPACING / 2;\n        return \"M \" + sx + \" \" + sy + \"\\n            L \" + sx + \" \" + midY + \",\\n              \" + dx + \" \" + midY + \",\\n              \" + dx + \" \" + dy;\n    };\n\n    ChartUtil.prototype.linkAdditionalMarriage = function (node) {\n        const nodeIndex = node.parent.children.findIndex(function (n) {\n            return n.data.id === node.data.id;\n        });\n        // Assert nodeIndex > 0.\n        const siblingNode = node.parent.children[nodeIndex - 1];\n        const sAnchor = this.options.renderer.getIndiAnchor(node.data);\n        const dAnchor = this.options.renderer.getIndiAnchor(siblingNode.data);\n        const _a = [node.x + sAnchor[0], node.y + sAnchor[1]], sx = _a[0], sy = _a[1];\n        const _b = [siblingNode.x + dAnchor[0], siblingNode.y + dAnchor[1]], dx = _b[0], dy = _b[1];\n        return \"M \" + sx + \", \" + sy + \"\\n            L \" + dx + \", \" + dy;\n    };\n\n    ChartUtil.prototype.updateSvgDimensions = function (chartInfo) {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        const group = svg.select('g');\n        const transition = this.options.animate\n            ? group.transition().delay(HIDE_TIME_MS).duration(MOVE_TIME_MS)\n            : group;\n        transition.attr('transform', \"translate(\" + chartInfo.origin[0] + \", \" + chartInfo.origin[1] + \")\");\n    };\n\n    ChartUtil.prototype.layOutChart = function (root, layoutOptions) {\n        const _this = this;\n        if (layoutOptions === void 0) { layoutOptions = {}; }\n        // Add styles so that calculating text size is correct.\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('style').empty()) {\n            svg.append('style').text(this.options.renderer.getCss());\n        }\n        // Assign generation number.\n        root.each(function (node) {\n            node.data.generation =\n                node.depth * (layoutOptions.flipVertically ? -1 : 1) +\n                    (_this.options.baseGeneration || 0);\n        });\n        // Set preferred sizes.\n        this.options.renderer.updateNodes(root.descendants());\n        const vSizePerDepth = new Map();\n        root.each(function (node) {\n            const depth = node.depth;\n            const maxVSize = d3_array_1.max([\n                _this.options.horizontal ? node.data.width : node.data.height,\n                vSizePerDepth.get(depth),\n            ]);\n            vSizePerDepth.set(depth, maxVSize);\n        });\n        // Set sizes of whole nodes.\n        root.each(function (node) {\n            const vSize = vSizePerDepth.get(node.depth);\n            if (_this.options.horizontal) {\n                node.data.width = vSize;\n            }\n            else {\n                node.data.height = vSize;\n            }\n        });\n        const vSpacing = layoutOptions.vSpacing !== undefined ? layoutOptions.vSpacing : exports.V_SPACING;\n        const hSpacing = layoutOptions.hSpacing !== undefined ? layoutOptions.hSpacing : exports.H_SPACING;\n        // Assigns the x and y position for the nodes.\n        const treemap = d3_flextree_1.flextree()\n            .nodeSize(function (node) {\n                if (_this.options.horizontal) {\n                    const maxChildSize_1 = d3_array_1.max(node.children || [], function (n) {\n                        return n.data.width;\n                    }) || 0;\n                    return [\n                        node.data.height,\n                        (maxChildSize_1 + node.data.width) / 2 + vSpacing,\n                    ];\n                }\n                const maxChildSize = d3_array_1.max(node.children || [], function (n) {\n                    return n.data.height;\n                }) || 0;\n                return [\n                    node.data.width,\n                    (maxChildSize + node.data.height) / 2 + vSpacing,\n                ];\n            }).spacing(function () {\n                return hSpacing;\n            });\n        const nodes = treemap(root).descendants();\n        // Swap x-y coordinates for horizontal layout.\n        nodes.forEach(function (node) {\n            let _a;\n            if (layoutOptions.flipVertically) {\n                node.y = -node.y;\n            }\n            if (_this.options.horizontal) {\n                _a = [node.y, node.x];\n                node.x = _a[0];\n                node.y = _a[1];\n            }\n        });\n        return nodes;\n    };\n\n    ChartUtil.prototype.renderChart = function (nodes) {\n        const svg = this.getSvgForRendering();\n        const nodeAnimation = this.renderNodes(nodes, svg);\n        const linkAnimation = this.renderLinks(nodes, svg);\n        return Promise.all([\n            nodeAnimation,\n            linkAnimation,\n        ]);\n    };\n\n    ChartUtil.prototype.renderNodes = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const boundNodes = svg\n                .select('g')\n                .selectAll('g.node')\n                .data(nodes, function (d) {\n                    return d.id;\n                });\n            const nodeEnter = boundNodes.enter().append('g');\n            let transitionsPending = boundNodes.exit().size() + boundNodes.size() + nodeEnter.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            nodeEnter\n                .merge(boundNodes)\n                .attr('class', function (node) {\n                    return \"node generation\" + node.data.generation;\n                });\n            nodeEnter.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            if (_this.options.animate) {\n                nodeEnter\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            const updateTransition = _this.options.animate\n                ? boundNodes\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundNodes;\n            updateTransition.attr('transform', function (node) {\n                return \"translate(\" + (node.x - node.data.width / 2) + \", \" + (node.y - node.data.height / 2) + \")\";\n            });\n            _this.options.renderer.render(nodeEnter, boundNodes);\n            if (_this.options.animate) {\n                boundNodes\n                    .exit()\n                    .transition()\n                    .duration(HIDE_TIME_MS)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundNodes.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.renderLinks = function (nodes, svg) {\n        const _this = this;\n        return new Promise(function (resolve) {\n            const link = function (parent, child) {\n                if (child.data.additionalMarriage) {\n                    return _this.linkAdditionalMarriage(child);\n                }\n                const flipVertically = parent.data.generation > child.data.generation;\n                if (_this.options.horizontal) {\n                    if (flipVertically) {\n                        return _this.linkHorizontal(child, parent);\n                    }\n                    return _this.linkHorizontal(parent, child);\n                }\n                if (flipVertically) {\n                    return _this.linkVertical(child, parent);\n                }\n                return _this.linkVertical(parent, child);\n            };\n            const links = nodes.filter(function (n) {\n                return !!n.parent || n.data.additionalMarriage;\n            });\n            const boundLinks = svg\n                .select('g')\n                .selectAll('path.link')\n                .data(links, linkId);\n            const path = boundLinks\n                .enter()\n                .insert('path', 'g')\n                .attr('class', function (node) {\n                    return node.data.additionalMarriage ? 'link additional-marriage' : 'link';\n                })\n                .attr('d', function (node) {\n                    return link(node.parent, node);\n                });\n            let transitionsPending = boundLinks.exit().size() + boundLinks.size() + path.size();\n            const transitionDone = function () {\n                transitionsPending--;\n                if (transitionsPending === 0) {\n                    resolve();\n                }\n            };\n            if (!_this.options.animate || transitionsPending === 0) {\n                resolve();\n            }\n            const linkTransition = _this.options.animate\n                ? boundLinks\n                    .transition()\n                    .delay(HIDE_TIME_MS)\n                    .duration(MOVE_TIME_MS)\n                    .on('end', transitionDone)\n                : boundLinks;\n            linkTransition.attr('d', function (node) {\n                return link(node.parent, node);\n            });\n            if (_this.options.animate) {\n                path\n                    .style('opacity', 0)\n                    .transition()\n                    .delay(2 * HIDE_TIME_MS + MOVE_TIME_MS)\n                    .duration(0)\n                    .style('opacity', 1)\n                    .on('end', transitionDone);\n            }\n            if (_this.options.animate) {\n                boundLinks\n                    .exit()\n                    .transition()\n                    .duration(0)\n                    .style('opacity', 0)\n                    .remove()\n                    .on('end', transitionDone);\n            } else {\n                boundLinks.exit().remove();\n            }\n        });\n    };\n\n    ChartUtil.prototype.getSvgForRendering = function () {\n        const svg = d3_selection_1.select(this.options.svgSelector);\n        if (svg.select('g').empty()) {\n            svg.append('g');\n        }\n        return svg;\n    };\n    return ChartUtil;\n}());\nexports.ChartUtil = ChartUtil;\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {gedcomEntriesToJson, JsonFam, JsonGedcomData, JsonImage, JsonIndi} from '../lib/topola';\nimport {compareDates} from './date_util';\nimport {Language} from \"../languages/languages-loader\";\n\nexport interface GedcomData {\n    /** The HEAD entry. */\n    head: GedcomEntry;\n    /** INDI entries mapped by id. */\n    indis: { [key: string]: GedcomEntry };\n    /** FAM entries mapped by id. */\n    fams: { [key: string]: GedcomEntry };\n    /** Other entries mapped by id, e.g. NOTE, SOUR. */\n    other: { [key: string]: GedcomEntry };\n}\n\nexport interface TopolaData {\n    chartData: JsonGedcomData;\n    gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n    return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n    const map = new Map<string, JsonIndi>();\n    data.indis.forEach((indi) => {\n        map.set(indi.id, indi);\n    });\n    return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n    const map = new Map<string, JsonFam>();\n    data.fams.forEach((fam) => {\n        map.set(fam.id, fam);\n    });\n    return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n    const head = entries.find((entry) => entry.tag === 'HEAD')!;\n    const indis: { [key: string]: GedcomEntry } = {};\n    const fams: { [key: string]: GedcomEntry } = {};\n    const other: { [key: string]: GedcomEntry } = {};\n    entries.forEach((entry) => {\n        if (entry.tag === 'INDI') {\n            indis[pointerToId(entry.pointer)] = entry;\n        } else if (entry.tag === 'FAM') {\n            fams[pointerToId(entry.pointer)] = entry;\n        } else if (entry.pointer) {\n            other[pointerToId(entry.pointer)] = entry;\n        }\n    });\n    return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n\n/** Birthdate comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n    const indiMap = idToIndiMap(gedcom);\n    return (indiId1: string, indiId2: string) => {\n        const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n        const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n        return (\n            compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n            strcmp(indiId1, indiId2)\n        );\n    };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n    const famMap = idToFamMap(gedcom);\n    return (famId1: string, famId2: string) => {\n        const fam1: JsonFam | undefined = famMap.get(famId1);\n        const fam2: JsonFam | undefined = famMap.get(famId2);\n        return (\n            compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n            strcmp(famId1, famId2)\n        );\n    };\n}\n\n/**\n * Sorts children by birthdate in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n    fam: JsonFam,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!fam.children) {\n        return fam;\n    }\n    const newChildren = fam.children.sort(comparator);\n    return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birthdate.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = birthDatesComparator(gedcom);\n    const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n    return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n    indi: JsonIndi,\n    comparator: (id1: string, id2: string) => number,\n): JsonFam {\n    if (!indi.fams) {\n        return indi;\n    }\n    const newFams = indi.fams.sort(comparator);\n    return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n    const comparator = marriageDatesComparator(gedcom);\n    const newIndis = gedcom.indis.map((indi) =>\n        sortIndiSpouses(indi, comparator),\n    );\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is returned.\n * Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    getterFunction: (gedcom: GedcomData) => { [key: string]: GedcomEntry },\n) {\n    if (entry.data) {\n        const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n        if (dereferenced) {\n            return dereferenced;\n        }\n    }\n    return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines.\n * Supports continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n    const result = [entry.data];\n    entry.tree.forEach((subentry) => {\n        if (subentry.tag === 'CONC' && subentry.data) {\n            const last = result.length - 1;\n            result[last] += subentry.data;\n        } else if (subentry.tag === 'CONT' && subentry.data) {\n            result.push(subentry.data);\n        }\n    });\n    return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n    return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n    const lowerName = fileName.toLowerCase();\n    return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n    if (!indi.images || indi.images.length === 0) {\n        return indi;\n    }\n    const newImages: JsonImage[] = [];\n    indi.images.forEach((image) => {\n        const filePath = image.url.replaceAll('\\\\', '/');\n        const fileName = filePath.match(/[^/]*$/)![0];\n        // If the image file has been loaded into memory, use it.\n        if (images.has(filePath)) {\n            newImages.push({url: images.get(filePath)!, title: image.title});\n        } else if (images.has(fileName)) {\n            newImages.push({url: images.get(fileName)!, title: image.title});\n        } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n            newImages.push(image);\n        }\n    });\n    return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n    gedcom: JsonGedcomData,\n    images: Map<string, string>,\n): JsonGedcomData {\n    const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n    return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birthdate\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param gedcom\n * @param images Map from file name to image URL. This is used to pass in uploaded images.\n * @param allLanguages\n */\nexport function convertGedcom(\n    gedcom: string,\n    allLanguages: Language[],\n    images: Map<string, string>\n): TopolaData {\n    const entries = parseGedcom(gedcom, allLanguages);\n    const json = gedcomEntriesToJson(entries, allLanguages);\n    if (\n        !json ||\n        !json.indis ||\n        !json.indis.length ||\n        !json.fams ||\n        !json.fams.length\n    ) {\n        throw new TopolaError('GEDCOM_READ_FAILED', 'Insufficient GEDCOM data');\n    }\n    return {\n        chartData: filterImages(normalizeGedcom(json), images),\n        gedcom: prepareGedcom(entries)\n    };\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n    const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n    const notMarriedName = names.find(\n        (subEntry) =>\n            subEntry.tree.filter(\n                (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n            ).length === 0,\n    );\n    const name = notMarriedName || names[0];\n    return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n    const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n    const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')?.data;\n    return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(objectEntry: GedcomEntry): GedcomEntry | undefined {\n    return objectEntry.tree.find(\n        (entry) =>\n            entry.tag === 'FILE' &&\n            entry.data.startsWith('http') &&\n            isImageFile(entry.data),\n    );\n}\n\n/**\n * Reverts a TopolaData object to a gedcom string.\n * This is needed to export to gedcom. The original string is not for given, it could have originally come via\n * file upload, but it could have come by other data sources (url, etc.)\n * @param gedcomData\n */\nexport function jsonToGedcom(gedcomData: GedcomData): string {\n    let gedcom = \"\";\n\n    function processNode(node: GedcomEntry, level: number): void {\n        let line = `${level} `;\n        if (node.pointer) line += `${node.pointer} `;\n        line += `${node.tag}`;\n        if (node.data) line += ` ${node.data}`;\n        gedcom += line + '\\n';\n        if (node.tree && node.tree.length > 0) {\n            node.tree.forEach(child => processNode(child, level + 1));\n        }\n    }\n\n    processNode(gedcomData.head, 0);\n    gedcom += '\\n';\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag === \"SUBM\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n        if (record.tag === \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    Object.values(gedcomData.indis).forEach(indi => {\n        processNode(indi, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.fams).forEach(fam => {\n        processNode(fam, 0);\n        gedcom += '\\n';\n    });\n    Object.values(gedcomData.other).forEach(record => {\n        if (record.tag !== \"SUBM\" && record.tag !== \"EGO\") {\n            processNode(record, 0);\n            gedcom += '\\n';\n        }\n    });\n    gedcom += \"0 TRLR\";\n    return gedcom.trim();\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AncestorChart = exports.getAncestorsTree = void 0;\nvar chart_util_1 = require(\"./chart-util\");\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar id_generator_1 = require(\"./id-generator\");\nfunction getAncestorsTree(options) {\n    var ancestorChartOptions = __assign({}, options);\n    var startIndiFamilies = options.startIndi\n        ? options.data.getIndi(options.startIndi).getFamiliesAsSpouse()\n        : [];\n    // If the start individual is set and this person has at least one spouse,\n    // start with the family instead.\n    if (startIndiFamilies.length) {\n        ancestorChartOptions.startFam = startIndiFamilies[0];\n        ancestorChartOptions.startIndi = undefined;\n        var fam = options.data.getFam(startIndiFamilies[0]);\n        if (fam.getMother() === options.startIndi) {\n            ancestorChartOptions.swapStartSpouses = true;\n        }\n    }\n    var ancestors = new AncestorChart(ancestorChartOptions);\n    var ancestorsRoot = ancestors.createHierarchy();\n    // Remove spouse's ancestors if there are multiple spouses\n    // to avoid showing ancestors of just one spouse.\n    if (startIndiFamilies.length > 1 &&\n        ancestorsRoot.children &&\n        ancestorsRoot.children.length > 1) {\n        ancestorsRoot.children.pop();\n        ancestorsRoot.data.spouseParentNodeId = undefined;\n    }\n    return ancestorsRoot;\n}\nexports.getAncestorsTree = getAncestorsTree;\n/** Renders an ancestors chart. */\nvar AncestorChart = /** @class */ (function () {\n    function AncestorChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    /** Creates a d3 hierarchy from the input data. */\n    AncestorChart.prototype.createHierarchy = function () {\n        let id;\n        let famc;\n        let indi;\n        var parents = [];\n        var stack = [];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        if (this.options.startIndi) {\n            indi = this.options.data.getIndi(this.options.startIndi);\n            famc = indi.getFamilyAsChild();\n            id = famc ? idGenerator.getId(famc) : undefined;\n            if (famc) {\n                stack.push({\n                    id: famc,\n                    parentId: this.options.startIndi,\n                    family: { id: famc },\n                });\n            }\n            parents.push({\n                id: this.options.startIndi,\n                indi: { id: this.options.startIndi },\n                indiParentNodeId: id,\n            });\n        }\n        else {\n            stack.push({\n                id: idGenerator.getId(this.options.startFam),\n                family: { id: this.options.startFam },\n            });\n        }\n        while (stack.length) {\n            var entry = stack.pop();\n            var fam = this.options.data.getFam(entry.family.id);\n            if (!fam) {\n                continue;\n            }\n            var _a = entry.family.id === this.options.startFam &&\n                this.options.swapStartSpouses\n                ? [fam.getMother(), fam.getFather()]\n                : [fam.getFather(), fam.getMother()], father = _a[0], mother = _a[1];\n            if (!father && !mother) {\n                continue;\n            }\n            if (mother) {\n                entry.spouse = { id: mother };\n                indi = this.options.data.getIndi(mother);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.spouseParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            if (father) {\n                entry.indi = { id: father };\n                indi = this.options.data.getIndi(father);\n                famc = indi.getFamilyAsChild();\n                if (famc) {\n                    id = idGenerator.getId(famc);\n                    entry.indiParentNodeId = id;\n                    stack.push({\n                        id: id,\n                        parentId: entry.id,\n                        family: { id: famc },\n                    });\n                }\n            }\n            parents.push(entry);\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    AncestorChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = this.util.layOutChart(root, { flipVertically: true });\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return AncestorChart;\n}());\nexports.AncestorChart = AncestorChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdGenerator = void 0;\n/** Provides unique identifiers. */\nvar IdGenerator = /** @class */ (function () {\n    function IdGenerator() {\n        this.ids = new Map();\n    }\n    /**\n     * Returns the given identifier if it wasn't used before. Otherwise, appends\n     * a number to the given identifier to make it unique.\n     */\n    IdGenerator.prototype.getId = function (id) {\n        if (this.ids.has(id)) {\n            var num = this.ids.get(id);\n            this.ids.set(id, num + 1);\n            return id + \":\" + num;\n        }\n        this.ids.set(id, 1);\n        return id;\n    };\n    return IdGenerator;\n}());\nexports.IdGenerator = IdGenerator;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFamPositionHorizontal = exports.getFamPositionVertical = exports.CompositeRenderer = void 0;\n\nconst d3_array_1 = require(\"d3-array\");\n\n/**\n * Common code for tree nodes that are composed of individual and family boxes.\n */\nlet CompositeRenderer = /** @class */ (function () {\n\n    function CompositeRenderer(options) {\n        this.options = options;\n    }\n\n    CompositeRenderer.prototype.getPreferredFamSize = function (id) {\n        // No family box in the simple renderer.\n        return [0, 0];\n    };\n\n    CompositeRenderer.prototype.setPreferredIndiSize = function (indi) {\n        let _a;\n        if (!indi) {\n            return;\n        }\n        _a = this.getPreferredIndiSize(indi.id);\n        indi.width = _a[0];\n        indi.height = _a[1];\n    };\n\n    CompositeRenderer.prototype.updateNodes = function (nodes) {\n        const _this = this;\n        // Calculate individual vertical size per depth.\n        const indiVSizePerDepth = new Map();\n        nodes.forEach(function (node) {\n            let _a;\n            _this.setPreferredIndiSize(node.data.indi);\n            _this.setPreferredIndiSize(node.data.spouse);\n            const family = node.data.family;\n            if (family) {\n                _a = _this.getPreferredFamSize(family.id);\n                family.width = _a[0];\n                family.height = _a[1];\n            }\n            const depth = node.depth;\n            const maxIndiVSize = d3_array_1.max([\n                getIndiVSize(node.data, !!_this.options.horizontal),\n                indiVSizePerDepth.get(depth),\n            ]);\n            indiVSizePerDepth.set(depth, maxIndiVSize);\n        });\n        // Set same width for each depth.\n        nodes.forEach(function (node) {\n            let _a;\n            if (_this.options.horizontal) {\n                if (node.data.indi) {\n                    node.data.indi.width = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.width = indiVSizePerDepth.get(node.depth);\n                }\n            } else {\n                if (node.data.indi) {\n                    node.data.indi.height = indiVSizePerDepth.get(node.depth);\n                }\n                if (node.data.spouse) {\n                    node.data.spouse.height = indiVSizePerDepth.get(node.depth);\n                }\n            }\n            const vSize = getVSize(node.data, !!_this.options.horizontal);\n            const hSize = getHSize(node.data, !!_this.options.horizontal);\n            _a = _this.options.horizontal ? [vSize, hSize] : [hSize, vSize];\n            node.data.width = _a[0];\n            node.data.height = _a[1];\n        });\n    };\n\n    CompositeRenderer.prototype.getFamilyAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_1 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const famYOffset = node.family\n                ? d3_array_1.max([-getFamPositionHorizontal(node), 0])\n                : 0;\n            const y_1 = -(node.indi && node.spouse ? node.height / 2 - node.indi.height : 0) +\n                famYOffset;\n            return [x_1, y_1];\n        }\n        const famXOffset = node.family\n            ? d3_array_1.max([-getFamPositionVertical(node), 0])\n            : 0;\n        const x = -(node.indi && node.spouse ? node.width / 2 - node.indi.width : 0) +\n            famXOffset;\n        const y = -node.height / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getSpouseAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_2 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_2 = node.indi ? node.indi.height / 2 : 0;\n            return [x_2, y_2];\n        }\n        const x = node.indi ? node.indi.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    CompositeRenderer.prototype.getIndiAnchor = function (node) {\n        if (this.options.horizontal) {\n            const x_3 = -node.width / 2 + getIndiVSize(node, this.options.horizontal) / 2;\n            const y_3 = node.spouse ? -node.spouse.height / 2 : 0;\n            return [x_3, y_3];\n        }\n        const x = node.spouse ? -node.spouse.width / 2 : 0;\n        const y = -node.height / 2 + getIndiVSize(node, !!this.options.horizontal) / 2;\n        return [x, y];\n    };\n\n    return CompositeRenderer;\n}());\nexports.CompositeRenderer = CompositeRenderer;\n\n/**\n * Returns the relative position of the family box for the vertical layout.\n */\nfunction getFamPositionVertical(node) {\n    const indiWidth = node.indi ? node.indi.width : 0;\n    const spouseWidth = node.spouse ? node.spouse.width : 0;\n    const familyWidth = node.family.width;\n    if (!node.indi || !node.spouse || indiWidth + spouseWidth <= familyWidth) {\n        return (indiWidth + spouseWidth - familyWidth) / 2;\n    }\n    if (familyWidth / 2 >= spouseWidth) {\n        return indiWidth + spouseWidth - familyWidth;\n    }\n    if (familyWidth / 2 >= indiWidth) {\n        return 0;\n    }\n    return indiWidth - familyWidth / 2;\n}\nexports.getFamPositionVertical = getFamPositionVertical;\n\n/**\n * Returns the relative position of the family box for the horizontal layout.\n */\nfunction getFamPositionHorizontal(node) {\n    const indiHeight = node.indi ? node.indi.height : 0;\n    const spouseHeight = node.spouse ? node.spouse.height : 0;\n    const familyHeight = node.family.height;\n    if (!node.indi || !node.spouse) {\n        return (indiHeight + spouseHeight - familyHeight) / 2;\n    }\n    return indiHeight - familyHeight / 2;\n}\nexports.getFamPositionHorizontal = getFamPositionHorizontal;\n\n/** Returns the horizontal size. */\nfunction getHSize(node, horizontal) {\n    if (horizontal) {\n        return ((node.indi ? node.indi.height : 0) +\n            (node.spouse ? node.spouse.height : 0));\n    }\n    const indiHSize = (node.indi ? node.indi.width : 0) + (node.spouse ? node.spouse.width : 0);\n    return d3_array_1.max([indiHSize, node.family ? node.family.width : 0]);\n}\n\nfunction getFamVSize(node, horizontal) {\n    if (horizontal) {\n        return node.family ? node.family.width : 0;\n    }\n    return node.family ? node.family.height : 0;\n}\n\n/** Returns the vertical size of individual boxes. */\nfunction getIndiVSize(node, horizontal) {\n    if (horizontal) {\n        return d3_array_1.max([\n            node.indi ? node.indi.width : 0,\n            node.spouse ? node.spouse.width : 0,\n        ]);\n    }\n    return d3_array_1.max([\n        node.indi ? node.indi.height : 0,\n        node.spouse ? node.spouse.height : 0,\n    ]);\n}\n\n/** Returns the vertical size. */\nfunction getVSize(node, horizontal) {\n    return getIndiVSize(node, horizontal) + getFamVSize(node, horizontal);\n}\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonDataProvider = void 0;\n/** Details of an individual based on Json input. */\nvar JsonIndiDetails = /** @class */ (function () {\n    function JsonIndiDetails(json) {\n        this.json = json;\n    }\n    JsonIndiDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonIndiDetails.prototype.isEgo = function () {\n        return this.json.isEgo;\n    };\n    JsonIndiDetails.prototype.getFamiliesAsSpouse = function () {\n        return this.json.fams || [];\n    };\n    JsonIndiDetails.prototype.getFamilyAsChild = function () {\n        return this.json.famc || null;\n    };\n    JsonIndiDetails.prototype.getFirstName = function () {\n        return this.json.firstName || null;\n    };\n    JsonIndiDetails.prototype.getLastName = function () {\n        // Check if this.json and this.json.lastName exist and are valid before calling toUpperCase()\n        if (this.json.lastName) {\n            return this.json.lastName.toUpperCase();\n        }\n        return null;\n    };\n    JsonIndiDetails.prototype.getBirthDate = function () {\n        return this.json.birth || null;\n    };\n    JsonIndiDetails.prototype.getMaidenName = function () {\n        return this.json.maidenName || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfChildren = function () {\n        return this.json.numberOfChildren || null;\n    };\n    JsonIndiDetails.prototype.getNumberOfMarriages = function () {\n        return this.json.numberOfMarriages || null;\n    };\n    JsonIndiDetails.prototype.getBirthPlace = function () {\n        return (this.json.birth && this.json.birth.place) || null;\n    };\n    JsonIndiDetails.prototype.getDeathDate = function () {\n        return this.json.death || null;\n    };\n    JsonIndiDetails.prototype.getDeathPlace = function () {\n        return (this.json.death && this.json.death.place) || null;\n    };\n    JsonIndiDetails.prototype.isConfirmedDeath = function () {\n        return !!this.json.death && !!this.json.death.confirmed;\n    };\n    JsonIndiDetails.prototype.getSex = function () {\n        return this.json.sex || null;\n    };\n    JsonIndiDetails.prototype.getLanguages = function () {\n        return this.json.languages || [];\n    };\n    JsonIndiDetails.prototype.getLanguagesLabel = function () {\n        const abbreviations = this.json.languages.map(lang => lang.abbreviation);\n        return abbreviations.length > 0 ? `${abbreviations.join(', ')}` : null;\n    };\n    JsonIndiDetails.prototype.getEthnicity = function () {\n        return this.json.ethnicity || null;\n    };\n    JsonIndiDetails.prototype.getTribe = function () {\n        return this.json.tribe || null;\n    };\n    JsonIndiDetails.prototype.getImageUrl = function () {\n        return ((this.json.images &&\n            this.json.images.length > 0 &&\n            this.json.images[0].url) ||\n            null);\n    };\n    JsonIndiDetails.prototype.getImages = function () {\n        return this.json.images || [];\n    };\n    JsonIndiDetails.prototype.getNotes = function () {\n        return this.json.notes || [];\n    };\n    JsonIndiDetails.prototype.getEvents = function () {\n        return this.json.events || [];\n    };\n    JsonIndiDetails.prototype.showLanguages = function () {\n        return !this.json.hideLanguages;\n    };\n    JsonIndiDetails.prototype.showEthnicity = function () {\n        return !this.json.hideEthnicity;\n    };\n    JsonIndiDetails.prototype.showId = function () {\n        return !this.json.hideId;\n    };\n    JsonIndiDetails.prototype.showSex = function () {\n        return !this.json.hideSex;\n    };\n    return JsonIndiDetails;\n}());\n/** Details of a family based on Json input. */\nvar JsonFamDetails = /** @class */ (function () {\n    function JsonFamDetails(json) {\n        this.json = json;\n    }\n    JsonFamDetails.prototype.getId = function () {\n        return this.json.id;\n    };\n    JsonFamDetails.prototype.getFather = function () {\n        return this.json.husb || null;\n    };\n    JsonFamDetails.prototype.getMother = function () {\n        return this.json.wife || null;\n    };\n    JsonFamDetails.prototype.getChildren = function () {\n        return this.json.children || [];\n    };\n    JsonFamDetails.prototype.getMarriageDate = function () {\n        return this.json.marriage || null;\n    };\n    JsonFamDetails.prototype.getMarriagePlace = function () {\n        return (this.json.marriage && this.json.marriage.place) || null;\n    };\n    return JsonFamDetails;\n}());\n/** Implementation of the DataProvider interface based on Json input. */\nvar JsonDataProvider = /** @class */ (function () {\n    function JsonDataProvider(json) {\n        var _this = this;\n        this.json = json;\n        this.indis = new Map();\n        this.fams = new Map();\n        json.indis.forEach(function (indi) {\n            return _this.indis.set(indi.id, new JsonIndiDetails(indi));\n        });\n        json.fams.forEach(function (fam) { return _this.fams.set(fam.id, new JsonFamDetails(fam)); });\n    }\n    JsonDataProvider.prototype.getIndi = function (id) {\n        return this.indis.get(id) || null;\n    };\n    JsonDataProvider.prototype.getFam = function (id) {\n        return this.fams.get(id) || null;\n    };\n    return JsonDataProvider;\n}());\nexports.JsonDataProvider = JsonDataProvider;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatDateOrRange = exports.formatDate = void 0;\n/** Month in English is used as fallback if a requested translation is not found. */\nvar MONTHS_EN = new Map([\n    [1, 'Jan'],\n    [2, 'Feb'],\n    [3, 'Mar'],\n    [4, 'Apr'],\n    [5, 'May'],\n    [6, 'Jun'],\n    [7, 'Jul'],\n    [8, 'Aug'],\n    [9, 'Sep'],\n    [10, 'Oct'],\n    [11, 'Nov'],\n    [12, 'Dec'],\n]);\n/** Translations of the GEDCOM date qualifiers. */\nvar QUALIFIERS_I18N = new Map([\n    [\n        'cs',\n        new Map([\n            ['cal', 'vypočt.'],\n            ['abt', 'o'],\n            ['est', 'ocenil'],\n            ['before', 'před'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'de',\n        new Map([\n            ['cal', 'errech.'],\n            ['abt', 'etwa'],\n            ['est', 'geschät.'],\n            ['before', 'vor'],\n            ['after', 'nach'],\n        ]),\n    ],\n    [\n        'fr',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'vers'],\n            ['est', 'est.'],\n            ['before', 'avant'],\n            ['after', 'après'],\n        ]),\n    ],\n    [\n        'it',\n        new Map([\n            ['cal', 'calc.'],\n            ['abt', 'circa il'],\n            ['est', 'stim.'],\n            ['before', 'prima del'],\n            ['after', 'dopo del'],\n        ]),\n    ],\n    [\n        'pl',\n        new Map([\n            ['cal', 'wyl.'],\n            ['abt', 'ok.'],\n            ['est', 'szac.'],\n            ['before', 'przed'],\n            ['after', 'po'],\n        ]),\n    ],\n    [\n        'ru',\n        new Map([\n            ['cal', 'выч.'],\n            ['abt', 'ок.'],\n            ['est', 'оцен.'],\n            ['before', 'до'],\n            ['after', 'после'],\n        ]),\n    ],\n]);\nvar shortMonthCache = new Map();\nfunction getShortMonth(month, locale) {\n    if (!Intl || !Intl.DateTimeFormat) {\n        return MONTHS_EN.get(month);\n    }\n    var cacheKey = month + \"|\" + (locale || '');\n    if (shortMonthCache.has(cacheKey)) {\n        return shortMonthCache.get(cacheKey);\n    }\n    var result = new Intl.DateTimeFormat(locale, { month: 'short' }).format(new Date(2000, month - 1));\n    shortMonthCache.set(cacheKey, result);\n    return result;\n}\nfunction getQualifier(qualifier, locale) {\n    var language = locale && locale.split(/[-_]/)[0];\n    var languageMap = language && QUALIFIERS_I18N.get(language);\n    return languageMap ? languageMap.get(qualifier) : qualifier;\n}\n/**\n * Formats the date consisting of day, month and year.\n * All parts of the date are optional.\n */\nfunction formatDateOnly(day, month, year, locale) {\n    if (!day && !month && !year) {\n        return '';\n    }\n    // Fall back to formatting the date manually in case of\n    // - locale not provided\n    // - English (to avoid formatting like 'Oct 11, 2009')\n    // - Lack of i18n support in the browser\n    if (!Intl || !Intl.DateTimeFormat || !locale || locale === 'en') {\n        return [day, month && getShortMonth(month, locale), year].join(' ');\n    }\n    var format = {\n        day: day ? 'numeric' : undefined,\n        month: month ? 'short' : undefined,\n        year: year ? 'numeric' : undefined,\n    };\n    return new Intl.DateTimeFormat(locale, format).format(new Date(year !== null && year !== void 0 ? year : 2000, month ? month - 1 : 1, day !== null && day !== void 0 ? day : 1));\n}\n/** Simple date formatter. */\nfunction formatDate(date, locale) {\n    return [\n        date.qualifier && getQualifier(date.qualifier, locale),\n        formatDateOnly(date.day, date.month, date.year, locale),\n        date.text,\n    ].join(' ');\n}\nexports.formatDate = formatDate;\n/** Formats a DateOrRange object. */\nfunction formatDateOrRange(dateOrRange, locale) {\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, locale);\n    }\n    if (!dateOrRange.dateRange) {\n        return '';\n    }\n    var from = dateOrRange.dateRange.from && formatDate(dateOrRange.dateRange.from);\n    var to = dateOrRange.dateRange.to && formatDate(dateOrRange.dateRange.to);\n    if (from && to) {\n        return from + \" .. \" + to;\n    }\n    if (from) {\n        return getQualifier('after', locale) + \" \" + from;\n    }\n    if (to) {\n        return getQualifier('before', locale) + \" \" + to;\n    }\n    return '';\n}\nexports.formatDateOrRange = formatDateOrRange;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescendantChart = exports.layOutDescendants = exports.DUMMY_ROOT_NODE_ID = void 0;\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar chart_util_1 = require(\"./chart-util\");\nvar id_generator_1 = require(\"./id-generator\");\nexports.DUMMY_ROOT_NODE_ID = 'DUMMY_ROOT_NODE';\nfunction layOutDescendants(options, layoutOptions) {\n    if (layoutOptions === void 0) { layoutOptions = {}; }\n    var descendants = new DescendantChart(options);\n    var descendantsRoot = descendants.createHierarchy();\n    return removeDummyNode(new chart_util_1.ChartUtil(options).layOutChart(descendantsRoot, layoutOptions));\n}\nexports.layOutDescendants = layOutDescendants;\n/** Removes the dummy root node if it was added in createHierarchy(). */\nfunction removeDummyNode(allNodes) {\n    if (allNodes[0].id !== exports.DUMMY_ROOT_NODE_ID) {\n        return allNodes;\n    }\n    var nodes = allNodes.slice(1);\n    // Move first node to (0, 0) coordinates.\n    var dx = -nodes[0].x;\n    var dy = -nodes[0].y;\n    nodes.forEach(function (node) {\n        if (node.parent &&\n            node.parent.id === exports.DUMMY_ROOT_NODE_ID &&\n            !node.data.additionalMarriage) {\n            node.parent = null;\n        }\n        node.x += dx;\n        node.y += dy;\n        node.data.generation--;\n    });\n    return nodes;\n}\n/** Returns the spouse of the given individual in the given family. */\nfunction getSpouse(indiId, fam) {\n    if (fam.getFather() === indiId) {\n        return fam.getMother();\n    }\n    return fam.getFather();\n}\n/** Renders a descendants chart. */\nvar DescendantChart = /** @class */ (function () {\n    function DescendantChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n    DescendantChart.prototype.getNodes = function (id) {\n        var _this = this;\n        var indi = this.options.data.getIndi(id);\n        var famIds = indi.getFamiliesAsSpouse();\n        if (!famIds.length) {\n            // Single person.\n            return [\n                {\n                    id: id,\n                    indi: {\n                        id: id,\n                    },\n                },\n            ];\n        }\n        // Marriages.\n        var nodes = famIds.map(function (famId) {\n            var entry = {\n                id: famId,\n                indi: {\n                    id: id,\n                },\n                family: {\n                    id: famId,\n                },\n            };\n            var fam = _this.options.data.getFam(famId);\n            var spouse = getSpouse(id, fam);\n            if (spouse) {\n                entry.spouse = { id: spouse };\n            }\n            return entry;\n        });\n        nodes.slice(1).forEach(function (node) {\n            node.additionalMarriage = true;\n        });\n        return nodes;\n    };\n    DescendantChart.prototype.getFamNode = function (famId) {\n        var node = { id: famId, family: { id: famId } };\n        var fam = this.options.data.getFam(famId);\n        var father = fam.getFather();\n        if (father) {\n            node.indi = { id: father };\n        }\n        var mother = fam.getMother();\n        if (mother) {\n            node.spouse = { id: mother };\n        }\n        return node;\n    };\n    /** Creates a d3 hierarchy from the input data. */\n    DescendantChart.prototype.createHierarchy = function () {\n        var _this = this;\n        var parents = [];\n        var nodes = this.options.startIndi\n            ? this.getNodes(this.options.startIndi)\n            : [this.getFamNode(this.options.startFam)];\n        var idGenerator = this.options.idGenerator || new id_generator_1.IdGenerator();\n        nodes.forEach(function (node) { return (node.id = idGenerator.getId(node.id)); });\n        // If there are multiple root nodes, i.e. the start individual has multiple\n        // marriages, create a dummy root node.\n        // After layout is complete, the dummy node will be removed.\n        if (nodes.length > 1) {\n            var dummyNode_1 = {\n                id: exports.DUMMY_ROOT_NODE_ID,\n                height: 1,\n                width: 1,\n            };\n            parents.push(dummyNode_1);\n            nodes.forEach(function (node) { return (node.parentId = dummyNode_1.id); });\n        }\n        parents.push.apply(parents, nodes);\n        var stack = [];\n        nodes.forEach(function (node) {\n            if (node.family) {\n                stack.push(node);\n            }\n        });\n        var _loop_1 = function () {\n            var entry = stack.pop();\n            var fam = this_1.options.data.getFam(entry.family.id);\n            var children = fam.getChildren();\n            children.forEach(function (childId) {\n                var childNodes = _this.getNodes(childId);\n                childNodes.forEach(function (node) {\n                    node.parentId = entry.id;\n                    if (node.family) {\n                        node.id = \"\" + idGenerator.getId(node.family.id);\n                        stack.push(node);\n                    }\n                });\n                parents.push.apply(parents, childNodes);\n            });\n        };\n        var this_1 = this;\n        while (stack.length) {\n            _loop_1();\n        }\n        return d3_hierarchy_1.stratify()(parents);\n    };\n    /**\n     * Renders the tree, calling the provided renderer to draw boxes for\n     * individuals.\n     */\n    DescendantChart.prototype.render = function () {\n        var root = this.createHierarchy();\n        var nodes = removeDummyNode(this.util.layOutChart(root));\n        var animationPromise = this.util.renderChart(nodes);\n        var info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return DescendantChart;\n}());\nexports.DescendantChart = DescendantChart;\n","var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\n\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"array-flat-polyfill\");\n__exportStar(require(\"./ancestor-chart\"), exports);\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./chart-util\"), exports);\n__exportStar(require(\"./composite-renderer\"), exports);\n__exportStar(require(\"./data\"), exports);\n__exportStar(require(\"./date-format\"), exports);\n__exportStar(require(\"./descendant-chart\"), exports);\n__exportStar(require(\"./detailed-renderer\"), exports);\n__exportStar(require(\"./gedcom\"), exports);\n__exportStar(require(\"./hourglass-chart\"), exports);\n__exportStar(require(\"./simple-api\"), exports);\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChartColors = void 0;\nlet ChartColors;\n(function (ChartColors) {\n    ChartColors[ChartColors[\"NO_COLOR\"] = 0] = \"NO_COLOR\";\n    ChartColors[ChartColors[\"COLOR_BY_GENERATION\"] = 1] = \"COLOR_BY_GENERATION\";\n    ChartColors[ChartColors[\"COLOR_BY_SEX\"] = 2] = \"COLOR_BY_SEX\";\n    ChartColors[ChartColors[\"COLOR_BY_ETHNICITY\"] = 3] = \"COLOR_BY_ETHNICITY\";\n    ChartColors[ChartColors[\"COLOR_BY_NR_LANGUAGES\"] = 4] = \"COLOR_BY_NR_LANGUAGES\";\n    ChartColors[ChartColors[\"COLOR_BY_LANGUAGE\"] = 5] = \"COLOR_BY_LANGUAGE\";\n})\n// eslint-disable-next-line\n(ChartColors = exports.ChartColors || (exports.ChartColors = {}));\n","var __extends = (this && this.__extends) || (function () {\n    let extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({__proto__: []} instanceof Array && function (d, b) {\n                d.__proto__ = b;\n            }) ||\n            function (d, b) {\n                for (const p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n            };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        if (b === null) {\n            d.prototype = Object.create(b);\n        } else {\n            __.prototype = b.prototype;  // Set the prototype of __ to b's prototype\n            d.prototype = new __();      // Create a new instance of __ to set as d's prototype\n        }\n    };\n})();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetailedRenderer = exports.getLength = void 0;\n\nconst d3_selection_1 = require(\"d3-selection\");\nconst _1 = require(\"./index\");\nconst date_format_1 = require(\"./date-format\");\nconst d3_array_1 = require(\"d3-array\");\nrequire(\"d3-transition\");\nconst composite_renderer_1 = require(\"./composite-renderer\");\nconst INDI_MIN_HEIGHT = 44;\nconst INDI_MIN_WIDTH = 64;\nconst FAM_MIN_HEIGHT = 10;\nconst FAM_MIN_WIDTH = 15;\nconst IMAGE_WIDTH = 70;\n\n/** Minimum box height when an image is present. */\nconst IMAGE_HEIGHT = 90;\nconst ETHNICITY_HEIGHT = 17;\nconst LANGUAGES_HEIGHT = 17;\nconst DETAILS_HEIGHT = 17;\nconst ANIMATION_DELAY_MS = 200;\nconst ANIMATION_DURATION_MS = 500;\nconst textLengthCache = new Map();\n\n/** Calculates the length of the given text in pixels when rendered. */\nfunction getLength(text, textClass) {\n    const cacheKey = text + \"|\" + textClass;\n    if (textLengthCache.has(cacheKey)) {\n        return textLengthCache.get(cacheKey);\n    }\n    const g = d3_selection_1.select('svg').append('g').attr('class', 'detailed node');\n    const x = g.append('text').attr('class', textClass).text(text);\n    const length = x.node().getComputedTextLength();\n    g.remove();\n    textLengthCache.set(cacheKey, length);\n    return length;\n}\nexports.getLength = getLength;\n\nconst SEX_SYMBOLS = new Map([\n    ['F', '\\u2640'],\n    ['M', '\\u2642'],\n]);\n\n/**\n * Renders some details about a person such as date and place of birth\n * and death.\n */\nvar DetailedRenderer = /** @class */ (function (_super) {\n    __extends(DetailedRenderer, _super);\n\n    function DetailedRenderer(options) {\n        var _this = _super.call(this, options) || this;\n        _this.options = options;\n        return _this;\n    }\n\n    DetailedRenderer.prototype.getColoringClass = function () {\n        switch (this.options.colors) {\n            case _1.ChartColors.NO_COLOR:\n                return 'nocolor';\n            case _1.ChartColors.COLOR_BY_GENERATION:\n                return 'bygeneration';\n            case _1.ChartColors.COLOR_BY_SEX:\n                return 'bysex';\n            case _1.ChartColors.COLOR_BY_ETHNICITY:\n                return 'byethnicity';\n            case _1.ChartColors.COLOR_BY_NR_LANGUAGES:\n                return 'bylanguages';\n            case _1.ChartColors.COLOR_BY_LANGUAGE:\n                return 'bylanguages';\n            default:\n                return 'bygeneration';\n        }\n    };\n\n    /** Extracts lines of details for a person. */\n    DetailedRenderer.prototype.getIndiDetails = function (indi) {\n        const detailsList = [];\n        const birthDate = indi.getBirthDate() && date_format_1.formatDateOrRange(indi.getBirthDate(), this.options.locale);\n        const birthPlace = indi.getBirthPlace();\n        const deathDate = indi.getDeathDate() && date_format_1.formatDateOrRange(indi.getDeathDate(), this.options.locale);\n        const deathPlace = indi.getDeathPlace();\n        if (birthDate) {\n            detailsList.push({ symbol: '', text: birthDate });\n        }\n        if (birthPlace) {\n            detailsList.push({ symbol: '', text: birthPlace });\n        }\n        if (birthDate || birthPlace) {\n            detailsList[0].symbol = '*';\n        }\n        const listIndex = detailsList.length;\n        if (deathDate) {\n            detailsList.push({ symbol: '', text: deathDate });\n        }\n        if (deathPlace) {\n            detailsList.push({ symbol: '', text: deathPlace });\n        }\n        if (deathDate || deathPlace) {\n            detailsList[listIndex].symbol = '+';\n        }\n        else if (indi.isConfirmedDeath()) {\n            detailsList.push({ symbol: '+', text: '' });\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredIndiSize = function (id) {\n        // Height\n        const indi = this.options.data.getIndi(id);\n        const details = this.getIndiDetails(indi);\n        const ethnicityHeight = indi.showEthnicity() && indi.getEthnicity() != null ? ETHNICITY_HEIGHT : 0;\n        const languagesHeight = indi.showLanguages() && indi.getLanguages().length > 0 ? LANGUAGES_HEIGHT : 0;\n        const idAndSexHeight = indi.showId() || indi.showSex() ? DETAILS_HEIGHT : 0;\n        const height = d3_array_1.max([\n            INDI_MIN_HEIGHT + languagesHeight + ethnicityHeight + (details.length * DETAILS_HEIGHT) + idAndSexHeight,\n            indi.getImageUrl() ? IMAGE_HEIGHT : 0,\n        ]);\n        // Width\n        const maxDetailsWidth = d3_array_1.max(details.map(detail => getLength(detail.text, 'details')));\n        const width = d3_array_1.max([\n            maxDetailsWidth + 22,\n            getLength(indi.getFirstName() || '', 'name') + 8,\n            getLength(indi.getLastName() || '', 'name') + 8,\n            indi.showLanguages() && indi.getLanguages().length > 0 ? (getLength(indi.getLanguagesLabel(), 'languages') + 28) : 0,\n            indi.showEthnicity() && indi.getEthnicity() != null ? (getLength(indi.getEthnicity(), 'ethnicity') + 28) : 0,\n            getLength(id, 'id') + 32,\n            INDI_MIN_WIDTH,\n        ]) + (indi.getImageUrl() ? IMAGE_WIDTH : 0);\n        return [width, height];\n    };\n\n    /** Extracts lines of details for a family. */\n    DetailedRenderer.prototype.getFamDetails = function (fam) {\n        const detailsList = [];\n        const marriageDate = fam.getMarriageDate() &&\n            date_format_1.formatDateOrRange(fam.getMarriageDate(), this.options.locale);\n        const marriagePlace = fam.getMarriagePlace();\n        if (marriageDate) {\n            detailsList.push({ symbol: '', text: marriageDate });\n        }\n        if (marriagePlace) {\n            detailsList.push({ symbol: '', text: marriagePlace });\n        }\n        if (marriageDate || marriagePlace) {\n            detailsList[0].symbol = '\\u26AD';\n        }\n        return detailsList;\n    };\n\n    DetailedRenderer.prototype.getPreferredFamSize = function (id) {\n        const fam = this.options.data.getFam(id);\n        const details = this.getFamDetails(fam);\n        const height = d3_array_1.max([10 + details.length * DETAILS_HEIGHT, FAM_MIN_HEIGHT]);\n        const maxDetailsWidth = d3_array_1.max(details.map(function (x) { return getLength(x.text, 'details'); }));\n        const width = d3_array_1.max([maxDetailsWidth + 22, FAM_MIN_WIDTH]);\n        return [width, height];\n    };\n\n    DetailedRenderer.prototype.render = function (enter, update) {\n        const _this = this;\n        enter = enter.append('g').attr('class', 'detailed');\n        update = update.select('g');\n        const indiUpdate = enter\n            .merge(update)\n            .selectAll('g.indi')\n            .data(function (node) {\n                const result = [];\n                const famXOffset = !_this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionVertical(node.data), 0])\n                    : 0;\n                const famYOffset = _this.options.horizontal && node.data.family\n                    ? d3_array_1.max([-composite_renderer_1.getFamPositionHorizontal(node.data), 0])\n                    : 0;\n\n                if (node.data.indi) {\n                    node.data.indi.hiddenRelatives = node.data.hiddenRelatives;\n                    result.push({\n                        indi: node.data.indi,\n                        generation: node.data.generation,\n                        xOffset: famXOffset,\n                        yOffset: 0\n                    });\n                }\n                if (node.data.spouse) {\n                    result.push({\n                        indi: node.data.spouse,\n                        generation: node.data.generation,\n                        xOffset: !_this.options.horizontal && node.data.indi ? node.data.indi.width + famXOffset : 0,\n                        yOffset: _this.options.horizontal && node.data.indi ? node.data.indi.height + famYOffset : 0\n                });\n            }\n            return result;\n        }, function (data) { return data.indi.id; });\n        const indiEnter = indiUpdate\n            .enter()\n            .append('g')\n            .attr('class', 'indi');\n        this.transition(indiEnter.merge(indiUpdate)).attr('transform', function (node) { return \"translate(\" + node.xOffset + \", \" + node.yOffset + \")\"; });\n        this.renderIndi(indiEnter, indiUpdate);\n        const familyEnter = enter.select(function (node) {\n                return node.data.family ? this : null;\n            }).append('g').attr('class', 'family');\n        const familyUpdate = update.select(function (node) {\n            return node.data.family ? this : null;\n        }).select('g.family');\n        this.transition(familyEnter.merge(familyUpdate)).attr('transform', function (node) {\n            return _this.getFamTransform(node.data);\n        });\n        this.renderFamily(familyEnter);\n    };\n\n    DetailedRenderer.prototype.getCss = function () {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', './styles/detailed-renderer.css', false);\n        try {\n            xhr.send();\n            if (xhr.status === 200) {\n                const cssCode = xhr.responseText\n                return cssCode;\n            } else {\n                throw new Error('Failed to load CSS file:' + xhr.statusText);\n            }\n        } catch (error) {\n            console.error('Error occurred while loading CSS:', error);\n            return null;\n        }\n    };\n\n    DetailedRenderer.prototype.transition = function (selection) {\n        return this.options.animate\n            ? selection\n                .transition()\n                .delay(ANIMATION_DELAY_MS)\n                .duration(ANIMATION_DURATION_MS)\n            : selection;\n    };\n\n    DetailedRenderer.prototype.getFamTransform = function (node) {\n        if (this.options.horizontal) {\n            return \"translate(\" + ((node.indi && node.indi.width) || node.spouse.width) + \", \" + d3_array_1.max([composite_renderer_1.getFamPositionHorizontal(node), 0]) + \")\";\n        }\n        return \"translate(\" + d3_array_1.max([composite_renderer_1.getFamPositionVertical(node), 0]) + \", \" + ((node.indi && node.indi.height) || node.spouse.height) + \")\";\n    };\n\n    DetailedRenderer.prototype.getSexClass = function (indiId) {\n        let _a;\n        const sex = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getSex();\n        switch (sex) {\n            case 'M':\n                return 'male';\n            case 'F':\n                return 'female';\n            default:\n                break;\n        }\n    };\n\n    const ethnicityCss = new Map();\n    DetailedRenderer.prototype.getEthnicityClass = function (indiId) {\n        if (ethnicityCss.size === 0) {\n            this.buildEthnicityMap()\n        }\n        let _a;\n        const ethnicity = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getEthnicity();\n        if (ethnicity) {\n            return ethnicityCss.get(ethnicity);\n        }\n        return ''  // Blank if no ethnicity\n    };\n\n    DetailedRenderer.prototype.buildEthnicityMap = function () {\n        try {\n            // Assign the ethnicity of the ego as eth0\n            if (!ethnicityCss.has(\"eth0\")) {\n                const egoEthnicity = Array.from(this.options.data.indis?.values() || []).find(indi => indi.isEgo())?.json.ethnicity\n                if (egoEthnicity) {\n                    ethnicityCss.set(egoEthnicity, \"ego\")\n                }\n            }\n            ethnicityCss.set(\"Blanco\", \"blanco\")\n            ethnicityCss.set(\"Afroamerican\", \"afroamerican\")\n            // Assign the ethnicities of the the rest individuals\n            Array.from(this.options.data.indis?.values() || [])\n                .filter(indi => indi.getEthnicity() != null)\n                .forEach(indi => {\n                    const ethnicity = indi.getEthnicity()\n                    if (!ethnicityCss.has(ethnicity)) {\n                        // Might be a tree with no ego individual. Then there is no eth0\n                        const classNum = Object.keys(ethnicityCss).find(k => ethnicityCss[k] === \"ego\") ? ethnicityCss.size : ethnicityCss.size + 1\n                        ethnicityCss.set(ethnicity, \"eth\" + classNum)\n                    }\n                    if (ethnicityCss.size > 14) {\n                        throw new Error('No CSS for more than 14 different ethnicities')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    DetailedRenderer.prototype.getLanguagesClass = function (indiId, selectedLanguageId) {\n        let _a;\n        const languages = (_a = this.options.data.getIndi(indiId)) === null || _a === void 0 ? void 0 : _a.getLanguages();\n        if (selectedLanguageId != null) {\n            // By specific language\n            const hasSelectedLanguage = languages.some(language => language.id === selectedLanguageId);\n            if (hasSelectedLanguage) {\n                return \"l\" + selectedLanguageId;\n            }\n        } else {\n            // By nr. languages\n            return languages.length > 0 ? 'n' + Math.min(languages.length, 7) : '';\n        }\n        return '' // Blank if no language\n    }\n\n    DetailedRenderer.prototype.resetCss = function () {\n        ethnicityCss.clear()\n        console.log('Cleared CSS maps')\n    }\n\n    DetailedRenderer.prototype.renderIndi = function (enter, update) {\n        const _this = this;\n\n        if (this.options.indiHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr('href', function (data) { return _this.options.indiHrefFunc(data.indi.id); });\n            update = update.select('a');\n        }\n\n        if (this.options.indiCallback) {\n            enter.on('click', function (event, data) {\n                return _this.options.indiCallback({\n                    id: data.indi.id,\n                    generation: data.generation,\n                });\n            });\n        }\n\n        // Background\n        const background = enter\n            .append('rect')\n            .attr('rx', 5)\n            .attr('stroke-width', 0)\n            .attr('class', function (node) {\n                return \"background \"\n                    +_this.getColoringClass() + \" \"\n                    + _this.getSexClass(node.indi.id) + \" \"\n                    + _this.getEthnicityClass(node.indi.id) + \" \"\n                    + _this.getLanguagesClass(node.indi.id, _this.options.selectedLanguage) + \" \";\n            })\n            .merge(update.select('rect.background'));\n\n        this.transition(background)\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n\n        // Clip path\n        const getClipId = function (id) {\n            return \"clip-\" + id;\n        };\n        enter\n            .append('clipPath')\n            .attr('id', function (node) { return getClipId(node.indi.id); })\n            .append('rect')\n            .attr('rx', 5)\n            .merge(update.select('clipPath rect'))\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n        const getIndi = function (data) {\n            return _this.options.data.getIndi(data.indi.id);\n        };\n        const getDetailsWidth = function (data) {\n            return data.indi.width - (getIndi(data).getImageUrl() ? IMAGE_WIDTH : 0);\n        };\n\n        // Name\n        enter\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'name')\n            .attr('transform', function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 17)\"; })\n            .text(function (node) { return getIndi(node).getFirstName(); });\n        enter\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'name')\n            .attr('transform', function (node) { return \"translate(\" + getDetailsWidth(node) / 2 + \", 33)\"; })\n            .text(function (node) { return getIndi(node).getLastName(); })\n\n        // Languages\n        const languages = enter\n            .filter(function (node) {\n                return getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0\n            })\n            .append('text')\n            .attr('text-anchor', 'middle')\n            .attr('class', 'languages')\n            .text(function (node) {\n                return getIndi(node).getLanguagesLabel()\n            });\n        this.transition(languages).attr('transform', function (node) {\n            // if the indi does not have languages to show, the height start does not apply\n            const languages_height_start =  getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0 ? 52 : null\n            return \"translate(\" + getDetailsWidth(node) / 2 + \", \" + languages_height_start + \")\";\n        });\n\n        // Ethnicity\n        const ethnicity = enter\n            .filter(function (node) {\n                return getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null\n            })\n            .append('text')\n            .attr('class', 'ethnicity')\n            .text(function (node) {\n                return '¤ ' + getIndi(node).getEthnicity()\n            });\n        this.transition(ethnicity).attr('transform', function (node) {\n            let ethnicity_height_start =  null\n            if (getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) {\n                ethnicity_height_start = 71\n            } else if (getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) {\n                ethnicity_height_start = 55\n            }\n            return \"translate(5, \" + ethnicity_height_start + \")\";\n        });\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const indi = getIndi(node);\n            const detailsList = _this.getIndiDetails(indi);\n            details.set(node.indi.id, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        function details_height_start(node) {\n            return 55\n                + ((getIndi(node).showLanguages() && getIndi(node).getLanguages().length > 0) ? LANGUAGES_HEIGHT : 0)\n                + ((getIndi(node).showEthnicity() && getIndi(node).getEthnicity() != null) ? ETHNICITY_HEIGHT : 0)\n        }\n\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.indi.id).length > i;\n            });\n\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'middle')\n                .attr('class', 'details')\n                .attr('transform', function (node) {\n                    return \"translate(9, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].symbol;\n                });\n            lineGroup\n                .append('text')\n                .attr('class', 'details')\n                .attr('transform', function (node) {\n                    return \"translate(15, \" + (details_height_start(node) + i * DETAILS_HEIGHT) + \")\"\n                })\n                .text(function (node) {\n                    return details.get(node.indi.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n\n        // Render id\n        const id = enter\n            .append('text')\n            .attr('class', 'id')\n            .text(function (node) {\n                return (getIndi(node).showId() ? node.indi.id : '');\n            })\n            .merge(update.select('text.id'));\n        this.transition(id).attr('transform', function (node) { return \"translate(9, \" + (node.indi.height - 5) + \")\"; });\n\n        // Render sex\n        const sex = enter\n            .append('text')\n            .attr('class', 'details sex')\n            .attr('text-anchor', 'end')\n            .text(function (node) {\n                const sexSymbol = SEX_SYMBOLS.get(getIndi(node).getSex() || '') || '';\n                return getIndi(node).showSex() ? sexSymbol : '';\n            })\n            .merge(update.select('text.sex'));\n        this.transition(sex).attr('transform', function (node) {\n            return \"translate(\" + (getDetailsWidth(node) - 5) + \", \" + (node.indi.height - 5) + \")\";\n        });\n\n        // Image\n        enter.filter(function (node) { return !!getIndi(node).getImageUrl(); })\n            .append('image')\n            .attr('width', IMAGE_WIDTH)\n            .attr('height', function (node) { return node.indi.height; })\n            .attr('preserveAspectRatio', 'xMidYMin')\n            .attr('transform', function (node) { return \"translate(\" + (node.indi.width - IMAGE_WIDTH) + \", 0)\"; })\n            .attr('clip-path', function (node) { return \"url(#\" + getClipId(node.indi.id) + \")\"; })\n            .attr('href', function (node) { return getIndi(node).getImageUrl(); });\n\n        // Border on top\n        const border = enter\n            .append('rect')\n            .attr('rx', 5)\n            .attr('fill-opacity', 0)\n            .attr('class', 'border')\n            .attr('stroke-dasharray', function (node) {\n                return node.indi.hiddenRelatives ? '5, 5' : '0, 0' // hidden relatives\n            })\n            .merge(update.select('rect.border'));\n        this.transition(border)\n            .attr('width', function (node) { return node.indi.width; })\n            .attr('height', function (node) { return node.indi.height; });\n    };\n\n    DetailedRenderer.prototype.renderFamily = function (enter) {\n        const _this = this;\n\n        if (this.options.famHrefFunc) {\n            enter = enter\n                .append('a')\n                .attr('href', function (node) {\n                return _this.options.famHrefFunc(node.data.family.id);\n            });\n        }\n\n        if (this.options.famCallback) {\n            enter.on('click', function (event, node) {\n                return _this.options.famCallback({\n                    id: node.data.family.id,\n                    generation: node.data.generation,\n                });\n            });\n        }\n\n        // Extract details\n        const details = new Map();\n        enter.each(function (node) {\n            const famId = node.data.family.id;\n            const fam = _this.options.data.getFam(famId);\n            const detailsList = _this.getFamDetails(fam);\n            details.set(famId, detailsList);\n        });\n        const maxDetails = d3_array_1.max(Array.from(details.values(), function (v) {\n            return v.length;\n        }));\n\n        // Box\n        enter.filter(function (node) {\n                const detail = details.get(node.data.family.id);\n                return 0 < detail.length;\n        }).append('rect')\n        .attr('class', this.getColoringClass())\n        .attr('rx', 5)\n        .attr('ry', 5)\n        .attr('width', function (node) { return node.data.family.width; })\n        .attr('height', function (node) { return node.data.family.height; });\n        const _loop_2 = function (i) {\n            const lineGroup = enter.filter(function (node) {\n                return details.get(node.data.family.id).length > i;\n            });\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'middle')\n                .attr('class', 'details')\n                .attr('transform', \"translate(9, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].symbol;\n                });\n            lineGroup\n                .append('text')\n                .attr('text-anchor', 'start')\n                .attr('class', 'details')\n                .attr('transform', \"translate(15, \" + (16 + i * DETAILS_HEIGHT) + \")\")\n                .text(function (node) {\n                    return details.get(node.data.family.id)[i].text;\n                });\n        };\n        // Render details\n        for (let i = 0; i < maxDetails; ++i) {\n            _loop_2(i);\n        }\n    };\n\n    return DetailedRenderer;\n}(composite_renderer_1.CompositeRenderer));\nexports.DetailedRenderer = DetailedRenderer;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.gedcomEntriesToJson = exports.gedcomToJson = exports.getDate = void 0;\nconst parse_gedcom_1 = require(\"parse-gedcom\");\n\n/** Returns the first entry with the given tag or undefined if not found. */\nfunction findTag(tree, tag) {\n    return tree.find(function (entry) { return entry.tag === tag; });\n}\n\n/** Returns all entries with the given tag. */\nfunction findTags(tree, tag) {\n    return tree.filter(function (entry) { return entry.tag === tag; });\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nfunction pointerToId(pointer) {\n    return pointer.substring(1, pointer.length - 1);\n}\n\n/** Extracts the first and last name from a GEDCOM name field. */\nfunction extractName(name) {\n    const arr = name.split('/');\n    if (arr.length === 1) {\n        return { firstName: arr[0].trim() };\n    }\n    return { firstName: arr[0].trim(), lastName: arr[1].trim() };\n}\n\n/** Maps month abbreviations used in GEDCOM to month numbers. */\nconst MONTHS = new Map([\n    ['jan', 1],\n    ['feb', 2],\n    ['mar', 3],\n    ['apr', 4],\n    ['may', 5],\n    ['jun', 6],\n    ['jul', 7],\n    ['aug', 8],\n    ['sep', 9],\n    ['oct', 10],\n    ['nov', 11],\n    ['dec', 12],\n]);\n\n/** Parses the GEDCOM date into the Date structure. */\nfunction parseDate(parts) {\n    let lastPart;\n    if (!parts || !parts.length) {\n        return undefined;\n    }\n    const result = {};\n    // Remove parentheses if they surround the text\n    if (parts[0].startsWith('(') && parts[parts.length - 1].endsWith(')')) {\n        parts[0] = parts[0].substring(1);\n        lastPart = parts[parts.length - 1];\n        parts[parts.length - 1] = lastPart.substring(0, lastPart.length - 1);\n    }\n    const fullText = parts.join(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart === 'cal' || firstPart === 'abt' || firstPart === 'est') {\n        result.qualifier = firstPart;\n        parts = parts.slice(1);\n    }\n    if (parts.length && parts[parts.length - 1].match(/^\\d{1,4}$/)) {\n        result.year = Number(parts[parts.length - 1]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        lastPart = parts[parts.length - 1].toLowerCase();\n        if (MONTHS.has(lastPart)) {\n            result.month = MONTHS.get(lastPart);\n            parts = parts.slice(0, parts.length - 1);\n        }\n    }\n    if (parts.length && parts[0].match(/^\\d\\d?$/)) {\n        result.day = Number(parts[0]);\n        parts = parts.slice(0, parts.length - 1);\n    }\n    if (parts.length) {\n        // A part didn't get parsed. Return the whole text verbatim.\n        return { text: fullText };\n    }\n    return result;\n}\n\n/** Parses a GEDCOM date or date range. */\nfunction getDate(gedcomDate) {\n    const parts = gedcomDate.replace(/@.*@/, '').trim().split(' ');\n    const firstPart = parts[0].toLowerCase();\n    if (firstPart.startsWith('bet')) {\n        const i = parts.findIndex(function (x) {\n            return x.toLowerCase() === 'and';\n        });\n        const from = parseDate(parts.slice(1, i));\n        const to = parseDate(parts.slice(i + 1));\n        return { dateRange: { from: from, to: to } };\n    }\n    if (firstPart.startsWith('bef') || firstPart.startsWith('aft')) {\n        const date_1 = parseDate(parts.slice(1));\n        if (firstPart.startsWith('bef')) {\n            return { dateRange: { to: date_1 } };\n        }\n        return { dateRange: { from: date_1 } };\n    }\n    const date = parseDate(parts);\n    if (date) {\n        return { date: date };\n    }\n    return undefined;\n}\nexports.getDate = getDate;\n\n/**\n * Tries to treat an input tag as NOTE and parse all lines of notes\n */\nfunction createNotes(notesTag) {\n    if (!notesTag || notesTag.tag !== 'NOTE')\n        return undefined;\n    return findTags(notesTag.tree, 'CONT')\n        .filter(function (x) { return x.data; })\n        .reduce(function (a, i) { return a.concat(i.data); }, [notesTag.data]);\n}\n\n/**\n * Creates a JsonEvent object from a GEDCOM entry.\n * Used for BIRT, DEAT and MARR tags.\n */\nfunction createEvent(entry) {\n    if (!entry) {\n        return undefined;\n    }\n    const typeTag = findTag(entry.tree, 'TYPE');\n    const dateTag = findTag(entry.tree, 'DATE');\n    const placeTag = findTag(entry.tree, 'PLAC');\n    const date = dateTag && dateTag.data && getDate(dateTag.data);\n    const place = placeTag && placeTag.data;\n    if (date || place) {\n        const result = date || {};\n        if (place) {\n            result.place = place;\n        }\n        result.confirmed = true;\n        result.type = typeTag ? typeTag.data : undefined;\n        result.notes = createNotes(findTag(entry.tree, 'NOTE'));\n        return result;\n    }\n    if (entry.data && entry.data.toLowerCase() === 'y') {\n        return { confirmed: true };\n    }\n    return undefined;\n}\n\n/** Creates a JsonIndi object from an INDI entry in GEDCOM. */\nfunction createIndi(entry, objects, ego, allLanguages) {\n    let firstName;\n    let lastName;\n    const id = pointerToId(entry.pointer);\n    const fams = findTags(entry.tree, 'FAMS').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const indi = {id: id, fams: fams};\n\n    // is Ego?\n    if (ego) {\n        indi.isEgo = pointerToId(ego.pointer) === id\n    }\n\n    // Name\n    const nameTags = findTags(entry.tree, 'NAME');\n    const isMaiden = function (nameTag) {\n        const type = findTag(nameTag.tree, 'TYPE');\n        return type !== undefined && type.data === 'maiden';\n    };\n    const main = nameTags.find(function (x) {\n        return !isMaiden(x);\n    });\n    const maiden = nameTags.find(isMaiden);\n    if (main) {\n        const _a = extractName(main.data);\n        firstName = _a.firstName;\n        lastName = _a.lastName;\n        if (firstName) {\n            indi.firstName = firstName;\n        }\n        if (lastName) {\n            indi.lastName = lastName;\n        }\n    }\n    if (maiden) {\n        let _b = extractName(maiden.data);\n        firstName = _b.firstName;\n        lastName = _b.lastName;\n        if (lastName) {\n            indi.maidenName = lastName;\n        }\n        if (firstName && !indi.firstName) {\n            indi.firstName = firstName;\n        }\n    }\n    // Number of children\n    const nchiTag = findTag(entry.tree, 'NCHI');\n    if (nchiTag) {\n        indi.numberOfChildren = +nchiTag.data;\n    }\n    // Number of marriages\n    const nmrTag = findTag(entry.tree, 'NMR');\n    if (nmrTag) {\n        indi.numberOfMarriages = +nmrTag.data;\n    }\n    // Sex\n    const sexTag = findTag(entry.tree, 'SEX');\n    if (sexTag) {\n        indi.sex = sexTag.data;\n    }\n    // Languages\n    const languageTags = findTags(entry.tree, 'LANG')\n    if (languageTags) {\n        const gedcomLanguages = findTags(entry.tree, 'LANG').map(lang => lang.data)\n        indi.languages = allLanguages.filter(l => gedcomLanguages.includes(l.name));\n    }\n    // Ethnicity\n    const ethnicityTag = findTag(entry.tree, '_ETHN');\n    if (ethnicityTag) {\n        indi.ethnicity = ethnicityTag.data;\n    }\n    // Tribe\n    const tribeTag = findTag(entry.tree, '_TRIB');\n    if (tribeTag) {\n        indi.tribe = tribeTag.data;\n    }\n    // Family with parents\n    const famcTag = findTag(entry.tree, 'FAMC');\n    if (famcTag) {\n        indi.famc = pointerToId(famcTag.data);\n    }\n    // Image URL\n    const objeTags = findTags(entry.tree, 'OBJE');\n    if (objeTags.length > 0) {\n        // Dereference OBJECT if needed\n        const getFileTag = function (tag) {\n            const realObjeTag = tag.data ? objects.get(pointerToId(tag.data)) : tag;\n            if (!realObjeTag)\n                return undefined;\n            const file = findTag(realObjeTag.tree, 'FILE');\n            const title = findTag(realObjeTag.tree, 'TITL');\n            if (!file)\n                return undefined;\n            return {\n                url: file.data,\n                title: title && title.data,\n            };\n        };\n        indi.images = objeTags\n            .map(getFileTag)\n            .filter(function (x) { return x !== undefined; });\n    }\n    // Birthdate and place\n    const birth = createEvent(findTag(entry.tree, 'BIRT'));\n    if (birth) {\n        indi.birth = birth;\n    }\n    // Death date and place\n    const death = createEvent(findTag(entry.tree, 'DEAT'));\n    if (death) {\n        indi.death = death;\n    }\n    // Notes\n    indi.notes = createNotes(findTag(entry.tree, 'NOTE'));\n    // Events\n    indi.events = findTags(entry.tree, 'EVEN')\n        .map(createEvent)\n        .filter(function (x) { return x !== null; });\n    return indi;\n}\n\n/** Creates a JsonFam object from an FAM entry in GEDCOM. */\nfunction createFam(entry) {\n    const id = pointerToId(entry.pointer);\n    const children = findTags(entry.tree, 'CHIL').map(function (entry) {\n        return pointerToId(entry.data);\n    });\n    const fam = {id: id, children: children};\n    // Husband.\n    const husbTag = findTag(entry.tree, 'HUSB');\n    if (husbTag) {\n        fam.husb = pointerToId(husbTag.data);\n    }\n    // Wife.\n    const wifeTag = findTag(entry.tree, 'WIFE');\n    if (wifeTag) {\n        fam.wife = pointerToId(wifeTag.data);\n    }\n    // Marriage\n    const marriage = createEvent(findTag(entry.tree, 'MARR'));\n    if (marriage) {\n        fam.marriage = marriage;\n    }\n    return fam;\n}\n\n/** Creates a map from ID to entry from an array of entries. */\nfunction createMap(entries) {\n    return new Map(entries.map(function (entry) { return [pointerToId(entry.pointer), entry]; }));\n}\n\n/** Parses a GEDCOM file into a JsonGedcomData structure. */\nfunction gedcomToJson(gedcomContents, allLanguages) {\n    return gedcomEntriesToJson(parse_gedcom_1.parse(gedcomContents, allLanguages));\n}\nexports.gedcomToJson = gedcomToJson;\n\n/** Converts parsed GEDCOM entries into a JsonGedcomData structure. */\nfunction gedcomEntriesToJson(gedcom, allLanguages) {\n    const objects = createMap(findTags(gedcom, 'OBJE'));\n    const ego = findTags(gedcom, 'EGO')\n    const indis = findTags(gedcom, 'INDI').map(function (entry) {\n        return createIndi(entry, objects, ego.length > 0 ? ego[0] : undefined, allLanguages);\n    });\n    const fams = findTags(gedcom, 'FAM').map(createFam);\n    return { indis: indis, fams: fams };\n}\nexports.gedcomEntriesToJson = gedcomEntriesToJson;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.HourglassChart = void 0;\nvar ancestor_chart_1 = require(\"./ancestor-chart\");\nvar chart_util_1 = require(\"./chart-util\");\nvar descendant_chart_1 = require(\"./descendant-chart\");\n/**\n * Renders an hourglass chart. It consists of an ancestor chart and\n * a descendant chart for a family.\n */\nvar HourglassChart = /** @class */ (function () {\n    function HourglassChart(options) {\n        this.options = options;\n        this.util = new chart_util_1.ChartUtil(options);\n    }\n\n    HourglassChart.prototype.markHiddenRelatives = function (nodes, gedcomData, selectedIndi) {\n        let displayedNodes = nodes.flatMap(function (node) {\n            if (node.data.family) {\n                return [node.data.indi.id, node.data.spouse.id];\n            } else {\n                return [node.data.indi.id];\n            }\n        });\n        displayedNodes = displayedNodes.sort((a, b) => {\n            const numA = parseInt(a.slice(1));\n            const numB = parseInt(b.slice(1));\n            return numA - numB;\n        });\n        for (var n = 0; n < nodes.length; n++) {\n            var node = nodes[n];\n            if (node.data.family) {\n                const fam = gedcomData.fams.get(node.data.family.id)\n                // this family has children who are not displayed\n                for (var c = 0; c < fam.json.children.length; c++) {\n                    const childId = fam.json.children[c]\n                    if (!displayedNodes.includes(childId)) {\n                        node.data.hiddenRelatives = true\n                        console.log(node.data.family.id + \" has hidden children\")\n                        break;\n                    }\n                }\n                // check the wife parents\n                this.markHiddenRelativesForIndi(node.data.spouse, gedcomData, displayedNodes, selectedIndi);\n            } else {\n                // go through each family to find the parents of this indi\n                this.markHiddenRelativesForIndi(node.data.indi, gedcomData, displayedNodes, selectedIndi);\n            }\n        }\n    }\n\n    HourglassChart.prototype.markHiddenRelativesForIndi = function (node, gedcomData, displayedNodes, selectedIndi) {\n        // check all parent until it finds the child\n        for (var f = 0; f < gedcomData.fams.size; f++) {\n            const fam = Array.from(gedcomData.fams.values())[f]\n            if (fam.json.children.length > 0) {\n                if (fam.json.children.includes(node.id)) {\n                    // parents found\n                    if (!displayedNodes.includes(fam.json.husb)) {\n                        node.hiddenRelatives = true\n                        console.log(node.id + \" parents not displayed\")\n                        break;\n                    }\n                    if (!displayedNodes.includes(fam.json.wife)) {\n                        node.hiddenRelatives = true\n                        console.log(node.id + \" parents not displayed\")\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    HourglassChart.prototype.render = function () {\n        const ancestorsRoot = ancestor_chart_1.getAncestorsTree(this.options);\n        const ancestorNodes = this.util.layOutChart(ancestorsRoot, { flipVertically: true });\n        const descendantNodes = descendant_chart_1.layOutDescendants(this.options);\n        // slice(1) removes the duplicated start node.\n        const nodes = ancestorNodes.slice(1).concat(descendantNodes);\n        // dash the stroke of indis having non-visible relatives\n        this.markHiddenRelatives(nodes, this.options.data, this.options.startIndi)\n\n        const animationPromise = this.util.renderChart(nodes);\n        const info = chart_util_1.getChartInfo(nodes);\n        this.util.updateSvgDimensions(info);\n        return Object.assign(info, { animationPromise: animationPromise });\n    };\n    return HourglassChart;\n}());\nexports.HourglassChart = HourglassChart;\n","Object.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChart = void 0;\nconst d3_selection_1 = require(\"d3-selection\");\nconst data_1 = require(\"./data\");\nconst DEFAULT_SVG_SELECTOR = 'svg';\n\nfunction createChartOptions(chartOptions, renderOptions, options) {\n    const data = new data_1.JsonDataProvider(chartOptions.json);\n    const indiHrefFunc = chartOptions.indiUrl ? function (id) {\n            return chartOptions.indiUrl.replace(`${id}`, id);\n        } : undefined;\n    const famHrefFunc = chartOptions.famUrl ? function (id) {\n            return chartOptions.famUrl.replace(`${id}`, id);\n        } : undefined;\n    // If startIndi nor startFam is provided, select the first indi in the data.\n    if (!renderOptions.startIndi && !renderOptions.startFam) {\n        renderOptions.startIndi = chartOptions.json.indis[0].id;\n    }\n    const animate = !options.initialRender && chartOptions.animate;\n    return {\n        data: data,\n        renderer: new chartOptions.renderer({\n            data: data,\n            indiHrefFunc: indiHrefFunc,\n            famHrefFunc: famHrefFunc,\n            indiCallback: chartOptions.indiCallback,\n            famCallback: chartOptions.famCallback,\n            horizontal: chartOptions.horizontal,\n            colors: chartOptions.colors,\n            selectedLanguage: chartOptions.selectedLanguage,\n            animate: animate,\n            locale: chartOptions.locale,\n        }),\n        startIndi: renderOptions.startIndi,\n        startFam: renderOptions.startFam,\n        svgSelector: chartOptions.svgSelector || DEFAULT_SVG_SELECTOR,\n        horizontal: chartOptions.horizontal,\n        baseGeneration: renderOptions.baseGeneration,\n        animate: animate,\n    };\n}\n\nconst SimpleChartHandle = /** @class */ (function () {\n\n    function SimpleChartHandle(options) {\n        this.options = options;\n        this.initialRender = true;\n    }\n\n    SimpleChartHandle.prototype.render = function (renderOptions) {\n        if (renderOptions === void 0) {\n            renderOptions = {};\n        }\n        const chartOptions = createChartOptions(this.options, renderOptions, {\n            initialRender: this.initialRender\n        });\n        // Reset CSS maps\n        if (this.initialRender) {\n            chartOptions.renderer.resetCss();\n        }\n        this.initialRender = false;\n        const chart = new this.options.chartType(chartOptions);\n        const info = chart.render();\n        if (this.options.updateSvgSize !== false) {\n            d3_selection_1.select(chartOptions.svgSelector)\n                .attr('width', info.size[0])\n                .attr('height', info.size[1]);\n        }\n        return info;\n    };\n    /**\n     * Updates the chart input data.\n     * This is useful when the data is dynamically loaded and a different subset\n     * of data will be displayed.\n     */\n    SimpleChartHandle.prototype.setData = function (json) {\n        this.options.json = json;\n    };\n    return SimpleChartHandle;\n}());\n\nfunction createChart(options) {\n    return new SimpleChartHandle(options);\n}\nexports.createChart = createChart;\n","import {IndiInfo} from '../lib/topola';\nimport {TopolaData} from '../util/gedcom_util';\nimport {Language} from \"../languages/languages-loader\";\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n    UPLOADED,\n    GEDCOM_URL,\n    EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n    spec: SourceSpecT;\n    selection?: IndiInfo;\n    allLanguages?: Language[];\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n    /**\n     * Returns true if the application is now loading a completely new data set\n     * and the existing one should be wiped.\n     */\n    isNewData(\n        newSource: SourceSelection<SourceSpecT>,\n        oldSource: SourceSelection<SourceSpecT>,\n        data?: TopolaData,\n    ): boolean;\n\n    /** Loads data from the data source. */\n    loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n    ['ADOP', 'Adoption'],\n    ['BAPM', 'Baptism'],\n    ['BIRT', 'Birth'],\n    ['BURI', 'Burial'],\n    ['CENS', 'Census'],\n    ['CHR', 'Christening'],\n    ['CREM', 'Cremation'],\n    ['DEAT', 'Death'],\n    ['EDUC', 'Education'],\n    ['EMAIL', 'E-mail'],\n    ['EMIG', 'Emigration'],\n    ['EVEN', 'Event'],\n    ['FACT', 'Fact'],\n    ['IMMI', 'Immigration'],\n    ['MARR', 'Marriage'],\n    ['MARS', 'Marriage settlement'],\n    ['ETHN', 'Ethnic'],\n    ['TRIB', 'Clan'],\n    ['LANG', 'Language'],\n    ['DIV', 'Divorce'],\n    ['MILT', 'Military services'],\n    ['NATU', 'Naturalization'],\n    ['OCCU', 'Occupation'],\n    ['TITL', 'Title'],\n    ['WWW', 'WWW'],\n    ['birth', 'Birth name'],\n    ['married', 'Married name'],\n    ['maiden', 'Maiden name'],\n    ['immigrant', 'Immigrant name'],\n    ['aka', 'Also known as'],\n]);\n\ninterface Props {\n    tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n    const normalizedTag = props.tag.replace(/_/g, '');\n    return (\n        <FormattedMessage\n            id={`gedcom.${normalizedTag}`}\n            defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n        />\n    );\n}\n","import {\n    Container,\n    Icon,\n    Image,\n    Label,\n    Message,\n    Modal,\n    Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n    const [imageOpen, setImageOpen] = useState(false);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [imageFailed, setImageFailed] = useState(false);\n    const [imageSrc, setImageSrc] = useState('');\n\n    if (imageLoaded && imageSrc !== props.url) {\n        setImageLoaded(false);\n    }\n    return (\n        <>\n            <Image\n                className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n                onClick={() => setImageOpen(true)}\n                onLoad={() => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(false);\n                }}\n                onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n                    setImageLoaded(true);\n                    setImageSrc(props.url);\n                    setImageFailed(true);\n                    e.currentTarget.alt = '';\n                }}\n                src={props.url}\n                alt={props.title || props.filename}\n                centered={true}\n            />\n            <Placeholder className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}>\n                <Placeholder.Image square/>\n            </Placeholder>\n            {imageFailed && (\n                <Container fluid textAlign=\"center\">\n                    <Message negative compact>\n                        <Message.Header>\n                            <FormattedMessage\n                                id=\"error.failed_to_load_image\"\n                                defaultMessage={'Failed to load image file'}\n                            />\n                        </Message.Header>\n                    </Message>\n                </Container>\n            )}\n            <Modal\n                basic\n                size=\"large\"\n                closeIcon={<Icon name=\"close\" color=\"red\"/>}\n                open={imageOpen}\n                onClose={() => setImageOpen(false)}\n                onOpen={() => setImageOpen(true)}\n                centered={false}\n            >\n                <Modal.Header>{props.title}</Modal.Header>\n                <Modal.Content image>\n                    <Image\n                        className=\"modal-image\"\n                        src={props.url}\n                        alt={props.title || props.filename}\n                        label={<Label attached=\"bottom\" content={props.filename}/>}\n                        wrapped\n                    />\n                </Modal.Content>\n            </Modal>\n        </>\n    );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n    lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n    return (\n        <>\n            {props.lines.map((line, index) => (\n                <div key={index}>\n                    <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n                    <br/>\n                </div>\n            ))}\n        </>\n    );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Icon, Item, List, Menu, MenuItemProps, Popup, Tab,} from 'semantic-ui-react';\nimport * as React from 'react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from '../lib/topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n    url: string;\n    filename: string;\n    title?: string;\n}\n\nexport interface Source {\n    title?: string;\n    author?: string;\n    page?: string;\n    date?: DateOrRange;\n    publicationInfo?: string;\n}\n\ninterface Props {\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n    return (\n        !!images &&\n        images.map((image, index) => (\n            <List key={index}>\n                <List.Item>\n                    <WrappedImage\n                        url={image.url}\n                        filename={image.filename}\n                        title={image.title}\n                    />\n                </List.Item>\n            </List>\n        ))\n    );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n    return (\n        !!notes?.length &&\n        notes.map((note, index) => (\n            <div key={index}>\n                <MultilineText\n                    lines={note.map((line, index) => (\n                        <i key={index}>{line}</i>\n                    ))}\n                />\n            </div>\n        ))\n    );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n    return (\n        !!sources?.length && (\n            <List>\n                {sources.map((source, index) => (\n                    <List.Item key={index}>\n                        <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\"/>\n                        <List.Content>\n                            <List.Header>\n                                <Linkify properties={{target: '_blank'}}>\n                                    {[source.author, source.title, source.publicationInfo]\n                                        .filter((sourceElement) => sourceElement)\n                                        .join(', ')}\n                                </Linkify>\n                            </List.Header>\n                            <List.Description>\n                                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                                {source.date\n                                    ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                                    : null}\n                            </List.Description>\n                        </List.Content>\n                    </List.Item>\n                ))}\n            </List>\n        )\n    );\n}\n\nexport function EventExtras(props: Props) {\n    const intl = useIntl();\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const [indi, setIndi] = useState('');\n\n    if (!indi || indi !== props.indi) {\n        setActiveIndex(-1);\n        setIndi(props.indi);\n    }\n\n    function handleTabOnClick(\n        event: React.MouseEvent<HTMLAnchorElement>,\n        menuItemProps: MenuItemProps,\n    ) {\n        menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n            ? setActiveIndex(menuItemProps.index)\n            : setActiveIndex(-1);\n    }\n\n    const imageTab = props.images?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"camera\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n    };\n\n    const noteTab = props.notes?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"sticky note outline\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n    };\n\n    const sourceTab = props.sources?.length && {\n        menuItem: (\n            <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n                <Popup\n                    content={\n                        <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\"/>\n                    }\n                    size=\"mini\"\n                    position=\"bottom center\"\n                    trigger={<Icon circular name=\"quote right\"/>}\n                />\n            </Menu.Item>\n        ),\n        render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n    };\n\n    const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n        tab ? [tab] : [],\n    );\n\n    if (panes.length) {\n        return (\n            <Item.Description>\n                <Tab\n                    className=\"event-extras\"\n                    activeIndex={activeIndex}\n                    renderActiveOnly={true}\n                    menu={{\n                        tabular: true,\n                        attached: true,\n                        compact: true,\n                        borderless: true,\n                    }}\n                    panes={panes}\n                />\n            </Item.Description>\n        );\n    }\n    return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry,\n    getName,\n    pointerToId,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\nimport {DateOrRange, getDate} from '../lib/topola';\n\nfunction PersonLink(props: { person: GedcomEntry }) {\n    const location = useLocation();\n    const name = getName(props.person);\n    const search = queryString.parse(location.search);\n    search['indi'] = pointerToId(props.person.pointer);\n    return (\n        <Item.Meta>\n            <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n                {name ? (name) : (<FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>)}\n            </Link>\n        </Item.Meta>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n    entries: GedcomEntry[];\n}\n\ninterface EventData {\n    type: string;\n    date?: DateOrRange;\n    personLink?: GedcomEntry;\n    place?: string[];\n    images?: Image[];\n    notes?: string[][];\n    sources?: Source[];\n    indi: string;\n}\n\nconst EVENT_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'FAMS',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'MARS', 'DIV'];\n\nfunction EventHeader(props: { event: EventData }) {\n    const intl = useIntl();\n    return (\n        <div className=\"event-header\">\n            <Header as=\"span\" size=\"small\">\n                <TranslatedTag tag={props.event.type}/>\n            </Header>\n            {props.event.date ? (\n                <Header as=\"span\" textAlign=\"right\" sub>\n                    {formatDateOrRange(props.event.date, intl)}\n                </Header>\n            ) : null}\n        </div>\n    );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n    const spouseReference = familyEntry.tree\n        .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n        .find((familySubEntry) => !familySubEntry.data.includes(indi));\n    if (!spouseReference) {\n        return undefined;\n    }\n    return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n    const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n    return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n    return entry.tree\n        .filter((subEntry) => 'OBJE' === subEntry.tag)\n        .map((objectEntry) =>\n            dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n        )\n        .map((objectEntry) => getImageFileEntry(objectEntry))\n        .flatMap((imageFileEntry) =>\n            imageFileEntry ? [\n                    {\n                        url: imageFileEntry?.data || '',\n                        filename: getFileName(imageFileEntry) || '',\n                    },\n                ] : [],\n        );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n    return entry.tree\n        .filter((subEntry) => 'SOUR' === subEntry.tag)\n        .map((sourceEntryReference) => {\n            const sourceEntry = dereference(sourceEntryReference, gedcom, (gedcom) => gedcom.other);\n            const title = sourceEntry.tree.find((subEntry) => 'TITL' === subEntry.tag);\n            const abbr = sourceEntry.tree.find((subEntry) => 'ABBR' === subEntry.tag);\n            const author = sourceEntry.tree.find((subEntry) => 'AUTH' === subEntry.tag);\n            const publicationInfo = sourceEntry.tree.find((subEntry) => 'PUBL' === subEntry.tag);\n            const page = sourceEntryReference.tree.find((subEntry) => 'PAGE' === subEntry.tag);\n            const sourceData = sourceEntryReference.tree.find((subEntry) => 'DATA' === subEntry.tag);\n            const date = sourceData ? resolveDate(sourceData) : undefined;\n            return {\n                title: title?.data || abbr?.data,\n                author: author?.data,\n                page: page?.data,\n                date: date ? getDate(date.data) : undefined,\n                publicationInfo: publicationInfo?.data,\n            };\n        });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n    return entry.tree\n        .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n        .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n        .map((note) => getData(note));\n}\n\nfunction toEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    return entry.tag === 'FAMS' ? toFamilyEvents(entry, gedcom, indi) : toIndiEvent(entry, gedcom, indi);\n}\n\nfunction toIndiEvent(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const date = resolveDate(entry) || null;\n    return [\n        {\n            date: date ? getDate(date.data) : undefined,\n            type: entry.tag,\n            place: eventPlace(entry),\n            images: eventImages(entry, gedcom),\n            notes: eventNotes(entry, gedcom),\n            sources: eventSources(entry, gedcom),\n            indi: indi,\n        },\n    ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n    return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n    entry: GedcomEntry,\n    gedcom: GedcomData,\n    indi: string,\n): EventData[] {\n    const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n    return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n        family.tree.filter((entry) => entry.tag === tag),\n    ).map((familyMarriageEvent) => {\n        const date = resolveDate(familyMarriageEvent) || null;\n        return {\n            date: date ? getDate(date.data) : undefined,\n            type: familyMarriageEvent.tag,\n            personLink: getSpouse(indi, family, gedcom),\n            place: eventPlace(familyMarriageEvent),\n            images: eventImages(familyMarriageEvent, gedcom),\n            notes: eventNotes(familyMarriageEvent, gedcom),\n            sources: eventSources(familyMarriageEvent, gedcom),\n            indi: indi,\n        };\n    });\n}\n\nfunction Event(props: { event: EventData }) {\n    return (\n        <Item>\n            <Item.Content>\n                <EventHeader event={props.event}/>\n                {!!props.event.personLink && (<PersonLink person={props.event.personLink}/>)}\n                {!!props.event.place && (<Item.Description>{props.event.place}</Item.Description>)}\n                <EventExtras\n                    images={props.event.images}\n                    notes={props.event.notes}\n                    sources={props.event.sources}\n                    indi={props.event.indi}\n                />\n            </Item.Content>\n        </Item>\n    );\n}\n\nexport function Events(props: Props) {\n    const events = flatMap(EVENT_TAGS, (tag) =>\n        props.entries\n            .filter((entry) => entry.tag === tag)\n            .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi))\n            .flatMap((events) => events)\n            .sort((event1, event2) => compareDates(event1.date, event2.date)),\n    );\n    if (events.length) {\n        return (\n            <>\n                {events.map((event, index) => (\n                    <Event event={event} key={index}/>\n                ))}\n            </>\n        );\n    }\n    return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n    dereference,\n    GedcomData,\n    getData,\n    getFileName,\n    getImageFileEntry\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n    'BIRT',\n    'BAPM',\n    'CHR',\n    'EVEN',\n    'CENS',\n    'DEAT',\n    'BURI',\n    'NAME',\n    'SEX',\n    'FAMC',\n    'FAMS',\n    'NOTE',\n    'SOUR',\n    'LANG',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n    const lines = [];\n    if (entry.data) {\n        lines.push(...getData(entry));\n    }\n    entry.tree\n        .filter((subentry) => subentry.tag === 'NOTE')\n        .forEach((note) =>\n            getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n        );\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <>\n            <Header sub>\n                <TranslatedTag tag={entry.tag}/>\n            </Header>\n            <span>\n                <MultilineText lines={lines}/>\n            </span>\n        </>\n    );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n    const imageFileEntry = getImageFileEntry(objectEntry);\n    return imageFileEntry ? (\n        <div className=\"person-image\">\n            <WrappedImage\n                url={imageFileEntry.data}\n                filename={getFileName(imageFileEntry) || ''}\n            />\n        </div>\n    ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n    return (\n        <MultilineText\n            lines={getData(entry).map((line, index) => (\n                <i key={index}>{line}</i>\n            ))}\n        />\n    );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n    const fullName = entry.data.replaceAll('/', '');\n    const nameType = entry.tree.find(\n        (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n    )?.data;\n    return (\n        <>\n            <Header as=\"span\" size=\"large\">\n                {fullName ? (\n                    fullName\n                ) : (\n                    <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\"/>\n                )}\n            </Header>\n            {fullName && nameType && (\n                <Item.Meta>\n                    <TranslatedTag tag={nameType}/>\n                </Item.Meta>\n            )}\n        </>\n    );\n}\n\nfunction getDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n    return flatMap(tags, (tag) =>\n        entries\n            .filter((entry) => entry.tag === tag)\n            .map((entry) => detailsFunction(entry)),\n    )\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n    return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n    return entries\n        .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n        .filter(hasData)\n        .map((entry) => dataDetails(entry))\n        .filter((element) => element !== null)\n        .map((element, index) => (\n            <Item key={index}>\n                <Item.Content>{element}</Item.Content>\n            </Item>\n        ));\n}\n\nfunction getMultilineDetails(\n    entries: GedcomEntry[],\n    tags: string[],\n    title: [string, string],\n) {\n    const lines= entries\n        .filter((entry) => tags.includes(entry.tag))\n        .filter(hasData)\n        .map((element) => element.data)\n    if (!lines.length) {\n        return null;\n    }\n    return (\n        <Item key=\"languages\">\n            <Item.Content>\n                <Header as=\"span\">\n                    <FormattedMessage id={title[0]} defaultMessage={title[1]}/>\n                </Header>\n                <span>\n                    <MultilineText lines={lines}/>\n                </span>\n            </Item.Content>\n        </Item>\n    );\n}\n\ninterface Props {\n    gedcom: GedcomData;\n    indi: string;\n}\n\nexport function Details(props: Props) {\n    const entries = props.gedcom.indis[props.indi].tree;\n    const entriesWithData = entries\n        .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n        .filter(hasData);\n\n    return (\n        <div className=\"details\">\n            <Item.Group divided>\n                {getDetails(entries, ['NAME'], nameDetails)}\n                {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n                <Events gedcom={props.gedcom} entries={entries} indi={props.indi}/>\n                {getMultilineDetails(entriesWithData, ['LANG'], ['gedcom.languages', 'Languages'])}\n                {getOtherDetails(entriesWithData)}\n                {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n            </Item.Group>\n        </div>\n    );\n}\n","import {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\nimport {Language} from \"../languages/languages-loader\";\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n    GEDCOM = 'gedcom',\n    READY = 'ready',\n    PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n    message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n    message: EmbeddedMessageType.GEDCOM;\n    gedcom?: string;\n    allLanguages?: Language[]\n}\n\nexport interface EmbeddedSourceSpec {\n    source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<EmbeddedSourceSpec>,\n        oldSource: SourceSelection<EmbeddedSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        // Never reload data.\n        return false;\n    }\n\n    private async onMessage(\n        message: EmbeddedMessage,\n        resolve: (value: TopolaData) => void,\n        reject: (reason: any) => void,\n    ) {\n        if (message.message === EmbeddedMessageType.PARENT_READY) {\n            // Parent didn't receive the first 'ready' message, so we need to send it again.\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n        } else if (message.message === EmbeddedMessageType.GEDCOM) {\n            const gedcom = (message as GedcomMessage).gedcom;\n            const allLanguages = (message as GedcomMessage).allLanguages;\n            if (!gedcom || !allLanguages) {\n                return;\n            }\n            try {\n                const data = await loadGedcom('', gedcom, allLanguages);\n                resolve(data);\n            } catch (error) {\n                reject(error);\n            }\n        }\n    }\n\n    async loadData(source: SourceSelection<EmbeddedSourceSpec>): Promise<TopolaData> {\n        // Notify the parent window that we are ready.\n        return new Promise<TopolaData>((resolve, reject) => {\n            window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n            window.addEventListener('message', (data) =>\n                this.onMessage(data.data, resolve, reject),\n            );\n        });\n    }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n    if (!(error instanceof TopolaError)) {\n        return error.message;\n    }\n    return intl.formatMessage(\n        {\n            id: `error.${error.code}`,\n            defaultMessage: error.message,\n        },\n        error.args,\n    );\n}\n","import {\n    Menu,\n    Dropdown,\n    MenuItemProps,\n    DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n    Menu,\n    Dropdown\n}\n\ninterface Props {\n    menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n    const newProps = {...props};\n    // Remove menuType from props to avoid error message in the console.\n    delete newProps.menuType;\n    return (\n        <>\n            {props.menuType === MenuType.Menu? (\n                <Menu.Item {...newProps}>{props.children}</Menu.Item>\n            ) : (\n                <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n            )}\n        </>\n    );\n}\n","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n    breakpoints: {\n        small: 320,\n        large: 768,\n    },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import lunr, {PipelineFunction} from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from '../lib/topola';\n\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n    id: string;\n    indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n    search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n    return input\n        .toLocaleLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n    if (a.score !== b.score) {\n        return b.score - a.score;\n    }\n    return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n    indi: JsonIndi,\n    indiMap: Map<String, JsonIndi>,\n    famMap: Map<string, JsonFam>,\n): string {\n    return (indi.fams || [])\n        .map((famId) => famMap.get(famId))\n        .map((fam) => fam && fam.husb)\n        .map((husbId) => husbId && indiMap.get(husbId))\n        .map((husband) => husband && husband.lastName)\n        .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n    private index: lunr.Index | undefined;\n    private indiMap: Map<string, JsonIndi>;\n    private famMap: Map<string, JsonFam>;\n\n    constructor(data: JsonGedcomData) {\n        this.indiMap = idToIndiMap(data);\n        this.famMap = idToFamMap(data);\n    }\n\n    initialize() {\n        const self = this;\n        this.index = lunr(function () {\n            //Trimmer will break non-latin characters, so custom multilingual implementation must be used\n            self.initMultiLingualLunrWithoutTrimmer(this, [\n                'de',\n                'en',\n                'fr',\n                'it',\n                'ru',\n            ]);\n            this.ref('id');\n            this.field('id');\n            this.field('name', {boost: 10});\n            this.field('normalizedName', {boost: 8});\n            this.field('spouseLastName', {boost: 2});\n            this.field('normalizedSpouseLastName', {boost: 2});\n\n            self.indiMap.forEach((indi) => {\n                const name = [indi.firstName, indi.lastName].join(' ');\n                const spouseLastName = getHusbandLastName(\n                    indi,\n                    self.indiMap,\n                    self.famMap,\n                );\n                this.add({\n                    id: indi.id,\n                    name,\n                    normalizedName: normalize(name),\n                    spouseLastName,\n                    normalizedSpouseLastName: normalize(spouseLastName),\n                });\n            });\n        });\n    }\n\n    private initMultiLingualLunrWithoutTrimmer(\n        lunrInstance: any,\n        languages: string[],\n    ): void {\n        let wordCharacters = '';\n        const pipelineFunctions: PipelineFunction[] = [];\n        const searchPipelineFunctions: PipelineFunction[] = [];\n        languages.forEach((language) => {\n            if (language === 'en') {\n                wordCharacters += '\\\\w';\n                pipelineFunctions.unshift(lunr.stopWordFilter);\n                pipelineFunctions.push(lunr.stemmer);\n                searchPipelineFunctions.push(lunr.stemmer);\n            } else {\n                wordCharacters += lunr[language].wordCharacters;\n                if (lunr[language].stopWordFilter) {\n                    pipelineFunctions.unshift(lunr[language].stopWordFilter);\n                }\n                if (lunr[language].stemmer) {\n                    pipelineFunctions.push(lunr[language].stemmer);\n                    searchPipelineFunctions.push(lunr[language].stemmer);\n                }\n            }\n        });\n        lunrInstance.pipeline.reset();\n        lunrInstance.pipeline.add.apply(lunrInstance.pipeline, pipelineFunctions);\n\n        if (lunrInstance.searchPipeline) {\n            lunrInstance.searchPipeline.reset();\n            lunrInstance.searchPipeline.add.apply(\n                lunrInstance.searchPipeline,\n                searchPipelineFunctions,\n            );\n        }\n    }\n\n    public search(input: string): SearchResult[] {\n        const query = input\n            .split(' ')\n            .filter((s) => !!s)\n            .map((s) => `${s} ${s}*`)\n            .join(' ');\n        const results = this.index!.search(query);\n        return results\n            .sort(compare)\n            .slice(0, MAX_RESULTS)\n            .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n    }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n    const index = new LunrSearchIndex(data);\n    index.initialize();\n    return index;\n}\n","import debounce from 'debounce';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData, JsonIndi} from '../lib/topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n    const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n    if (result.id.length > 8) {\n        return name;\n    }\n    return (\n        <>\n            {name} <i>({result.id})</i>\n        </>\n    );\n}\n\ninterface Props {\n    /** Data used for the search index. */\n    data: JsonGedcomData;\n    onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n    const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n    const [searchString, setSearchString] = useState('');\n    const searchIndex = useRef<SearchIndex>();\n    const intl = useIntl();\n\n    function getDescriptionLine(indi: JsonIndi) {\n        const birthDate = formatDateOrRange(indi.birth, intl);\n        const deathDate = formatDateOrRange(indi.death, intl);\n        if (!deathDate) {\n            return birthDate;\n        }\n        return `${birthDate} – ${deathDate}`;\n    }\n\n    /** Produces an object that is displayed in the Semantic UI Search results. */\n    function displaySearchResult(result: SearchResult): SearchResultProps {\n        return {\n            id: result.id,\n            key: result.id,\n            title: getNameLine(result),\n            description: getDescriptionLine(result.indi),\n        } as SearchResultProps;\n    }\n\n    /** On search input change. */\n    function handleSearch(input: string | undefined) {\n        if (!input) {\n            return;\n        }\n        const results = searchIndex\n            .current!.search(input)\n            .map((result) => displaySearchResult(result));\n        setSearchResults(results);\n    }\n\n    const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n    /** On search result selected. */\n    function handleResultSelect(id: string) {\n        props.onSelection({id, generation: 0});\n        setSearchString('');\n    }\n\n    /** On search string changed. */\n    function onChange(value: string) {\n        debouncedHandleSearch.current(value);\n        setSearchString(value);\n    }\n\n    // Initialize the search index.\n    useEffect(() => {\n        searchIndex.current = buildSearchIndex(props.data);\n    }, [props.data]);\n\n    return (\n        <Search\n            onSearchChange={(_, data) => onChange(data.value!)}\n            onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n            results={searchResults}\n            noResultsMessage={intl.formatMessage({\n                id: 'menu.search.no_results',\n                defaultMessage: 'No results found',\n            })}\n            placeholder={intl.formatMessage({\n                id: 'menu.search.placeholder',\n                defaultMessage: 'Search for people',\n            })}\n            selectFirstResult={true}\n            value={searchString}\n            id=\"search\"\n        />\n    );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {loadFile} from '../datasource/load_data';\n\nfunction isImageFileName(fileName: string) {\n    const lower = fileName.toLowerCase();\n    return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n    const history = useHistory();\n    const location = useLocation();\n\n    async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        const files = (event.target as HTMLInputElement).files;\n        if (!files || !files.length) {\n            return;\n        }\n        const filesArray = Array.from(files);\n        (event.target as HTMLInputElement).value = ''; // Reset the file input.\n\n        const gedcomFile =\n            filesArray.length === 1\n                ? filesArray[0]\n                : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n                filesArray[0];\n        const {gedcom, images} = await loadFile(gedcomFile);\n\n        // Convert uploaded images to object URLs.\n        filesArray\n            .filter((file) => file.name !== gedcomFile.name && isImageFileName(file.name))\n            .forEach((file) => images.set(file.name, URL.createObjectURL(file)));\n\n        // Hash GEDCOM contents with uploaded image file names.\n        const imageFileNames = Array.from(images.keys()).sort().join('|');\n        const hash = md5(md5(gedcom) + imageFileNames);\n\n        // Use history.replace() when re-uploading the same file and history.push() when loading a new file.\n        const search = queryString.parse(location.search);\n        const historyPush = search.file === hash ? history.replace : history.push;\n\n        historyPush({\n            pathname: '/view',\n            search: queryString.stringify({file: hash}),\n            state: {data: gedcom, images}\n        });\n    }\n\n    const content = (\n        <>\n            <Icon name=\"folder open\"/>\n            <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\"/>\n        </>\n    );\n    return (\n        <>\n            {props.menuType === MenuType.Menu ? (\n                <label htmlFor=\"fileInput\">\n                    <Menu.Item as=\"a\">{content}</Menu.Item>\n                </label>\n            ) : (\n                <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n                    {content}\n                </Dropdown.Item>\n            )}\n            <input className=\"hidden\"\n                type=\"file\"\n                accept=\".ged,.gdz,.gedzip,.zip,image/*\"\n                id=\"fileInput\"\n                multiple\n                onChange={handleUpload}\n            />\n        </>\n    );\n}\n","import * as queryString from 'query-string';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n    menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [url, setUrl] = useState('');\n    const inputRef = useRef<Input>(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (dialogOpen) {\n            setUrl('');\n            inputRef.current!.focus();\n        }\n    }, [dialogOpen]);\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    function handleLoad() {\n        setDialogOpen(false);\n        if (url) {\n            history.push({\n                pathname: '/view',\n                search: queryString.stringify({url})\n            });\n        }\n    }\n\n    function loadFromUrlModal() {\n        return (\n            <Modal open={dialogOpen} onClose={() => setDialogOpen(false)} centered={false}>\n                <Header>\n                    <Icon name=\"cloud download\"/>\n                    <FormattedMessage id=\"load_from_url.title\" defaultMessage=\"Load from URL\"/>\n                </Header>\n                <Modal.Content>\n                    <Form onSubmit={handleLoad}>\n                        <Input\n                            placeholder=\"https://\"\n                            fluid\n                            value={url}\n                            onChange={(_, data) => setUrl(data.value)}\n                            ref={inputRef}\n                        />\n                        <p>\n                            <FormattedMessage\n                                id=\"load_from_url.comment\"\n                                defaultMessage={\n                                    'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                                }\n                                values={{\n                                    link: (\n                                        <a href=\"https://corsproxy.io/\">corsproxy.io</a>\n                                    ),\n                                }}\n                            />\n                        </p>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => setDialogOpen(false)}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary onClick={handleLoad}>\n                        <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"cloud download\"/>\n                <FormattedMessage id=\"menu.load_from_url\" defaultMessage=\"Load from URL\"/>\n            </MenuItem>\n            {loadFromUrlModal()}\n        </>\n    );\n}\n","import {SemanticCOLORS, Table, TableBody, TableCell, TableHeader, TableHeaderCell, TableRow} from \"semantic-ui-react\";\n\nexport function IndividualsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell>name</TableHeaderCell>\n                    <TableHeaderCell>surname</TableHeaderCell>\n                    <TableHeaderCell>nickname</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>sex *</TableHeaderCell>\n                    <TableHeaderCell >YOB</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>ethnic *</TableHeaderCell>\n                    <TableHeaderCell>clan</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Jane</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>F</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled>Some comments</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>John</TableCell>\n                    <TableCell disabled>Doe</TableCell>\n                    <TableCell disabled>Johnny</TableCell>\n                    <TableCell>M</TableCell>\n                    <TableCell disabled>1983</TableCell>\n                    <TableCell>WHITE</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function RelationshipsTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell>father_id</TableHeaderCell>\n                    <TableHeaderCell>mother_id</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell disabled>I200</TableCell>\n                    <TableCell disabled>I201</TableCell>\n                    <TableCell disabled></TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function FamiliesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>husband_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>wife_id *</TableHeaderCell>\n                    <TableHeaderCell>notes</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>F200</TableCell>\n                    <TableCell>I200</TableCell>\n                    <TableCell>I201</TableCell>\n                    <TableCell disabled>Common Law settlement</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}\n\nexport function IndividualsLanguagesTableExample({ headerColor }: { headerColor?: SemanticCOLORS }) {\n    return (\n        <Table compact size=\"small\" color={headerColor}>\n            <TableHeader>\n                <TableRow>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>person_id *</TableHeaderCell>\n                    <TableHeaderCell style={{ \"color\": \"\" }}>language_id *</TableHeaderCell>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <TableRow>\n                    <TableCell>I200</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>1</TableCell>\n                </TableRow>\n                <TableRow>\n                    <TableCell>I202</TableCell>\n                    <TableCell>3</TableCell>\n                </TableRow>\n            </TableBody>\n        </Table>\n    )\n}","const Papa = require(\"papaparse\");\n\nexport const columnsValidation = {\n    \"1_individuals.csv\": [\"id\", \"name\", \"surname\", \"nickname\", \"sex\", \"YOB\", \"ethnic\", \"clan\", \"notes\"],\n    \"2_relationships.csv\": [\"person_id\", \"father_id\", \"mother_id\", \"notes\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport const valuesValidation = {\n    \"1_individuals.csv\": [\"id\", \"sex\"],\n    \"2_relationships.csv\": [\"person_id\"],\n    \"3_families.csv\": [\"id\", \"husband_id\", \"wife_id\"],\n    \"4_individuals_languages.csv\": [\"person_id\", \"language_id\"]\n}\n\nexport function validateFilenames(files: File[], validFilenames: string[]): boolean {\n    for (const file of files) {\n        const filename = file.name;\n        if (!validFilenames.includes(filename)) {\n            console.error(`Invalid filename: ${filename}`);\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function validateCSV(filename: string, content: string) {\n    const parsedData = Papa.parse(content, { header: true, skipEmptyLines: true });\n    if (parsedData.errors.length) {\n        console.error(\"CSV loading errors:\", parsedData.errors);\n        return false;\n    }\n    const rows = parsedData.data as Record<string, string>[];\n    return checkColumns(filename, rows, columnsValidation[filename])\n        && checkMissingValues(filename, rows, valuesValidation[filename])\n        && checkIdFormat(filename, rows, valuesValidation[filename]);\n}\n\nexport function checkColumns(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const headers = Object.keys(rows[0]);\n    // Check for missing columns\n    const missingColumns = requiredColumns.filter(col => !headers.includes(col));\n    if (missingColumns.length) {\n        const error = `${filename}: the following required columns are missing: ${missingColumns.join(\", \")}`\n        console.error(error);\n        return false;\n    }\n    return true;\n}\n\nexport function checkMissingValues(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const cellErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Checks empty\n            if (!row[column] || row[column].trim() === \"\") {\n                cellErrors.push(`${filename}: row ${index + 1} is missing a value in column: ${column}`);\n            }\n        });\n    });\n    if (cellErrors.length > 0) {\n        console.error(`File ${filename} had ${cellErrors.length} missing values`)\n    }\n    return cellErrors.length <= 0\n}\n\nexport function checkIdFormat(filename: string, rows: Record<string, string>[], requiredColumns: string[]) {\n    const indiIdErrors: string[] = [];\n    const famIdErrors: string[] = [];\n    const langIdErrors: string[] = [];\n    rows.forEach((row, index) => {\n        requiredColumns.forEach(column => {\n            // Check id format\n            switch(filename) {\n                case \"1_individuals.csv\":\n                    if (column === \"id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"2_relationships.csv\":\n                    if ([\"person_id\", \"father_id\", \"mother_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"3_families.csv\":\n                    if (column === \"id\" && !row[column].startsWith('F')) {\n                        famIdErrors.push(`${filename}: row ${index + 1} is not a valid family ID`);\n                        console.log(`${filename}: '${column}' must start with 'F'`)\n                    }\n                    if ([\"husband_id\", \"wife_id\"].includes(column) && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    break;\n                case \"4_individuals_languages.csv\":\n                    if (column === \"person_id\" && !row[column].startsWith('I')) {\n                        indiIdErrors.push(`${filename}: row ${index + 1} is not a valid individual ID`);\n                        console.log(`${filename}: '${column}' must start with 'I'`)\n                    }\n                    if (column === \"language_id\" && isNaN(Number(row[column]))) {\n                        langIdErrors.push(`${filename}: row ${index + 1} is not a valid language ID`);\n                        console.log(`${filename}: '${column}' must be a number`)\n                    }\n                    break;\n            }\n        });\n    });\n    return indiIdErrors.length <= 0 && famIdErrors.length <= 0 && langIdErrors.length <= 0\n}\n\n","const Graph = require(\"graphology\");\nconst shortestPath = require(\"graphology-shortest-path\");\n\nexport enum Sex {\n    M = \"M\",\n    F = \"F\"\n}\n\nexport class Individual {\n    id: string | null = null;\n    sex: Sex | null = null;\n    givenName?: string;\n    surname?: string;\n    nickname?: string;\n    birthYear?: number;\n    ethnicity?: string;\n    tribe?: string;\n    familySpouses: string[] = [];\n    languages: string[] = [];\n    familyChild?: string;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        sex: Sex;\n        givenName?: string;\n        surname?: string;\n        nickname?: string;\n        birthYear?: number;\n        ethnicity?: string;\n        tribe?: string;\n        familySpouses?: string[];\n        languages?: string[];\n        familyChild?: string;\n        notes?: string;\n    }) {\n        Object.assign(this, params);\n    }\n\n    get name(): string | null {\n        if (this.givenName || this.surname || this.nickname) {\n            let name = \"\";\n            if (this.givenName) name += this.givenName;\n            if (this.nickname) name += ` \"${this.nickname}\"`;\n            if (this.surname) name += ` /${this.surname}/`;\n            return name;\n        }\n        return null;\n    }\n\n    generation(relationships: Record<string, [string | null, string | null]>): string {\n        const g = new Graph({ type: \"directed\" });\n        // Add all nodes\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (!g.hasNode(indID)) {\n                g.addNode(indID);\n            }\n            if (!g.hasNode(fatherId)) {\n                g.addNode(fatherId);\n            }\n            if (!g.hasNode(motherId)) {\n                g.addNode(motherId);\n            }\n        }\n        // Add all edges\n        for (const [indID, [fatherId, motherId]] of Object.entries(relationships)) {\n            if (fatherId) g.addEdge(fatherId, indID);\n            if (motherId) g.addEdge(motherId, indID);\n        }\n        // @ts-ignore\n        const source = g.nodes().reduce((min, current) => {\n            const minValue = parseInt(min.slice(1), 10);\n            const currentValue = parseInt(current.slice(1), 10);\n            return currentValue < minValue ? current : min;\n        });\n        // @ts-ignore\n        return shortestPath.singleSourceLength(g, source)[this.id]  // root MUST have the lowest ID!\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ INDI\\n`;\n\n        if (this.name) gedcom += `1 NAME ${this.name}\\n`;\n        if (this.givenName) gedcom += `2 GIVN ${this.givenName}\\n`;\n        if (this.surname) gedcom += `2 SURN ${this.surname}\\n`;\n        if (this.nickname) gedcom += `2 NICK ${this.nickname}\\n`;\n        gedcom += `1 SEX ${this.sex}\\n`;\n        if (this.birthYear) {\n            gedcom += `1 BIRT\\n`;\n            gedcom += `2 DATE ${this.birthYear}\\n`;\n        }\n        if (this.ethnicity) gedcom += `1 _ETHN ${this.capitalize(this.ethnicity)}\\n`;\n        if (this.tribe) gedcom += `1 _TRIB ${this.capitalize(this.tribe)}\\n`;\n        for (const language of this.languages) {\n            gedcom += `1 LANG ${this.capitalize(language)}\\n`;\n        }\n        for (const famID of this.familySpouses) {\n            gedcom += `1 FAMS @${famID}@\\n`;\n        }\n        if (this.familyChild) gedcom += `1 FAMC @${this.familyChild}@\\n`;\n        if (this.notes) gedcom += `1 NOTE ${this.notes}\\n`;\n\n        return gedcom;\n    }\n\n    private capitalize(str: string): string {\n        return str\n            .toLowerCase()\n            .split(/[-\\s]/)\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join((str.includes('-') ? '-' : ' '));\n    }\n}\n","export class Family {\n    id: string;\n    husband: string;\n    wife: string;\n    marriaged: boolean = false;\n    children: string[] = [];\n    divorced?: boolean = false;\n    notes?: string;\n\n    constructor(params: {\n        id: string;\n        husband: string;\n        wife: string;\n        marriaged?: boolean;\n        children?: string[];\n        divorced?: boolean;\n        notes?: string;\n    }) {\n        this.id = params.id;\n        this.husband = params.husband;\n        this.wife = params.wife;\n        this.marriaged = params.marriaged ?? false;\n        this.children = params.children ?? [];\n        this.divorced = params.divorced ?? false;\n        this.notes = params.notes;\n    }\n\n    asGedcom(): string {\n        let gedcom = `0 @${this.id}@ FAM\\n`;\n        gedcom += `1 HUSB @${this.husband}@\\n`;\n        gedcom += `1 WIFE @${this.wife}@\\n`;\n        if (this.marriaged) {\n            gedcom += `1 MARR\\n`;\n        } else {\n            gedcom += `1 MARS\\n`;\n            gedcom += `2 TYPE \"Common Law\"\\n`;\n        }\n        for (const childId of this.children) {\n            gedcom += `1 CHIL @${childId}@\\n`;\n        }\n        if (this.divorced) {\n            gedcom += `1 DIV\\n`;\n        }\n        if (this.notes) {\n            gedcom += `1 NOTE ${this.notes}\\n`;\n        }\n        return gedcom;\n    }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport {Individual, Sex} from \"./individual\";\nimport {Language} from \"./languages-loader\";\nimport {Family} from \"./family\";\n\ntype Relationships = Record<string, [string, string]>;\n\nexport async function csvToGedcom(\n    languagesContents: string,\n    individualsContent: string,\n    relationshipsContent: string,\n    familiesContent: string,\n    individualsLanguagesContent: string | null,\n    egoIndiId: string | null\n) {\n    try {\n        const individuals = parseIndividuals(individualsContent);\n        const relationships = parseRelationships(relationshipsContent);\n        const families = parseFamilies(familiesContent);\n        mapFamiliesChildren(relationships, families, individuals);\n        mapIndividualsSpouses(families, individuals);\n        if (languagesContents && individualsLanguagesContent) {\n            const languages = parseLanguages(languagesContents);\n            const individualsLanguages = parseIndividualsLanguages(individualsLanguagesContent);\n            mapIndividualsLanguages(individuals, individualsLanguages, languages);\n        }\n        return await createGedcomString(individuals, relationships, families, egoIndiId);\n    } catch (e) {\n        throw e;\n    }\n}\n\nfunction parseIndividuals(individualsContent: string): Individual[] {\n    const rows = parseCSV(individualsContent);\n    return rows.map(row => new Individual({\n        id: row[\"id\"],\n        sex: row[\"sex\"] as Sex,\n        givenName: row[\"name\"] || undefined,\n        surname: row[\"surname\"] || undefined,\n        nickname: row[\"nickname\"] || undefined,\n        birthYear: row[\"YOB\"] ? parseInt(row[\"YOB\"], 10) : undefined,\n        ethnicity: row[\"ethnic\"] || undefined,\n        tribe: row[\"clan\"] || undefined,\n        familySpouses: [],\n        languages: [],\n        notes: row[\"notes\"] || undefined\n    }));\n\n}\n\nfunction parseLanguages(languagesContents: string): Language[] {\n    const rows = parseCSV(languagesContents);\n    return rows.map(row => ({\n        id: row[\"id\"],\n        name: row[\"name\"]\n    }));\n}\n\nfunction parseIndividualsLanguages(individualsLanguagesContent: string): Record<string, string[]> {\n    const rows = parseCSV(individualsLanguagesContent);\n    const individualsLanguages: Record<string, string[]> = {};\n    rows.forEach(row => {\n        const personId = row[\"person_id\"];\n        if (!individualsLanguages[personId]) {\n            individualsLanguages[personId] = [];\n        }\n        individualsLanguages[personId].push(row[\"language_id\"]);\n    });\n    return individualsLanguages;\n}\n\nfunction parseRelationships(relationshipsContent: string): Relationships {\n    const rows = parseCSV(relationshipsContent);\n    const relationships: Relationships = {};\n    rows.forEach(row => {\n        if (row[\"father_id\"] && row[\"mother_id\"]) {\n            relationships[row[\"person_id\"]] = [row[\"father_id\"], row[\"mother_id\"]];\n        }\n    });\n    return relationships;\n}\n\nfunction parseFamilies(familiesContent: string): Family[] {\n    const rows = parseCSV(familiesContent);\n    return rows.map(row => new Family({\n        id: row[\"id\"],\n        husband: row[\"husband_id\"],\n        wife: row[\"wife_id\"],\n        children: [],\n        notes: row[\"notes\"] || undefined\n    }));\n}\n\nfunction mapIndividualsLanguages(\n    individuals: Individual[],\n    individualsLanguages: Record<string, string[]>,\n    languages: Language[]\n): void {\n    Object.entries(individualsLanguages).forEach(([personId, langIds]) => {\n        const individual = individuals.find(ind => ind.id === personId);\n        if (!individual)\n            throw new Error(`Individual not found: ${personId}`);\n        langIds.forEach(langId => {\n            const language = languages.find(lang => lang.id === langId);\n            if (!language)\n                throw new Error(`Language not found: ${langId}`);\n            individual.languages.push(language.name);\n        });\n    });\n}\n\nfunction mapFamiliesChildren(\n    relationships: Relationships,\n    families: Family[],\n    individuals: Individual[]\n): void {\n    Object.entries(relationships).forEach(([childId, [fatherId, motherId]]) => {\n        const family = families.find(fam => fam.husband === fatherId && fam.wife === motherId);\n        if (!family)\n            throw new Error(`Family not found: ${childId} (${fatherId}, ${motherId})`);\n        family.children.push(childId);\n        const individual = individuals.find(ind => ind.id === childId);\n        if (!individual)\n            throw new Error(`Individual not found: ${childId}`);\n        individual.familyChild = family.id;\n    });\n}\n\nfunction mapIndividualsSpouses(families: Family[], individuals: Individual[]): void {\n    families.forEach(family => {\n        const husband = individuals.find(ind => ind.id === family.husband);\n        if (!husband)\n            throw new Error(`Husband not found: ${family.husband}`);\n        husband.familySpouses.push(family.id);\n        const wife = individuals.find(ind => ind.id === family.wife);\n        if (!wife)\n            throw new Error(`Wife not found: ${family.wife}`);\n        wife.familySpouses.push(family.id);\n    });\n}\n\nasync function createGedcomString(\n    individuals: Individual[],\n    relationships: Relationships,\n    families: Family[],\n    egoIndiId: string | null\n) {\n    let egoIndi = null\n    let lowestEgoIndi = null\n    let egoGeneration = null\n    let filename = null\n\n    if (egoIndiId) {\n        try {\n            egoIndi = individuals.filter(_i => _i.id === egoIndiId);\n            // @ts-ignore\n            lowestEgoIndi = egoIndi.reduce((prev, current) => (prev.id < current.id ? prev : current));\n            egoGeneration = lowestEgoIndi.generation(relationships)\n            filename = `${lowestEgoIndi.givenName?.toLowerCase()}_${lowestEgoIndi.surname?.toLowerCase()}`\n            if (!lowestEgoIndi || !egoGeneration)\n                throw new Error()\n        } catch(e) {\n            throw new Error(`Ego individual not found: ${egoIndiId}`);\n        }\n    }\n    const header = await createHeader(\n        filename,\n        lowestEgoIndi ? lowestEgoIndi.id : null,\n        egoGeneration ? egoGeneration : null\n    );\n    const indiRecords = individuals.map(indi => indi.asGedcom()).join(\"\\n\");\n    const famRecords = families.map(fam => fam.asGedcom()).join(\"\\n\");\n    const tail = await createTail(filename);\n\n    return [header, indiRecords, famRecords, tail].join(\"\\n\")\n}\n\nasync function createHeader(filename: string | null, egoId: string | null, egoGen: string | null) {\n    const headerFile = await fetch(\"data/header.ged\");\n    const headerTemplate = await headerFile.text();\n    const date = new Date().toLocaleDateString('en-GB', {day: '2-digit', month: 'short', year: 'numeric'});\n    let replaced = headerTemplate\n        .replace(/{file}/g, filename ? filename: \"genealogy.ged\")\n        .replace(/{date}/g, date)\n        .replace(/{subm}/g, 'drexa1@hotmail.com')\n    if (egoId && egoGen) {\n        const egoSection = `\\n0 @${egoId}@ EGO\\n1 GEN ${egoGen}\\n`;\n        replaced += egoSection;\n    }\n    return replaced\n}\n\nasync function createTail(filename: string | null) {\n    let repoSection = \"\"\n    const uid = uuidv4().toUpperCase();\n    if (filename) {\n        const repo = `The ${filename\n            .replace(/_/g, ' ')\n            .toLowerCase()\n            .replace(/\\b\\w/g, (char) => char.toUpperCase())} family`;\n        repoSection += `0 @R0@ REPO\\n1 _UID ${uid}\\n1 NAME ${repo}\\n`\n    }\n    const tailFile = await fetch(\"data/tail.ged\");\n    const tailTemplate = await tailFile.text();\n    return repoSection + tailTemplate\n}\n\n// CSV parser utility\nfunction parseCSV(data: string): Record<string, string>[] {\n    const [header, ...rows] = data.split(\"\\n\").filter(line => line.trim() !== \"\");\n    const keys = header.split(\",\");\n    return rows.map(row => {\n        const values = row.split(\",\");\n        return keys.reduce((acc, key, index) => {\n            acc[key.trim()] = values[index].trim();\n            return acc;\n        }, {} as Record<string, string>);\n    });\n}\n","import {MenuItem, MenuType} from \"./menu_item\";\nimport {Button, Icon, SemanticCOLORS, Input, Form, Header, Label, Modal, Message} from \"semantic-ui-react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {SyntheticEvent, useEffect, useState} from \"react\";\nimport * as queryString from \"query-string\";\nimport {useHistory} from \"react-router\";\nimport {loadFile} from \"../datasource/load_data\";\nimport md5 from \"md5\";\nimport {\n    FamiliesTableExample,\n    IndividualsLanguagesTableExample,\n    IndividualsTableExample,\n    RelationshipsTableExample\n} from \"./convert_tables\";\nimport {\n    columnsValidation,\n    validateCSV,\n    validateFilenames\n} from \"../languages/validate_csv\";\nimport {csvToGedcom} from \"../languages/convert_csv\";\nimport {analyticsEvent} from \"../util/analytics\";\n\ninterface Props {\n    menuType: MenuType\n}\n\nexport const initialHeaderColors: Record<string, SemanticCOLORS> = {\n    \"1_individuals.csv\": \"yellow\",\n    \"2_relationships.csv\": \"yellow\",\n    \"3_families.csv\": \"yellow\",\n    \"4_individuals_languages.csv\": \"blue\"\n}\n\n/** Displays and handles the \"Convert CSV's\" menu. */\nexport function ConvertCSVMenu(props: Props) {\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const[inputFiles, setInputFiles] = useState<File[]>([])\n    const[headerColors, setHeaderColors] = useState<Record<string, SemanticCOLORS>>(initialHeaderColors)\n    const [egoIndiId, setEgoIndiId] = useState<string | null>(null);\n    const [errors, setErrors] = useState<string[]>([]);\n    const history = useHistory()\n\n    function closeDialog() {\n        setInputFiles([])\n        setErrors([])\n        setHeaderColors(initialHeaderColors)\n        setDialogOpen(false)\n    }\n\n    function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n        setErrors([])\n        const files = (event.target as HTMLInputElement).files;\n        // Validate number of files\n        if (!files) {\n            return\n        }\n        // Validate file names\n        if (!validateFilenames(Array.from(files), Object.keys(columnsValidation))) {\n            return\n        }\n        // Validate schemas\n        const fileReadPromises = Array.from(files).map(file => {\n            return new Promise<File | null>((resolve) => {\n                const reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n                reader.onload = () => {\n                    const fileContent = reader.result as string;\n                    const validFile = validateCSV(file.name, fileContent);\n                    if (validFile) {\n                        resolve(file);\n                    } else {\n                        resolve(null);\n                    }\n                };\n                reader.onerror = () => {\n                    console.error(\"Error reading file:\", file.name);\n                    setErrors([\"Error reading file:\" + file.name])\n                    resolve(null); // Resolve as null to exclude invalid files\n                };\n            });\n        });\n        // Wait for all file validations to complete\n        Promise.all(fileReadPromises).then(results => {\n            const validFiles = results.filter((file): file is File => file !== null);\n            const invalidFiles = Array.from(files)\n                .filter((file: File) => !validFiles.some(validFile => validFile.name === file.name))\n                .map(file => `'${file.name}'`)\n                .join(\", \");\n            if (invalidFiles) {\n                setErrors([\"Files had errors. You can check them in the browser console\"])\n            }\n            setHeaderColors(changeHeaderColors(files, validFiles));\n            setInputFiles(validFiles)\n            // Validate number of files\n            if (!validFiles || validFiles.length < 3 || validFiles.length > 4) {\n                console.error(\"Required files missing...\")\n                return\n            }\n            // All validations passed, highlight Ego input\n            const egoInput = document.querySelector(\"#egoIndi\") as HTMLDivElement;\n            // @ts-ignore\n            const egoTag = egoInput.parentElement.querySelector(\".ui.label.label\") as HTMLDivElement;\n            if (egoTag) {\n                egoTag.style.setProperty(\"background-color\", \"orange\");\n                egoTag.style.setProperty(\"color\", \"white\");\n            }\n            // (event.target as HTMLInputElement).value = ''; // Reset the file input\n        });\n    }\n\n    function changeHeaderColors(files: FileList, validFiles: File[]) {\n        const newHeaderColors = { ...initialHeaderColors };\n        Array.from(files).forEach(file => {\n            if (newHeaderColors.hasOwnProperty(file.name)) {\n                newHeaderColors[file.name] = validFiles.includes(file) ? \"green\" : \"red\";\n            }\n        });\n        return newHeaderColors;\n    }\n\n    /** Load button clicked in the \"Load from URL\" dialog. */\n    async function convert2gedcom() {\n        try {\n            const individualsFile = inputFiles.find(file => file.name === \"1_individuals.csv\");\n            const relationshipsFile = inputFiles.find(file => file.name === \"2_relationships.csv\");\n            const familiesFile = inputFiles.find(file => file.name === \"3_families.csv\");\n            const individualsLanguagesFile = inputFiles.find(file => file.name === \"4_individuals_languages.csv\");\n\n            const [individualsContent, relationshipsContent, familiesContent] = await Promise.all([\n                readFileContents(individualsFile!),\n                readFileContents(relationshipsFile!),\n                readFileContents(familiesFile!),\n            ])\n            const individualsLanguagesContent = individualsLanguagesFile ? await readFileContents(individualsLanguagesFile) : null;\n\n            const languagesFile = await fetch(\"data/languages.csv\");\n            const languagesContents = await languagesFile.text();\n\n            const gedcomString = await csvToGedcom(\n                languagesContents,\n                individualsContent,\n                relationshipsContent,\n                familiesContent,\n                individualsLanguagesContent,\n                egoIndiId\n            )\n            const gedcomFile = new Blob([gedcomString])\n            const {gedcom, images} = await loadFile(gedcomFile);\n\n            // Hash GEDCOM contents with uploaded image file names.\n            const imageFileNames = Array.from(images.keys()).sort().join('|');\n            const hash = md5(md5(gedcom) + imageFileNames);\n\n            const search = queryString.parse(window.location.search);\n            const historyPush = search.file === hash ? history.replace : history.push;\n\n            historyPush({\n                pathname: '/view',\n                search: queryString.stringify({file: hash}),\n                state: {data: gedcom, images}\n            });\n            // Finally\n            analyticsEvent('topola_convert_csv');\n            closeDialog()\n        } catch (e) {\n            console.error(e);\n            setErrors([e.message])\n        }\n    }\n\n    const readFileContents = (file: File): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => {\n                resolve(reader.result as string);\n            }\n            reader.onerror = (error) => reject(error);\n            reader.readAsText(file, \"UTF-8\");\n        });\n    };\n\n    function convertCSVModal() {\n        return (\n            <Modal open={dialogOpen} onClose={closeDialog} centered={true}>\n                <Header>\n                    <Icon name=\"sitemap\"/>\n                    <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV files to GEDCOM\"/>\n                </Header>\n                <Modal.Content>\n                    <Message negative className={errors.length === 0 ? \"hidden\" : undefined}>\n                        <p>{errors}</p>\n                    </Message>\n                    <Form onSubmit={() => convert2gedcom()}>\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"1_individuals.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>1_individuals.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"2_relationships.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>2_relationships.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"3_families.csv\") ? \"green\" : undefined}>\n                            <Icon name=\"file text\"/>3_families.csv\n                        </Label>}\n                        {<Label\n                            color={inputFiles.some((file: File) => file.name === \"4_individuals_languages.csv\") ? \"green\" : undefined}\n                            style={{float: \"right\"}}>\n                            <Icon name=\"file text\"/>4_individuals_languages.csv\n                        </Label>}\n\n                        <IndividualsTableExample headerColor={headerColors[\"1_individuals.csv\"]}/>\n                        <RelationshipsTableExample headerColor={headerColors[\"2_relationships.csv\"]}/>\n                        <FamiliesTableExample headerColor={headerColors[\"3_families.csv\"]}/>\n                        <IndividualsLanguagesTableExample headerColor={headerColors[\"4_individuals_languages.csv\"]}/>\n\n                        <div style={{textAlign: \"center\", marginBottom: 10}}>\n                            <Input id=\"egoIndi\"\n                                   disabled={\n                                       ![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                                           inputFiles.some((file: File) => file.name === fileName)\n                                       )\n                                    }\n                                   fluid\n                                   size=\"small\"\n                                   label=\"Ego ID\"\n                                   labelPosition=\"left\"\n                                   icon=\"user\"\n                                   placeholder=\"I000\"\n                                   onChange={(_e, { value }) => setEgoIndiId(value)}\n                            />\n                        </div>\n\n                        <input type=\"file\"\n                               accept=\".csv\"\n                               id=\"fileInput\"\n                               multiple\n                               onChange={(e) => handleUpload(e)}\n                        />\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button secondary onClick={() => {\n                        closeDialog()\n                    }}>\n                        <FormattedMessage id=\"load_from_url.cancel\" defaultMessage=\"Cancel\"/>\n                    </Button>\n                    <Button primary\n                        disabled={![\"1_individuals.csv\", \"2_relationships.csv\", \"3_families.csv\"].every(fileName =>\n                            inputFiles.some((file: File) => file.name === fileName)\n                        )}\n                        onClick={() => convert2gedcom()}>\n                            <FormattedMessage id=\"load_from_gedcom.generate\" defaultMessage=\"Generate\"/>\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n                <Icon name=\"file excel\"/>\n                <FormattedMessage id=\"menu.convert_csv_gedcom\" defaultMessage=\"Convert CSV's\"/>\n            </MenuItem>\n            {convertCSVModal()}\n        </>\n    );\n}","import {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {useRef, useState} from \"react\";\nimport {ConvertCSVMenu} from \"./convert_menu\";\n\nenum ScreenSize {\n    LARGE,\n    SMALL,\n}\n\ninterface EventHandlers {\n    onSelection: (indiInfo: IndiInfo) => void;\n    onDownloadPdf: () => void;\n    onDownloadPng: () => void;\n    onDownloadSvg: () => void;\n    onDownloadGedcom: () => void;\n    onCenterView: () => void;\n}\n\ninterface Props {\n    showingChart: boolean;\n    data?: JsonGedcomData;\n    standalone: boolean;\n    eventHandlers: EventHandlers;\n}\n\nexport function TopBar(props: Props) {\n    useHistory();\n    useLocation();\n\n    function FileMenus(screenSize: ScreenSize) {\n        const [menuOpen, setMenuOpen] = useState(false);\n        const cooldown = useRef(false);\n\n        // Debug handler\n        const toggleMenu = (state: boolean) => {\n            if (!state) {\n                cooldown.current = true;\n                setMenuOpen(false);\n                setTimeout(() => {\n                    cooldown.current = false;\n                }, 150);\n            } else if (!cooldown.current) {\n                setMenuOpen(true);\n            }\n        };\n\n        // Don't show \"open\" menus in non-standalone mode.\n        if (!props.standalone) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <Dropdown\n                        onOpen={() => toggleMenu(true)}\n                        onClose={() => toggleMenu(false)}\n                        open={menuOpen}\n                        trigger={\n                            <div>\n                                <Icon name=\"folder open\"/>\n                                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\"/>\n                            </div>\n                        }\n                        className=\"item\">\n                        <Dropdown.Menu onClick={() => toggleMenu(false)}>\n                            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                            <ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                );\n            case ScreenSize.SMALL:\n                return (\n                    <>\n                        <UploadMenu menuType={MenuType.Dropdown} {...props} />\n                        <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        {/*<ConvertCSVMenu menuType={MenuType.Dropdown} {...props} />*/}\n                    </>\n                );\n        }\n    }\n\n    function ChartMenus(screenSize: ScreenSize) {\n        if (!props.showingChart) {\n            return null;\n        }\n        switch (screenSize) {\n            case ScreenSize.LARGE:\n                return (\n                    <>\n                        <Dropdown\n                            trigger={\n                                <div>\n                                    <Icon name=\"download\"/>\n                                    <FormattedMessage id=\"menu.download\" defaultMessage=\"Download\"/>\n                                </div>\n                            }\n                            className=\"item\">\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                    <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                    <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                    <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                                </Dropdown.Item>\n                                <Dropdown.Divider/>\n                                <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                    <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                            <Icon name=\"target\" />\n                            <FormattedMessage id=\"menu.view\" defaultMessage=\"Reset view\" />\n                        </Menu.Item>\n\n                        <Menu.Menu position=\"right\">\n                            <SearchBar\n                                data={props.data!}\n                                onSelection={props.eventHandlers.onSelection}\n                                {...props}\n                            />\n                        </Menu.Menu>\n                    </>\n                );\n            case ScreenSize.SMALL:\n                if (!props.showingChart) {\n                    return (\n                        <>\n                            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n                        </>\n                    );\n                } else {\n                    return (\n                        <>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_pdf\" defaultMessage=\"Download PDF\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_png\" defaultMessage=\"Download PNG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                                <Icon name=\"download\"/>\n                                <FormattedMessage id=\"menu.download_svg\" defaultMessage=\"Download SVG\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Dropdown.Item onClick={props.eventHandlers.onDownloadGedcom}>\n                                <FormattedMessage id=\"menu.download_gedcom\" defaultMessage=\"Download GEDCOM\"/>\n                            </Dropdown.Item>\n                            <Dropdown.Divider/>\n                            <Menu.Item onClick={props.eventHandlers.onCenterView}>\n                                <Icon name=\"eye\" />\n                                <FormattedMessage id=\"menu.view\" defaultMessage=\"Reset view\" />\n                            </Menu.Item>\n                        </>\n                    );\n                }\n        }\n    }\n\n    function desktopMenus() {\n        return (\n            <>\n                {FileMenus(ScreenSize.LARGE)}\n                {ChartMenus(ScreenSize.LARGE)}\n            </>\n        );\n    }\n\n    function mobileMenus() {\n        return (\n            <>\n                <Dropdown\n                    trigger={\n                        <div>\n                            <Icon name=\"sidebar\"/>\n                        </div>\n                    }\n                    className=\"item\"\n                    icon={null}\n                >\n                    <Dropdown.Menu>\n                        {FileMenus(ScreenSize.SMALL)}\n                        {ChartMenus(ScreenSize.SMALL)}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <Menu as={Media} greaterThanOrEqual=\"large\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {desktopMenus()}\n            </Menu>\n            <Menu as={Media} at=\"small\" attached=\"top\" inverted color=\"blue\" size=\"large\">\n                {mobileMenus()}\n            </Menu>\n        </>\n    );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\nimport {Language} from \"./languages/languages-loader\";\nimport {useState} from \"react\";\n\nexport enum ChartColors {\n    NO_COLOR,\n    COLOR_BY_SEX,\n    COLOR_BY_GENERATION,\n    COLOR_BY_ETHNICITY,\n    COLOR_BY_NR_LANGUAGES = 4,\n    COLOR_BY_LANGUAGE = 5,\n}\n\nexport enum LanguagesArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum EthnicityArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum IdsArg {\n    HIDE,\n    SHOW,\n}\n\nexport enum SexArg {\n    HIDE,\n    SHOW,\n}\n\nexport interface Config {\n    color: ChartColors;\n    languages: LanguagesArg;\n    ethnicity: EthnicityArg;\n    id: IdsArg;\n    sex: SexArg;\n    renderLanguagesOption: boolean\n    renderEthnicityOption: boolean\n    languageOptions: Language[],\n    selectedLanguage: string | null\n}\n\nexport const DEFAULT_CONFIG: Config = {\n    color: ChartColors.COLOR_BY_GENERATION,\n    languages: LanguagesArg.HIDE,\n    ethnicity: EthnicityArg.HIDE,\n    id: IdsArg.SHOW,\n    sex: SexArg.SHOW,\n    renderLanguagesOption: false,\n    renderEthnicityOption: false,\n    languageOptions: [],\n    selectedLanguage: null,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n    ['n', ChartColors.NO_COLOR],\n    ['g', ChartColors.COLOR_BY_GENERATION],\n    ['s', ChartColors.COLOR_BY_SEX],\n    ['e', ChartColors.COLOR_BY_ETHNICITY],\n    ['nl', ChartColors.COLOR_BY_NR_LANGUAGES],\n    ['l', ChartColors.COLOR_BY_LANGUAGE],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nconst LANGUAGES_ARG = new Map<string, LanguagesArg>([\n    ['h', LanguagesArg.HIDE],\n    ['s', LanguagesArg.SHOW],\n]);\nconst LANGUAGES_ARG_INVERSE = new Map<LanguagesArg, string>();\nLANGUAGES_ARG.forEach((v, k) => LANGUAGES_ARG_INVERSE.set(v, k));\n\nconst ETHNICITY_ARG = new Map<string, EthnicityArg>([\n    ['h', EthnicityArg.HIDE],\n    ['s', EthnicityArg.SHOW],\n]);\nconst ETHNICITY_ARG_INVERSE = new Map<EthnicityArg, string>();\nETHNICITY_ARG.forEach((v, k) => ETHNICITY_ARG_INVERSE.set(v, k));\n\nconst ID_ARG = new Map<string, IdsArg>([\n    ['h', IdsArg.HIDE],\n    ['s', IdsArg.SHOW],\n]);\nconst ID_ARG_INVERSE = new Map<IdsArg, string>();\nID_ARG.forEach((v, k) => ID_ARG_INVERSE.set(v, k));\n\nconst SEX_ARG = new Map<string, SexArg>([\n    ['h', SexArg.HIDE],\n    ['s', SexArg.SHOW],\n]);\nconst SEX_ARG_INVERSE = new Map<SexArg, string>();\nSEX_ARG.forEach((v, k) => SEX_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n    const getParam = (name: string) => {\n        return typeof args[name] === 'string' || typeof args[name] === 'number' ? args[name] : undefined;\n    };\n    return {\n        color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFAULT_CONFIG.color,\n        languages: LANGUAGES_ARG.get(getParam('l') ?? '') ?? DEFAULT_CONFIG.languages,\n        selectedLanguage: getParam('n') ?? DEFAULT_CONFIG.selectedLanguage,\n        ethnicity: ETHNICITY_ARG.get(getParam('e') ?? '') ?? DEFAULT_CONFIG.ethnicity,\n        id: ID_ARG.get(getParam('i') ?? '') ?? DEFAULT_CONFIG.id,\n        sex: SEX_ARG.get(getParam('s') ?? '') ?? DEFAULT_CONFIG.sex,\n        renderEthnicityOption: DEFAULT_CONFIG.renderEthnicityOption,\n        renderLanguagesOption: DEFAULT_CONFIG.renderLanguagesOption,\n        languageOptions: DEFAULT_CONFIG.languageOptions\n    };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n    return {\n        c: COLOR_ARG_INVERSE.get(config.color),\n        l: LANGUAGES_ARG_INVERSE.get(config.languages),\n        e: ETHNICITY_ARG_INVERSE.get(config.ethnicity),\n        i: ID_ARG_INVERSE.get(config.id),\n        s: SEX_ARG_INVERSE.get(config.sex),\n        n: config.selectedLanguage\n    };\n}\n\nexport function ConfigPanel(props: {config: Config; onChange: (config: Config) => void}) {\n    const [languagesEnabled, setLanguagesEnabled] = useState(props.config.languages === LanguagesArg.SHOW);\n    const [ethnicityEnabled, setEthnicityEnabled] = useState(props.config.ethnicity === EthnicityArg.SHOW);\n    const [idsEnabled, setIdsEnabled] = useState(props.config.id === IdsArg.SHOW);\n    const [sexEnabled, setSexEnabled] = useState(props.config.sex === SexArg.SHOW);\n\n    const toggleLanguages = (newState: LanguagesArg) => {\n        setLanguagesEnabled(!languagesEnabled);\n        props.onChange({...props.config, languages: newState});\n    };\n    const toggleEthnicity = (newState: EthnicityArg) => {\n        setEthnicityEnabled(!ethnicityEnabled);\n        props.onChange({...props.config, ethnicity: newState});\n    };\n    const toggleIds = (newState: IdsArg) => {\n        setIdsEnabled(!idsEnabled);\n        props.onChange({...props.config, id: newState});\n    };\n    const toggleSex = (newState: SexArg) => {\n        setSexEnabled(!sexEnabled);\n        props.onChange({...props.config, sex: newState});\n    };\n\n    const languageOptions = [];\n    for (let i = 0; i < props.config.languageOptions.length; i++) {\n        const language = props.config.languageOptions[i];\n        languageOptions.push(\n            <Form.Field key={i} className={!props.config.renderLanguagesOption ? 'hidden' : 'no-margin suboption'}>\n                <Checkbox\n                    radio\n                    label={language.name + \" (\" + language.abbreviation + \")\"}\n                    name=\"checkboxRadioGroup\"\n                    value={i}\n                    checked={props.config.selectedLanguage === language.id}\n                    onClick={\n                        () => {\n                            props.onChange({\n                                ...props.config,\n                                selectedLanguage: language.id,\n                                color: ChartColors.COLOR_BY_LANGUAGE,\n                                languages: LanguagesArg.SHOW,\n                            });\n                            setLanguagesEnabled(true);\n                        }\n                    }\n                />\n            </Form.Field>\n        );\n    }\n    return (\n        <Form className=\"details no-border-bottom\">\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Header sub style={{ \"margin-bottom\": \"14px\" }}>\n                            <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\"/>\n                        </Header>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.NO_COLOR\" defaultMessage=\"none\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"none\"\n                                checked={props.config.color === ChartColors.NO_COLOR}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.NO_COLOR,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_GENERATION\" defaultMessage=\"by generation\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"generation\"\n                                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_GENERATION,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_SEX\" defaultMessage=\"by gender\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"gender\"\n                                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_SEX,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_ETHNICITY\" defaultMessage=\"by ethnicity\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"ethnicity\"\n                                checked={props.config.color === ChartColors.COLOR_BY_ETHNICITY}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_ETHNICITY,\n                                            languages: LanguagesArg.HIDE,\n                                            ethnicity: EthnicityArg.SHOW,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(true);\n                                        setLanguagesEnabled(false);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        <Form.Field className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                            <Checkbox\n                                radio\n                                label={\n                                    <FormattedMessage tagName=\"label\" id=\"config.colors.COLOR_BY_LANGUAGES\" defaultMessage=\"by no. languages\"/>\n                                }\n                                name=\"checkboxRadioGroup\"\n                                value=\"languages\"\n                                checked={props.config.color === ChartColors.COLOR_BY_NR_LANGUAGES}\n                                onClick={\n                                    () => {\n                                        props.onChange({\n                                            ...props.config,\n                                            color: ChartColors.COLOR_BY_NR_LANGUAGES,\n                                            languages: LanguagesArg.SHOW,\n                                            ethnicity: EthnicityArg.HIDE,\n                                            selectedLanguage: null,\n                                        });\n                                        setEthnicityEnabled(false);\n                                        setLanguagesEnabled(true);\n                                    }\n                                }\n                            />\n                        </Form.Field>\n                        {languageOptions}\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderLanguagesOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"languages\"\n                                  checked={languagesEnabled}\n                                  onClick={() => toggleLanguages(languagesEnabled ? LanguagesArg.HIDE : LanguagesArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {languagesEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.languages\" defaultMessage=\"languages\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item className={!props.config.renderEthnicityOption ? 'hidden' : ''}>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ethnicity\"\n                                  checked={ethnicityEnabled}\n                                  onClick={() => toggleEthnicity(ethnicityEnabled ? EthnicityArg.HIDE : EthnicityArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {ethnicityEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ethnicity\" defaultMessage=\"ethnicity\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"ids\"\n                                  checked={idsEnabled}\n                                  onClick={() => toggleIds(idsEnabled ? IdsArg.HIDE : IdsArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {idsEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.ids\" defaultMessage=\"IDs\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n\n                <Item>\n                    <Item.Content>\n                        <Checkbox toggle\n                                  id=\"sex\"\n                                  checked={sexEnabled}\n                                  onClick={() => toggleSex(sexEnabled ? SexArg.HIDE : SexArg.SHOW)}\n                        />\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <label style={{ verticalAlign: \"top\" }}>\n                            {sexEnabled ?\n                                <FormattedMessage id=\"config.toggle.HIDE\" defaultMessage=\"Hide\"/> :\n                                <FormattedMessage id=\"config.toggle.SHOW\" defaultMessage=\"Show\"/>\n                            }\n                            {\" \"}\n                            <FormattedMessage id=\"config.sex\" defaultMessage=\"sex\"/>\n                        </label>\n                    </Item.Content>\n                </Item>\n            </Item.Group>\n            <div style={{textAlign: \"center\"}}>\n                <Form.Button primary onClick={\n                    () => {\n                        props.onChange(DEFAULT_CONFIG);\n                        setEthnicityEnabled(false);\n                        setLanguagesEnabled(false);\n                        setIdsEnabled(true);\n                        setSexEnabled(true);\n                    }\n                }>\n                    <FormattedMessage id=\"config.reset\" defaultMessage=\"Reset\"/>\n                </Form.Button>\n            </div>\n        </Form>\n\n);\n}\n","import {ChartColors, LanguagesArg, EthnicityArg, IdsArg, SexArg} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {D3ZoomEvent, zoom, ZoomBehavior, ZoomedElementBaseType, zoomTransform,} from 'd3-zoom';\nimport {\n    ChartColors as TopolaChartColors,\n    ChartHandle,\n    createChart,\n    DetailedRenderer,\n    HourglassChart,\n    IndiInfo,\n    JsonGedcomData,\n} from './lib/topola';\nimport {GedcomData, TopolaData} from \"./util/gedcom_util\";\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n * @param event\n */\nfunction zoomed(\n    size: [number, number],\n    event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = event.transform.k;\n    const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n    const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n    select(\"#chartSvg\")\n        .attr(\"width\", size[0] * scale)\n        .attr(\"height\", size[1] * scale)\n        .attr(\"transform\", `translate(${offsetX}, ${offsetY})`);\n    select(\"#chart\").attr(\"transform\", `scale(${scale})`);\n    parent.scrollLeft = -event.transform.x;\n    parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n    const parent = select(\"#svgContainer\").node() as Element;\n    const x = parent.scrollLeft + parent.clientWidth / 2;\n    const y = parent.scrollTop + parent.clientHeight / 2;\n    const scale = zoomTransform(parent).k;\n    select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    return new Promise<string>((resolve) => {\n        reader.onload = (e) => resolve((e.target as FileReader).result as string);\n    });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n    const href = image.href.baseVal;\n    if (!href) {\n        return;\n    }\n    try {\n        const response = await fetch(href);\n        const blob = await response.blob();\n        image.href.baseVal = await loadAsDataUrl(blob);\n    } catch (e) {\n        console.warn(\"Failed to load image:\", e);\n    }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n    const images = Array.from(svg.getElementsByTagName('image'));\n    await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n    const image = new Image();\n    image.src = URL.createObjectURL(blob);\n    return new Promise<HTMLImageElement>((resolve) => {\n        image.addEventListener(\"load\", () => resolve(image));\n    });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n    const canvas = document.createElement(\"canvas\");\n    // Scale image for better quality.\n    canvas.width = image.width * 2;\n    canvas.height = image.height * 2;\n    const ctx = canvas.getContext(\"2d\")!;\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = oldFill;\n    ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (blob) {\n                resolve(blob);\n            } else {\n                reject();\n            }\n        }, type);\n    });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n    const svg = document.getElementById(\"chartSvg\")!.cloneNode(true) as Element;\n    svg.removeAttribute(\"transform\");\n    const parent = select(\"#svgContainer\").node() as Element;\n    const scale = zoomTransform(parent).k;\n    svg.setAttribute(\"width\", String(Number(svg.getAttribute(\"width\")) / scale));\n    svg.setAttribute(\n        \"height\",\n        String(Number(svg.getAttribute(\"height\")) / scale),\n    );\n    svg.querySelector('#chart')!.removeAttribute(\"transform\");\n    return svg;\n}\n\nasync function getSvgContentsWithInlinedImages() {\n    const svg = getStrippedSvg();\n    await inlineImages(svg);\n    return new XMLSerializer().serializeToString(svg);\n}\n\nexport async function downloadSvg(filename: string | undefined) {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    saveAs(blob, filename ? filename + \".svg\" : \"genealogy.svg\");\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n    const contents = await getSvgContentsWithInlinedImages();\n    const blob = new Blob([contents], {type: \"image/svg+xml\"});\n    return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng(filename: string | undefined) {\n    const canvas = await drawOnCanvas();\n    const blob = await canvasToBlob(canvas, \"image/png\");\n    saveAs(blob, filename ? filename + \".png\" : \"genealogy.png\");\n}\n\nexport async function downloadPdf(filename: string | undefined) {\n    // Lazy load jspdf.\n    const {default: jspdf} = await import(\"jspdf\");\n    const canvas = await drawOnCanvas();\n    const doc = new jspdf({\n        orientation: canvas.width > canvas.height ? 'l' : 'p',\n        unit: \"pt\",\n        format: [canvas.width, canvas.height],\n    });\n    doc.addImage(canvas, \"PNG\", 0, 0, canvas.width, canvas.height, \"NONE\");\n    doc.save(filename ? filename + \".pdf\" : \"genealogy.pdf\");\n}\n\nexport async function downloadGedcom(gedcom: string, filename: string | undefined) {\n    const blob = new Blob([gedcom], {type: \"text/plain\"});\n    saveAs(blob, filename ? filename + \".ged\" : \"genealogy.ged\");\n}\n\ninterface GedcomTreeItem {\n    tag: string;\n    data: string;\n}\nexport function getFilename(gedcom: GedcomData | undefined) {\n    const filename = Object.entries(gedcom?.head || {})\n        .filter((k) => k[0] === \"tree\")\n        .map(_ => _[1])\n        .map(obj => obj.find((sub: GedcomTreeItem) => sub.tag === 'FILE'))\n        .map(file => file?.data)[0];\n    return !filename ? null : filename.substring(0, filename.lastIndexOf('.')) || filename; // Remove file extension (if any)\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n    Hourglass\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n    [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n    [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n    [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n    [ChartColors.COLOR_BY_ETHNICITY, TopolaChartColors.COLOR_BY_ETHNICITY],\n    [ChartColors.COLOR_BY_NR_LANGUAGES, TopolaChartColors.COLOR_BY_NR_LANGUAGES],\n    [ChartColors.COLOR_BY_LANGUAGE, TopolaChartColors.COLOR_BY_LANGUAGE]\n]);\n\nexport interface ChartProps {\n    data: JsonGedcomData;\n    selection: IndiInfo;\n    chartType: ChartType;\n    onSelection: (indiInfo: IndiInfo) => void;\n    freezeAnimation?: boolean;\n    colors?: ChartColors;\n    selectedLanguage?: string | null;\n    hideLanguages?: LanguagesArg;\n    hideEthnicity?: EthnicityArg;\n    hideIds?: IdsArg;\n    hideSex?: SexArg;\n}\n\nclass ChartWrapper {\n    private chart?: ChartHandle;\n    /** Animation is in progress. */\n    private animating = false;\n    /** Rendering is required after the current animation finishes. */\n    private rerenderRequired = false;\n    /** The d3 zoom behavior object. */\n    private zoomBehavior?: ZoomBehavior<Element, any>;\n    /** Props that will be used for re-rendering. */\n    private rerenderProps?: ChartProps;\n    private rerenderResetPosition?: boolean;\n\n    zoom(factor: number) {\n        const parent = select(\"#svgContainer\") as Selection<Element, any, any, any>;\n        this.zoomBehavior!.scaleBy(parent, factor);\n    }\n\n    /**\n     * Renders the chart or performs a transition animation to a new state.\n     * If indiInfo is not given, it means that it is the initial render and no animation is performed.\n     */\n    renderChart(\n        props: ChartProps,\n        intl: IntlShape,\n        args: { initialRender: boolean; resetPosition: boolean } = {\n            initialRender: false,\n            resetPosition: false,\n        },\n    ) {\n        // Wait for animation to finish if animation is in progress.\n        if (!args.initialRender && this.animating) {\n            this.rerenderRequired = true;\n            this.rerenderProps = props;\n            this.rerenderResetPosition = args.resetPosition;\n            return;\n        }\n\n        // Freeze changing selection after initial rendering.\n        if (!args.initialRender && props.freezeAnimation) {\n            return;\n        }\n\n        if (args.initialRender) {\n            (select(\"#chart\").node() as HTMLElement).innerHTML = '';\n            this.chart = createChart({\n                json: props.data,\n                chartType: HourglassChart,\n                renderer: DetailedRenderer,\n                svgSelector: \"#chart\",\n                indiCallback: (info) => props.onSelection(info),\n                colors: chartColors.get(props.colors!),\n                selectedLanguage: props.selectedLanguage,\n                animate: true,\n                updateSvgSize: false,\n                locale: intl.locale,\n            });\n        } else {\n            this.chart!.setData(props.data);\n        }\n\n        const chartInfo = this.chart!.render({\n            startIndi: props.selection.id,\n            baseGeneration: props.selection.generation,\n        });\n        const svg = select(\"#chartSvg\");\n        const parent = select(\"#svgContainer\").node() as Element;\n        const scale = zoomTransform(parent).k;\n        const zoomOutFactor = min([\n            1,\n            scale,\n            parent.clientWidth / chartInfo.size[0],\n            parent.clientHeight / chartInfo.size[1],\n        ])!;\n        const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n        this.zoomBehavior = zoom()\n            .scaleExtent(extent)\n            .translateExtent([[0, 0], chartInfo.size])\n            .on(\"zoom\", (event) => zoomed(chartInfo.size, event));\n        select(parent).on(\"scroll\", scrolled).call(this.zoomBehavior);\n\n        const scrollTopTween = (scrollTop: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollTop, scrollTop);\n                return (t: number) => {\n                    parent.scrollTop = i(t);\n                };\n            };\n        };\n\n        const scrollLeftTween = (scrollLeft: number) => {\n            return () => {\n                const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n                return (t: number) => {\n                    parent.scrollLeft = i(t);\n                };\n            };\n        };\n\n        const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n        const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n        const offsetX = max([\n            0,\n            (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n        ]);\n        const offsetY = max([\n            0,\n            (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n        ]);\n        const svgTransition = svg.transition().delay(200).duration(500);\n        const transition = args.initialRender ? svg : svgTransition;\n        transition\n            .attr(\"transform\", `translate(${offsetX}, ${offsetY})`)\n            .attr(\"width\", chartInfo.size[0] * scale)\n            .attr(\"height\", chartInfo.size[1] * scale);\n        if (args.resetPosition) {\n            if (args.initialRender) {\n                parent.scrollLeft = -dx;\n                parent.scrollTop = -dy;\n            } else {\n                svgTransition\n                    .tween(\"scrollLeft\", scrollLeftTween(-dx))\n                    .tween(\"scrollTop\", scrollTopTween(-dy));\n            }\n        }\n\n        // After the animation is finished, rerender the chart if required.\n        this.animating = true;\n        chartInfo.animationPromise.then(() => {\n            this.animating = false;\n            if (this.rerenderRequired) {\n                this.rerenderRequired = false;\n                // Use `this.rerenderProps` instead of the props in scope because\n                // the props may have been updated in the meantime.\n                this.renderChart(this.rerenderProps!, intl, {\n                    initialRender: false,\n                    resetPosition: !!this.rerenderResetPosition,\n                });\n            }\n        });\n    }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n    const ref = useRef<T>();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n    const chartWrapper = useRef(new ChartWrapper());\n    const prevProps = usePrevious(props);\n    const intl = useIntl();\n\n    useEffect(() => {\n        if (prevProps) {\n            const initialRender =\n                props.chartType !== prevProps?.chartType ||\n                props.colors !== prevProps?.colors ||\n                props.selectedLanguage !== prevProps?.selectedLanguage ||\n                props.hideLanguages !== prevProps?.hideLanguages ||\n                props.hideEthnicity !== prevProps?.hideEthnicity ||\n                props.hideIds !== prevProps?.hideIds ||\n                props.hideSex !== prevProps?.hideSex;\n            const resetPosition =\n                props.chartType !== prevProps?.chartType ||\n                props.data !== prevProps.data ||\n                props.selection !== prevProps.selection;\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender,\n                resetPosition,\n            });\n        } else {\n            chartWrapper.current.renderChart(props, intl, {\n                initialRender: true,\n                resetPosition: true,\n            });\n        }\n    });\n\n    return (\n        <div id=\"svgContainer\">\n            <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n                <button className=\"zoom-in\" onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}>+</button>\n                <button className=\"zoom-out\" onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}>−</button>\n            </Media>\n            <svg id=\"chartSvg\">\n                <g id=\"chart\"/>\n            </svg>\n        </div>\n    );\n}\n","export interface Language {\n    id: string;\n    name: string;\n    iso?: string | null;\n    abbreviation?: string;\n}\n\nexport default class CSVLoader {\n    // Singleton\n    private static csvData: Language[] | null = null;\n\n    static async loadLanguages(filePath: string) {\n        if (CSVLoader.csvData) {\n            return CSVLoader.csvData;\n        }\n        try {\n            const data = await fetch(filePath);\n            const text = await data.text();\n\n            const rows = text.trim().split('\\n');\n            const headers = rows[0].split(',');\n\n            const idIndex = headers.indexOf('id');\n            const nameIndex = headers.indexOf('name');\n            const isoIndex = headers.indexOf('ISO 639-3');\n\n            CSVLoader.csvData = rows.slice(1).map(row => {\n                const values = row.split(',');\n                return {\n                    id: values[idIndex],\n                    name: CSVLoader.title_fn(values[nameIndex]),\n                    iso: values[isoIndex],\n                    abbreviation: values[isoIndex].toUpperCase() || (values[nameIndex].slice(0, 3).toUpperCase() + '*')\n                } as Language;\n            });\n            return CSVLoader.csvData;\n        } catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n\n    private static title_fn = (str: string) =>\n        str.split(/[-_\\s]/) // Split by hyphen, underscore, or space\n           .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n           .join('-');\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from './lib/topola';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {GedcomData, idToIndiMap, jsonToGedcom, TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n    Chart,\n    ChartType,\n    downloadGedcom,\n    downloadPdf,\n    downloadPng,\n    downloadSvg,\n    getFilename\n} from './chart';\nimport {\n    GedcomUrlDataSource,\n    getSelection,\n    UploadedDataSource,\n    UploadSourceSpec,\n    UrlSourceSpec\n} from './datasource/load_data';\nimport CSVLoader, {Language} from \"./languages/languages-loader\";\nimport {\n    argsToConfig,\n    Config,\n    ConfigPanel,\n    configToArgs,\n    DEFAULT_CONFIG,\n    EthnicityArg,\n    IdsArg,\n    LanguagesArg,\n    SexArg\n} from './config';\n\n\n/**\n * Load GEDCOM URL from REACT_APP_STATIC_URL environment variable.\n *\n * If this environment variable is provided, the viewer is switched to\n * single-tree mode without the option to load other data.\n */\nconst staticUrl = process.env.REACT_APP_STATIC_URL;\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: { message?: string }) {\n    return (\n        <Message negative className=\"error\">\n            <Message.Header>\n                <FormattedMessage\n                    id=\"error.failed_to_load_file\"\n                    defaultMessage={'Failed to load file'}\n                />\n            </Message.Header>\n            <p>{props.message}</p>\n        </Message>\n    );\n}\n\ninterface ErrorPopupProps {\n    message?: string;\n    open: boolean;\n    onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n    return (\n        <Portal open={props.open} onClose={props.onDismiss}>\n            <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n                <Message.Header>\n                    <FormattedMessage id=\"error.error\" defaultMessage={'Error'}/>\n                </Message.Header>\n                <p>{props.message}</p>\n            </Message>\n        </Portal>\n    );\n}\n\nenum AppState {\n    INITIAL,\n    LOADING,\n    ERROR,\n    SHOWING_CHART,\n    LOADING_MORE\n}\n\ntype DataSourceSpec = UrlSourceSpec | UploadSourceSpec | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n    sourceSpec?: DataSourceSpec;\n    selection?: IndiInfo;\n    chartType: ChartType;\n    standalone: boolean;\n    freezeAnimation: boolean;\n    showSidePanel: boolean;\n    config: Config;\n}\n\nfunction getParamFromSearch(name: string, search: queryString.ParsedQuery) {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n}\n\nfunction startIndi(data: TopolaData | undefined) {\n    const egoGen = getEgoGen(data)\n    return {\n        id: getLowestId(data) || 'I0',  // lowest ID on the chart, focus at the root, not at the EGO\n        generation: egoGen !== undefined ? -parseInt(egoGen, 10) : 0\n    };\n}\n\nfunction getEgoGen(data: TopolaData | undefined) {\n    return getEgoRecord(data?.gedcom)\n        .map(([_, value]) => value.tree.find(sub => sub.tag === \"GEN\")?.data)\n        .find(data => data !== undefined);\n}\n\nexport function getEgoRecord(gedcom: GedcomData | undefined) {\n    return Object.entries(gedcom?.other || {}).filter(([_, value]) => value.tag === \"EGO\")\n}\n\nfunction getLowestId(data: TopolaData | undefined) {\n    return data?.chartData?.indis?.reduce((lowest, current) =>\n            current.id.startsWith('I') && parseInt(current.id.slice(1), 10) < parseInt(lowest.id.slice(1), 10)\n            ? current\n            : lowest,\n        data?.chartData?.indis?.[0]\n    )?.id;\n}\n\nfunction loadLanguageOptions(data: TopolaData | undefined, allLanguages: Language[]) {\n    const gedcomLanguages = Array.from(getGedcomLanguages(data));\n    return allLanguages.filter((l: Language) => gedcomLanguages.includes(l.name)).sort();\n}\n\nfunction getGedcomLanguages(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"LANG\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\nfunction getEthnicities(data: TopolaData | undefined) {\n    return Object.entries(data?.gedcom?.indis || {})\n        .reduce<Set<string>>((acc, [_, value]) => {\n            const langDataArray = value.tree.filter((sub: any) => sub.tag === \"_ETHN\");\n            langDataArray.forEach(lang => {\n                if (lang.data) acc.add(lang.data);\n            });\n            return acc;\n        }, new Set<string>());\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded data.\n */\nfunction getArguments(location: H.Location<any>, allLanguages: Language[]): Arguments {\n    const search = queryString.parse(location.search);\n    const getParam = (name: string) => getParamFromSearch(name, search);\n    const hash = getParam('file');\n    const url = getParam('url');\n    const embedded = getParam('embedded') === 'true'; // False by default.\n    let sourceSpec: DataSourceSpec | undefined = undefined;\n    if (staticUrl) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url: staticUrl,\n            handleCors: false,\n            allLanguages: allLanguages\n        };\n    } else if (hash) {\n        sourceSpec = {\n            source: DataSourceEnum.UPLOADED,\n            hash,\n            gedcom: location.state && location.state.data,\n            allLanguages: allLanguages,\n            images: location.state && location.state.images,\n        };\n    } else if (url) {\n        sourceSpec = {\n            source: DataSourceEnum.GEDCOM_URL,\n            url,\n            allLanguages: allLanguages,\n            handleCors: getParam('handleCors') !== 'false', // True by default.\n        };\n    } else if (embedded) {\n        sourceSpec = {source: DataSourceEnum.EMBEDDED};\n    }\n\n    const indi = getParam('indi');\n    const parsedGen = Number(getParam('gen'));\n    const selection = indi\n        ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n        : undefined\n\n    return {\n        sourceSpec,\n        selection,\n        chartType: ChartType.Hourglass,\n        showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n        standalone: getParam('standalone') !== 'false' && !embedded && !staticUrl,\n        freezeAnimation: getParam('freeze') === 'true', // False by default\n        config: argsToConfig(search),\n    };\n}\n\nexport function App() {\n    /** State of the application. */\n    const [state, setState] = useState<AppState>(AppState.INITIAL);\n    /** Loaded data. */\n    const [data, setData] = useState<TopolaData>();\n    /** Selected individual. */\n    const [selection, setSelection] = useState<IndiInfo>();\n    /** Error to display. */\n    const [error, setError] = useState<string>();\n    /** Whether the side panel is shown. */\n    const [showSidePanel, setShowSidePanel] = useState(false);\n    /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n    const [standalone, setStandalone] = useState(true);\n    /** Type of displayed chart. */\n    const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n    /** Whether to show the error popup. */\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    /** Specification of the source of the data. */\n    const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n    const [gedcomString, setGedcomString] = useState<String>()\n    /** Freeze animations after initial chart render. */\n    const [freezeAnimation, setFreezeAnimation] = useState(false);\n    const [config, setConfig] = useState(DEFAULT_CONFIG);\n    /** All languages. */\n    const [allLanguages, setAllLanguages] = useState<Language[]>([]);\n\n\n    const intl = useIntl();\n    const history = useHistory();\n    const location = useLocation();\n\n    /** Sets the state with a new individual selection and chart type. */\n    function updateDisplay(newSelection: IndiInfo) {\n        if (!selection || selection.id !== newSelection.id || selection!.generation !== newSelection.generation) {\n            setSelection(newSelection);\n        }\n    }\n\n    function toggleDetails(config: Config, data: TopolaData | undefined, allLanguages: Language[]) {\n        if (data === undefined) {\n            return;\n        }\n        // Find if there are languages\n        config.languageOptions = loadLanguageOptions(data, allLanguages)\n        config.renderLanguagesOption = config.languageOptions.length > 0\n        // Find if there are ethnicities/tribes\n        config.renderEthnicityOption = Array.from(getEthnicities(data)).length > 0\n        idToIndiMap(data.chartData).forEach((indi) => {\n            indi.hideLanguages = config.languages === LanguagesArg.HIDE;\n            indi.hideEthnicity = config.ethnicity === EthnicityArg.HIDE;\n            indi.hideId = config.id === IdsArg.HIDE;\n            indi.hideSex = config.sex === SexArg.HIDE;\n        });\n    }\n\n    /** Sets error message after data load failure. */\n    function setErrorMessage(message: string) {\n        setError(message);\n        setState(AppState.ERROR);\n    }\n\n    const uploadedDataSource = new UploadedDataSource();\n    const gedcomUrlDataSource = new GedcomUrlDataSource();\n    const embeddedDataSource = new EmbeddedDataSource();\n\n    function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n        if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n            // New data source means new data\n            return true;\n        }\n        const newSource = {spec: newSourceSpec, selection: newSelection};\n        const oldSource = {\n            spec: sourceSpec,\n            selection: selection,\n        };\n        switch (newSource.spec.source) {\n            case DataSourceEnum.UPLOADED:\n                return uploadedDataSource.isNewData(\n                    newSource as SourceSelection<UploadSourceSpec>,\n                    oldSource as SourceSelection<UploadSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.GEDCOM_URL:\n                return gedcomUrlDataSource.isNewData(\n                    newSource as SourceSelection<UrlSourceSpec>,\n                    oldSource as SourceSelection<UrlSourceSpec>,\n                    data,\n                );\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.isNewData(\n                    newSource as SourceSelection<EmbeddedSourceSpec>,\n                    oldSource as SourceSelection<EmbeddedSourceSpec>,\n                    data,\n                );\n        }\n    }\n\n    function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo, allLanguages?: Language[]) {\n        switch (newSourceSpec.source) {\n            case DataSourceEnum.UPLOADED:\n                analyticsEvent('topola_gedcom_upload');\n                return uploadedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.GEDCOM_URL:\n                analyticsEvent('topola_url_load');\n                return gedcomUrlDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n            case DataSourceEnum.EMBEDDED:\n                return embeddedDataSource.loadData({spec: newSourceSpec, selection: newSelection, allLanguages: allLanguages});\n        }\n    }\n\n    // Function to load languages from CSV\n    const loadAllLanguages = async () => {\n        const allLanguages = await CSVLoader.loadLanguages(\"data/languages.csv\") || [];\n        setAllLanguages(allLanguages);\n    };\n\n    // useEffect to load languages when pathname is '/view'\n    useEffect(() => {\n        loadAllLanguages();\n    }, [location.pathname]);\n\n    useEffect(() => {\n        analyticsEvent('topola_landing');\n        const rootElement = document.getElementById('root');\n        if (location.pathname === '/') {\n            // @ts-ignore\n            rootElement.classList.add('bgLogo');\n        } else {\n            // @ts-ignore\n            rootElement.classList.remove('bgLogo');\n        }\n\n        (async () => {\n            if (location.pathname !== '/view') {\n                if (state !== AppState.INITIAL) {\n                    setState(AppState.INITIAL);\n                }\n                return;\n            }\n\n            const args = getArguments(location, allLanguages);\n            if (!args.sourceSpec) {\n                history.replace({pathname: '/'});\n                return;\n            }\n            if (\n                state === AppState.INITIAL || isNewData(args.sourceSpec, args.selection)\n            ) {\n                setState(AppState.LOADING);\n                setSourceSpec(args.sourceSpec);\n                setStandalone(args.standalone);\n                setChartType(args.chartType);\n                setFreezeAnimation(args.freezeAnimation);\n                setConfig(args.config);\n                try {\n                    const data = await loadData(args.sourceSpec, args.selection);\n                    setData(data);\n                    setGedcomString(jsonToGedcom(data.gedcom))\n                    setSelection(args.selection !== undefined ? args.selection : startIndi(data));\n                    toggleDetails(args.config, data, allLanguages);\n                    setShowSidePanel(args.showSidePanel);\n                    setState(AppState.SHOWING_CHART);\n                } catch (error: any) {\n                    setErrorMessage(getI18nMessage(error, intl));\n                }\n            } else if (\n                state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE\n            ) {\n                setChartType(args.chartType);\n                setState(AppState.SHOWING_CHART);\n                updateDisplay(args.selection !== undefined ? args.selection : startIndi(data));\n            }\n        })();\n    });\n\n    function updateUrl(args: queryString.ParsedQuery<any>) {\n        const search = queryString.parse(location.search);\n        for (const key in args) {\n            search[key] = args[key];\n        }\n        location.search = queryString.stringify(search);\n        history.push(location);\n    }\n\n    /**\n     * Called when the user clicks an individual box in the chart. Updates the browser URL.\n     */\n    function onSelection(selection: IndiInfo) {\n        updateUrl({\n            indi: selection.id,\n            gen: selection.generation,\n        });\n    }\n\n    function displayErrorPopup(message: string) {\n        setShowErrorPopup(true);\n        setError(message);\n    }\n\n    async function onDownloadPdf() {\n        try {\n            analyticsEvent('topola_download_pdf');\n            const filename = getFilename(data?.gedcom)\n            await downloadPdf(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_pdf',\n                    defaultMessage: 'Failed to generate PDF file. Please try with a smaller diagram or download an SVG file.',\n                })\n            );\n        }\n    }\n\n    async function onDownloadPng() {\n        try {\n            analyticsEvent('topola_download_png');\n            const filename = getFilename(data?.gedcom)\n            await downloadPng(filename);\n        } catch (e) {\n            displayErrorPopup(\n                intl.formatMessage({\n                    id: 'error.failed_png',\n                    defaultMessage:'Failed to generate PNG file. Please try with a smaller diagram or download an SVG file.'\n                })\n            );\n        }\n    }\n\n    async function onDownloadSvg() {\n        analyticsEvent('topola_download_svg');\n        const filename = getFilename(data?.gedcom)\n        await downloadSvg(filename);\n    }\n\n    async function onDownloadGedcom() {\n        analyticsEvent('topola_download_gedcom');\n        const filename = getFilename(data?.gedcom)\n        await downloadGedcom(gedcomString as string, filename);\n    }\n\n    function onCenterView() {\n        onSelection(startIndi(data))\n    }\n\n    function onDismissErrorPopup() {\n        setShowErrorPopup(false);\n    }\n\n    function renderMainArea() {\n        switch (state) {\n            case AppState.SHOWING_CHART:\n            case AppState.LOADING_MORE:\n                const updatedSelection = getSelection(data!.chartData, selection);\n                const sidePanelTabs = [\n                    {\n                        menuItem: intl.formatMessage({id: 'tab.info', defaultMessage: 'Info'}),\n                        render: () => (\n                            <Details gedcom={data!.gedcom} indi={updatedSelection.id}/>\n                        ),\n                    },\n                    {\n                        menuItem: intl.formatMessage({\n                            id: 'tab.settings',\n                            defaultMessage: 'Settings',\n                        }),\n                        render: () => (\n                            <ConfigPanel\n                                config={config}\n                                onChange={(config) => {\n                                    setConfig(config);\n                                    toggleDetails(config, data, allLanguages);\n                                    updateUrl(configToArgs(config));\n                                }}\n                            />\n                        ),\n                    },\n                ];\n                return (\n                    <div id=\"content\">\n                        <ErrorPopup\n                            open={showErrorPopup}\n                            message={error}\n                            onDismiss={onDismissErrorPopup}\n                        />\n                        {state === AppState.LOADING_MORE ? (\n                            <Loader active size=\"small\" className=\"loading-more\"/>\n                        ) : null}\n                        <Chart\n                            data={data!.chartData}\n                            selection={updatedSelection}\n                            chartType={chartType}\n                            onSelection={onSelection}\n                            freezeAnimation={freezeAnimation}\n                            colors={config.color}\n                            selectedLanguage={config.selectedLanguage}\n                            hideLanguages={config.languages}\n                            hideEthnicity={config.ethnicity}\n                            hideIds={config.id}\n                            hideSex={config.sex}\n                        />\n                        {showSidePanel ? (\n                            <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                                <Tab panes={sidePanelTabs}/>\n                            </Media>\n                        ) : null}\n                    </div>\n                );\n            case AppState.ERROR:\n                return <ErrorMessage message={error!}/>;\n            case AppState.INITIAL:\n            case AppState.LOADING:\n                return <Loader active size=\"large\"/>;\n        }\n    }\n    return (\n        <>\n            <Route\n                render={() => (\n                    <TopBar\n                        data={data?.chartData}\n                        showingChart={\n                            history.location.pathname === '/view' &&\n                            (state === AppState.SHOWING_CHART || state === AppState.LOADING_MORE)\n                        }\n                        standalone={standalone}\n                        eventHandlers={{\n                            onSelection,\n                            onDownloadPdf,\n                            onDownloadPng,\n                            onDownloadSvg,\n                            onDownloadGedcom,\n                            onCenterView,\n                        }}\n                    />\n                )}\n            />\n            {staticUrl ? (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/view'}/>\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/view\" render={renderMainArea}/>\n                    <Redirect to={'/'}/>\n                </Switch>\n            )}\n        </>\n    );\n}\n\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_es from './translations/es.json';\nimport messages_pl from './translations/pl.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n    de: messages_de,\n    fr: messages_fr,\n    it: messages_it,\n    es: messages_es,\n    pl: messages_pl\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n    ReactDOM.render(\n        <p>Genealogy Viewer does not support Internet Explorer. Please try a different (modern) browser.</p>,\n        document.querySelector('#root'),\n    );\n} else {\n    ReactDOM.render(\n        <IntlProvider locale={language} messages={messages[language]}>\n            <MediaContextProvider>\n                <style>{mediaStyles}</style>\n                <Router>\n                    <Route component={App}/>\n                </Router>\n            </MediaContextProvider>\n        </IntlProvider>,\n        document.querySelector('#root'),\n    );\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from '../lib/topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n    ['abt', 'about'],\n    ['cal', 'calculated'],\n    ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n    const hasDay = date.day !== undefined;\n    const hasMonth = date.month !== undefined;\n    const hasYear = date.year !== undefined;\n    if (!hasDay && !hasMonth && !hasYear) {\n        return date.text || '';\n    }\n    const dateObject = toDateObject(date);\n    const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n    const formatOptions: Intl.DateTimeFormatOptions = {\n        day: hasDay ? 'numeric' : undefined,\n        month: hasMonth ? 'long' : undefined,\n        year: hasYear ? 'numeric' : undefined,\n    };\n    const translatedDate = new Intl.DateTimeFormat(\n        intl.locale,\n        formatOptions,\n    ).format(dateObject);\n\n    return [translatedQualifier, translatedDate]\n        .filter((dateElement) => dateElement)\n        .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to;\n    const translatedFromDate = fromDate && formatDate(fromDate, intl);\n    const translatedToDate = toDate && formatDate(toDate, intl);\n    if (translatedFromDate && translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.between',\n                defaultMessage: 'between {from} and {to}',\n            },\n            {from: translatedFromDate, to: translatedToDate},\n        );\n    }\n    if (translatedFromDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.after',\n                defaultMessage: 'after {from}',\n            },\n            {from: translatedFromDate},\n        );\n    }\n    if (translatedToDate) {\n        return intl.formatMessage(\n            {\n                id: 'date.before',\n                defaultMessage: 'before {to}',\n            },\n            {to: translatedToDate},\n        );\n    }\n    return '';\n}\n\nexport function formatDateQualifier(\n    qualifier: string | undefined,\n    intl: IntlShape,\n): string {\n    const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n    return (\n        (lowerCaseQualifier &&\n            intl.formatMessage({\n                id: `date.${lowerCaseQualifier}`,\n                defaultMessage:\n                    DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n            })) ||\n        ''\n    );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n    intl: IntlShape,\n): string {\n    if (!dateOrRange) {\n        return '';\n    }\n    if (dateOrRange.date) {\n        return formatDate(dateOrRange.date, intl);\n    }\n    if (dateOrRange.dateRange) {\n        return formatDateRage(dateOrRange.dateRange, intl);\n    }\n    return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n    return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n    date1: TopolaDate | undefined,\n    date2: TopolaDate | undefined,\n): number {\n    if (!date1 || !date1.year || !date2 || !date2.year) {\n        return 0;\n    }\n    if (date1.year !== date2.year) {\n        return date1.year - date2.year;\n    }\n    if (!date1.month || !date2.month) {\n        return 0;\n    }\n    if (date1.month !== date2.month) {\n        return date1.month - date2.month;\n    }\n    if (date1.day && date2.day && date1.day !== date2.day) {\n        return date1.month - date2.month;\n    }\n    return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n    firstDateOrRange: DateOrRange | undefined,\n    secondDateOrRange: DateOrRange | undefined,\n): number {\n    const date1 =\n        firstDateOrRange &&\n        (firstDateOrRange.date ||\n            (firstDateOrRange.dateRange &&\n                (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n    const date2 =\n        secondDateOrRange &&\n        (secondDateOrRange.date ||\n            (secondDateOrRange.dateRange &&\n                (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n    return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n    range1: DateRange,\n    range2: DateRange,\n): boolean {\n    return (\n        compareTopolaDates(range1.from, range2.to) <= 0 &&\n        compareTopolaDates(range1.to, range2.from) >= 0\n    );\n}\n\nexport function isValidDateOrRange(\n    dateOrRange: DateOrRange | undefined,\n): boolean {\n    // invalid when range is closed and start is before end\n    if (isDateRangeClosed(dateOrRange?.dateRange)) {\n        return (\n            compareTopolaDates(\n                dateOrRange?.dateRange?.from,\n                dateOrRange?.dateRange?.to,\n            ) <= 0\n        );\n    }\n    //valid when there is exact date or date range has start or end defined\n    return !!(\n        dateOrRange?.date ||\n        dateOrRange?.dateRange?.from ||\n        dateOrRange?.dateRange?.to\n    );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n    return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n    return new Date(\n        date.year !== undefined ? date.year! : 0,\n        date.month !== undefined ? date.month! - 1 : 0,\n        date.day !== undefined ? date.day! : 1,\n    );\n}\n","import {convertGedcom, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from '../lib/topola';\nimport {TopolaError} from '../util/error';\nimport AdmZip from 'adm-zip';\nimport {Language} from \"../languages/languages-loader\";\n\nexport interface UploadSourceSpec {\n    source: DataSourceEnum.UPLOADED;\n    gedcom: string;\n    allLanguages: Language[];\n    hash: string;\n    images?: Map<string, string>;\n}\n\nexport interface UrlSourceSpec {\n    source: DataSourceEnum.GEDCOM_URL;\n    url: string;\n    allLanguages: Language[];\n    handleCors: boolean;\n}\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(data: JsonGedcomData, selection?: IndiInfo): IndiInfo {\n    // If ID is not given, or it doesn't exist in the data, use the first ID in the data.\n    const id = selection && data.indis.some((i) => i.id === selection.id)\n        ? selection.id\n        : data.indis[0].id;\n    return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n    gedcom: string,\n    cacheId: string,\n    allLanguages: Language[],\n    images?: Map<string, string>\n): TopolaData {\n    const data = convertGedcom(gedcom, allLanguages, images || new Map());\n    const serializedData = JSON.stringify(data);\n    try {\n        sessionStorage.setItem(cacheId, serializedData);\n    } catch (e) {\n        console.warn('Failed to store data in session storage: ' + e);\n    }\n    return data;\n}\n\nasync function loadGedzip(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const zip = new AdmZip(Buffer.from(await blob.arrayBuffer()));\n    const entries = zip.getEntries();\n    let gedcom = undefined;\n    const images = new Map<string, string>();\n    for (const entry of entries) {\n        if (entry.entryName.endsWith('.ged')) {\n            if (gedcom) {\n                console.warn('Multiple GEDCOM files found in zip archive.');\n            } else {\n                gedcom = entry.getData().toString();\n            }\n        } else {\n            // Save image for later.\n            images.set(\n                entry.entryName,\n                URL.createObjectURL(new Blob([entry.getData()])),\n            );\n        }\n    }\n    if (!gedcom) {\n        throw new Error('GEDCOM file not found in zip archive.');\n    }\n    return {gedcom, images};\n}\n\nexport async function loadFile(blob: Blob): Promise<{ gedcom: string; images: Map<string, string> }> {\n    const fileHeader = await blob.slice(0, 2).text();\n    if (fileHeader === 'PK') {\n        return loadGedzip(blob);\n    }\n    return {gedcom: await blob.text(), images: new Map()};\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n    url: string,\n    handleCors: boolean,\n    allLanguages: Language[]\n) {\n    try {\n        const cachedData = sessionStorage.getItem(url);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n\n    // handle GoogleDrive files\n    const driveUrlMatch = url.match(\n        /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n    );\n    if (driveUrlMatch) {\n        url = `https://drive.google.com/uc?id=${driveUrlMatch[1]}&export=download`;\n    }\n\n    const urlToFetch = handleCors ? 'https://universal-cors-proxy.glitch.me/' + encodeURIComponent(url) : url;\n    const response = await fetch(urlToFetch);\n    if (!response.ok) {\n        throw new Error(response.statusText);\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.includes(\"application/zip\")) {\n        const data = await response.blob();\n        const {gedcom, images} = await loadFile(data)\n        return prepareData(gedcom, url, allLanguages, images);\n    } else if (contentType && contentType.includes(\"application/json\")) {\n        const data = await response.json();\n        return prepareData(data.contents, url, allLanguages, new Map());\n    } else if (contentType && (contentType.includes(\"text/plain\") || contentType.includes(\"text/html\"))) {\n        let data = await response.text();\n        while (data.charCodeAt(0) > 127) {\n            data = data.slice(1);\n        }\n        return prepareData(data, url, allLanguages, new Map());\n    }\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n    hash: string,\n    gedcom?: string,\n    allLanguages?: Language[],\n    images?: Map<string, string>\n): Promise<TopolaData> {\n    try {\n        const cachedData = sessionStorage.getItem(hash);\n        if (cachedData) {\n            return JSON.parse(cachedData);\n        }\n    } catch (e) {\n        console.warn('Failed to load data from session storage: ' + e);\n    }\n    if ((!gedcom) || (!allLanguages)) {\n        throw new TopolaError('ERROR_LOADING_UPLOADED_FILE',\n            'Error loading data. Please upload your file again.',\n        );\n    }\n    return prepareData(gedcom, hash, allLanguages, images);\n}\n\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n    isNewData(\n        newSource: SourceSelection<UploadSourceSpec>,\n        oldSource: SourceSelection<UploadSourceSpec>,\n        data?: TopolaData,\n    ): boolean {\n        return newSource.spec.hash !== oldSource.spec.hash;\n    }\n\n    async loadData(source: SourceSelection<UploadSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadGedcom(\n                source.spec.hash,\n                source.spec.gedcom,\n                source.spec.allLanguages,\n                source.spec.images,\n            );\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n    isNewData(newSource: SourceSelection<UrlSourceSpec>, oldSource: SourceSelection<UrlSourceSpec>, data?: TopolaData) {\n        return newSource.spec.url !== oldSource.spec.url;\n    }\n    async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n        try {\n            return await loadFromUrl(source.spec.url, source.spec.handleCors, source.spec.allLanguages);\n        } catch (error) {\n            throw error;\n        }\n    }\n}"],"sourceRoot":""}